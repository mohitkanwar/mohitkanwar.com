<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Authentication on Mohit Kanwar&#39;s App : My Cents</title>
    <link>http://localhost:1313/tags/authentication/</link>
    <description>Recent content in Authentication on Mohit Kanwar&#39;s App : My Cents</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Jul 2024 14:31:54 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/authentication/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Authenticating Services in a Microservices Environment</title>
      <link>http://localhost:1313/blogs/2024/jul/authenticating-services-in-a-microservices-environment/</link>
      <pubDate>Wed, 17 Jul 2024 14:31:54 +0530</pubDate>
      <guid>http://localhost:1313/blogs/2024/jul/authenticating-services-in-a-microservices-environment/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;It is easier to edit a draft than to create a new. I   understand that this blog is not upto the mark that I want it to be, however, I am still publishing it, so that I can keep on improving it.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;The code for this blog is checked-in at &lt;a href=&#34;https://github.com/mohitkanwar/spring-microservices-framework&#34;&gt;https://github.com/mohitkanwar/spring-microservices-framework&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;While developing a microservices setup, one of the prime aspect is taking care of the security of the APIs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Application Security Verification Standard</title>
      <link>http://localhost:1313/blogs/2024/mar/application-security-verification-standard/</link>
      <pubDate>Sun, 10 Mar 2024 10:11:38 +0530</pubDate>
      <guid>http://localhost:1313/blogs/2024/mar/application-security-verification-standard/</guid>
      <description>&lt;h1 id=&#34;application-security-verification-standards&#34;&gt;Application Security Verification Standards&lt;/h1&gt;&#xA;&lt;p&gt;Ensuring the security of an application is a complex task. To simplify this process, OWASP (Open Web Application Security Project) has developed &lt;cite&gt;a standardized approach&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/cite&gt; aimed at gauging and enhancing application security. Application Security Verification Standards a.k.a ASVS framework not only assists in evaluating the security posture of an application but also empowers development teams to build robust and secure software.&lt;/p&gt;&#xA;&lt;p&gt;Consider a scenario where a fintech company is developing a new banking application. By incorporating OWASP&amp;rsquo;s recommendations into their development process, they can systematically identify and address security weaknesses, safeguard sensitive financial information and bolster customer trust.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Broken Access Control</title>
      <link>http://localhost:1313/blogs/2024/feb/broken-access-control/</link>
      <pubDate>Mon, 12 Feb 2024 17:37:07 +0530</pubDate>
      <guid>http://localhost:1313/blogs/2024/feb/broken-access-control/</guid>
      <description>&lt;h1 id=&#34;access-control-in-owasp-top-10&#34;&gt;Access Control in OWASP top 10&lt;/h1&gt;&#xA;&lt;p&gt;Access control is a crucial aspect of application security that ensures users can only perform actions within their authorized permissions. However, broken access control vulnerabilities can lead to unauthorized access, data breaches, and other security risks. In this blog, I want to talk about a very common observation that I have while reviewing codes. Well, not only observed by me, broken access control is the number one in &lt;a href=&#34;https://owasp.org/Top10/A01_2021-Broken_Access_Control/&#34;&gt;OWASP Top 10 2021 list&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sim Binding</title>
      <link>http://localhost:1313/blogs/sim-binding/</link>
      <pubDate>Sat, 10 Feb 2024 13:08:10 +0530</pubDate>
      <guid>http://localhost:1313/blogs/sim-binding/</guid>
      <description>&lt;h1 id=&#34;sim-binding&#34;&gt;Sim Binding&lt;/h1&gt;&#xA;&lt;p&gt;Sim binding is a process requirement by RBI to provide secure mobile applications. The RBI has issued the Master Direction on Digital Payment Security Controls to ensure the security of digital payment systems. The directions apply to scheduled commercial banks, small finance banks, payments banks, and credit card issuing NBFCs. The guidelines emphasize the need for a robust governance structure and implementation of security controls for digital payment products and services.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
