[{"content":"\u003ch1 id=\"objective\"\u003eObjective\u003c/h1\u003e\n\u003cp\u003eTo design and implement a scalable, secure, and reliable URL Shortener Service that converts long URLs into short, shareable links while ensuring fast redirection, high availability, and optional advanced features like analytics, expiration, and custom aliases.\u003c/p\u003e\n\u003cdiv class=\"tabs\"\u003e\n    \u003cul class=\"tab-list\"\u003e\n      \n  \n\u003cli\u003e\u003ca href=\"#functional-requirements\"\u003eFunctional Requirements\u003c/a\u003e\u003c/li\u003e\n\u003cdiv id=\"functional-requirements\" class=\"tab-panel\"\u003e\n  \u003chr\u003e\n  \u003ch2 id=\"weight-1\"\u003etitle: \u0026ldquo;Functional Requirements\u0026rdquo;\n  tab: \u0026ldquo;Functional Requirements\u0026rdquo;\n  weight: 1\u003c/h2\u003e\n  \u003cp\u003eHere are the functional requirements\u0026hellip;\u003c/p\u003e\n\u003c/div\u003e\n\n\n  \n\u003cli\u003e\u003ca href=\"#architecture\"\u003eArchitecture\u003c/a\u003e\u003c/li\u003e\n\u003cdiv id=\"architecture\" class=\"tab-panel\"\u003e\n  \u003chr\u003e\n  \u003ch2 id=\"weight-2\"\u003etitle: \u0026ldquo;Technical Architecture\u0026rdquo;\n  tab: \u0026ldquo;Architecture\u0026rdquo;\n  weight: 2\u003c/h2\u003e\n  \u003cp\u003eDiagram and explanation here\u0026hellip;\u003c/p\u003e\n\u003c/div\u003e\n\n\n  \n\u003cli\u003e\u003ca href=\"#code\"\u003eCode\u003c/a\u003e\u003c/li\u003e\n\u003cdiv id=\"code\" class=\"tab-panel\"\u003e\n  \n\u003c/div\u003e\n\n\n  \n\u003cli\u003e\u003ca href=\"#test-cases\"\u003eTest Cases\u003c/a\u003e\u003c/li\u003e\n\u003cdiv id=\"test-cases\" class=\"tab-panel\"\u003e\n  \n\u003c/div\u003e\n\n\n    \u003c/ul\u003e\n  \u003c/div\u003e\n  \n  \u003cstyle\u003e\n  .tabs { margin-top: 1rem; }\n  .tab-list { list-style: none; display: flex; gap: 1rem; padding: 0; border-bottom: 1px solid #ddd; }\n  .tab-list li { margin: 0; }\n  .tab-list a { padding: 0.5rem 1rem; text-decoration: none; background: #eee; border-radius: 4px 4px 0 0; }\n  .tab-list a.active { background: #fff; border-bottom: 2px solid #000; }\n  .tab-panel { display: none; padding: 1rem; border: 1px solid #ddd; border-top: none; }\n  .tab-panel.active { display: block; }\n  \u003c/style\u003e\n  \n  \u003cscript\u003e\n  document.addEventListener(\"DOMContentLoaded\", function() {\n    const tabs = document.querySelectorAll(\".tab-list a\");\n    const panels = document.querySelectorAll(\".tab-panel\");\n  \n    function activateTab(tab) {\n      tabs.forEach(t =\u003e t.classList.remove(\"active\"));\n      panels.forEach(p =\u003e p.classList.remove(\"active\"));\n      tab.classList.add(\"active\");\n      document.querySelector(tab.getAttribute(\"href\")).classList.add(\"active\");\n    }\n  \n    tabs.forEach(tab =\u003e {\n      tab.addEventListener(\"click\", function(e) {\n        e.preventDefault();\n        activateTab(tab);\n      });\n    });\n  \n    if (tabs.length) activateTab(tabs[0]); \n  });\n  \u003c/script\u003e\n  \n","description":"A scalable and reliable web service that converts long URLs into short, easy-to-share links. It provides fast redirection, optional custom aliases, expiration settings, and analytics for tracking link usage. Built with high availability, caching, and secure validations, the service ensures quick response times and prevents abuse. Future enhancements include QR code generation, bulk link creation, and an intuitive dashboard for managing and analyzing URLs.","image":"/images/global/coming-soon.gif","permalink":"http://localhost:1313/solutions/url-shortner/","title":"Url Shortner"},{"content":"\u003cp\u003eIn the rapidly evolving FinTech industry, customers expect tailored financial guidance that aligns with their unique goals, spending habits, and risk profiles. Traditional one-size-fits-all advisory models often fall short in delivering meaningful value, especially for digitally savvy users who demand personalization similar to what they experience in e-commerce or media platforms. A Personalized Financial Advice Generator addresses this gap by leveraging AI to analyze individual transaction patterns, lifestyle choices, and financial aspirations, delivering real-time, hyper-personalized insights that empower users to make smarter financial decisions and deepen their trust in the FinTech platform.\u003c/p\u003e\n\u003ch2 id=\"context\"\u003eContext\u003c/h2\u003e\n\u003cimg src=\"/images/blogs/2025/jul/personalized-financial-advice-generator/1.context-diagram-Personalized_Financial_Advice_Generator.png\" alt=\"Context diagram for personalized financial advice generator\" class=\"responsive-image\"\u003e\n\u003cp\u003eThe \u003cstrong\u003ePersonalized Financial Advice Generator\u003c/strong\u003e is a microservice designed to deliver tailored financial insights and suggestions to banking customers based on their contextual data. Users interact with the system through a \u003cstrong\u003eReact Native-based mobile app\u003c/strong\u003e, while bank administrators manage its configurations via a separate \u003cstrong\u003eAdmin App\u003c/strong\u003e. This microservice intelligently aggregates and analyzes customer information by integrating with several external systems: the \u003cstrong\u003eCore Banking System (CBS)\u003c/strong\u003e for account and customer data, the \u003cstrong\u003eIdentity Management System\u003c/strong\u003e for identity validation, the \u003cstrong\u003eCRM\u003c/strong\u003e for relationship insights, the \u003cstrong\u003eBills Management System\u003c/strong\u003e for bill-related details, and the \u003cstrong\u003eRewards System\u003c/strong\u003e to include customer rewards in financial suggestions. It acts as the intelligent backend engine that powers the bank’s personalized finance features, enhancing customer engagement and financial wellbeing through contextual advice.\u003c/p\u003e\n\u003ch2 id=\"personalized-financial-advice-generator\"\u003ePersonalized Financial Advice Generator\u003c/h2\u003e\n\u003cimg src=\"/images/blogs/2025/jul/personalized-financial-advice-generator/1.container-diagram-Personalized_Financial_Advice_Generator.png\" alt=\"Container diagram for personalized financial advice generator\" class=\"responsive-image\"\u003e\n\u003cp\u003eThe \u003cstrong\u003ePersonalized Financial Advice Generator\u003c/strong\u003e is a containerized microservices-based system designed to provide tailored financial guidance to banking customers via a mobile application. At its core lies an \u003cstrong\u003eAgentic AI component\u003c/strong\u003e (\u003ccode\u003eAgent\u003c/code\u003e) that orchestrates data collection, user identification, and interaction with a \u003cstrong\u003eLarge Language Model (LLM)\u003c/strong\u003e to generate contextually relevant and human-like advice. Users engage with the system through a \u003cstrong\u003eReact Native Mobile App\u003c/strong\u003e, while bank administrators manage business rules and logic through a dedicated \u003cstrong\u003eAdmin App\u003c/strong\u003e, which interfaces with the \u003cstrong\u003eConfigurations\u003c/strong\u003e container. The \u003ccode\u003eAgent\u003c/code\u003e relies on an \u003cstrong\u003eIdentity component\u003c/strong\u003e to authenticate users via the external \u003cstrong\u003eIdentity Management System\u003c/strong\u003e, and it retrieves user-specific data from a dedicated \u003cstrong\u003eDatabase\u003c/strong\u003e. To enrich its advisory capabilities, it integrates with various enterprise systems including the \u003cstrong\u003eCore Banking System\u003c/strong\u003e, \u003cstrong\u003eCRM\u003c/strong\u003e, \u003cstrong\u003eBills Management System\u003c/strong\u003e, and \u003cstrong\u003eRewards System\u003c/strong\u003e - fetching transaction data, customer relationship history, billing details, and loyalty information respectively. The \u003cstrong\u003eLLM container\u003c/strong\u003e, positioned as the “brain” of the system, enables natural language understanding and response generation, transforming raw data into actionable financial advice.\u003c/p\u003e\n\u003ch2 id=\"pfm---agent-component\"\u003ePFM - Agent component\u003c/h2\u003e\n\u003cimg src=\"/images/blogs/2025/jul/personalized-financial-advice-generator/agent-component-Agent_Component___Personalized_Financial_Advice_Generator.png\" alt=\"Agent diagram for pfm\" class=\"responsive-image\"\u003e\n\u003cp\u003eThe \u003cstrong\u003eAgent Component\u003c/strong\u003e is a core part of the Personalized Financial Advice Generator system. Its primary role is to synthesize customer data, evaluate it through configurable business rules, and generate intelligent, personalized financial recommendations using an LLM (Large Language Model). The Agent acts as the orchestration layer, ensuring secure, compliant, and meaningful communication between user-facing channels and backend intelligence services.\u003c/p\u003e\n\u003ch3 id=\"1-user-interaction-layer\"\u003e1. \u003cstrong\u003eUser Interaction Layer\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003eThe Agent exposes RESTful APIs that are consumed by the mobile application. These endpoints are designed to be secure, responsive, and optimized for real-time user interaction.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eHandles incoming requests from authenticated users.\u003c/li\u003e\n\u003cli\u003eValidates basic request structure and routing logic.\u003c/li\u003e\n\u003cli\u003eTriggers downstream data orchestration and response composition.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"2-context-aggregation\"\u003e2. \u003cstrong\u003eContext Aggregation\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003eTo generate relevant advice, the system must first understand the user\u0026rsquo;s financial situation and behavior. This is achieved via the \u003cstrong\u003eUser Context Builder\u003c/strong\u003e, which fetches and merges data from multiple trusted enterprise systems:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eIdentity Service\u003c/strong\u003e for user verification.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCore Banking System (CBS)\u003c/strong\u003e for account and transaction history.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCRM\u003c/strong\u003e for previous engagements and customer segmentation.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eBills System\u003c/strong\u003e for outstanding and paid bills.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eDatabase\u003c/strong\u003e for fetching previous or cached information about the user\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe resulting context is a rich, structured representation of the user’s financial profile and behavior. In Generative AI terminology, this is a tool that aggregates the user\u0026rsquo;s information from different sources.\u003c/p\u003e\n\u003ch3 id=\"3-configuration-management\"\u003e3. \u003cstrong\u003eConfiguration Management\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003eThe business logic governing advice generation is not hardcoded but instead dynamically managed via a \u003cstrong\u003eConfiguration Service\u003c/strong\u003e. This allows bank administrators to:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDefine rules for different user segments (e.g., young professionals, retirees).\u003c/li\u003e\n\u003cli\u003eAdjust thresholds (e.g., spend vs. income ratio) without code changes.\u003c/li\u003e\n\u003cli\u003eEnable A/B testing of advice templates and messages.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe \u003cstrong\u003eConfiguration Engine\u003c/strong\u003e within the Agent fetches and interprets these rules in real time, ensuring adaptability and maintainability.\u003c/p\u003e\n\u003ch3 id=\"4-prompt-engineering-and-llm-invocation\"\u003e4. \u003cstrong\u003ePrompt Engineering and LLM Invocation\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003eOnce the user context and business rules are in place, the \u003cstrong\u003ePrompt Generator\u003c/strong\u003e constructs a tailored input prompt that reflects the user\u0026rsquo;s situation. This prompt:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eEncapsulates user financial behavior, spending patterns, and recent activity.\u003c/li\u003e\n\u003cli\u003eIncludes business rules and product-specific messages.\u003c/li\u003e\n\u003cli\u003eMaintains tone, structure, and formatting optimized for LLM processing.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThe \u003cstrong\u003eLLM Client\u003c/strong\u003e (typically using Spring AI’s \u003ccode\u003eChatClient\u003c/code\u003e) sends this prompt to an external LLM provider such as OpenAI or Azure OpenAI, ensuring appropriate API-level security and performance considerations.\u003c/p\u003e\n\u003ch3 id=\"5-advice-composition\"\u003e5. \u003cstrong\u003eAdvice Composition\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003eLLM responses are often verbose or loosely structured. The \u003cstrong\u003eAdvice Composer\u003c/strong\u003e ensures the final output:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAdheres to UX and compliance guidelines.\u003c/li\u003e\n\u003cli\u003eIncludes actionable items (e.g., “Set up an emergency fund”).\u003c/li\u003e\n\u003cli\u003eReferences relevant products or offers where appropriate.\u003c/li\u003e\n\u003cli\u003eHandles fallback logic in case of vague or unusable LLM output.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThis component ensures that AI responses are transformed into meaningful financial guidance that can be immediately presented to the user.\u003c/p\u003e\n\u003ch3 id=\"6-auditing-and-compliance\"\u003e6. \u003cstrong\u003eAuditing and Compliance\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003eFinancial systems are held to high standards of accountability. The \u003cstrong\u003eAudit Logger\u003c/strong\u003e component captures key information from every interaction:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eWho requested advice and when\u003c/li\u003e\n\u003cli\u003eWhat data was used to generate it\u003c/li\u003e\n\u003cli\u003eThe LLM response and final advice\u003c/li\u003e\n\u003cli\u003eExecution duration and system health\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThese logs are stored securely and support operational monitoring, audit trails, and model transparency requirements.\u003c/p\u003e\n\u003ch3 id=\"7-guardrails\"\u003e7. Guardrails\u003c/h3\u003e\n\u003cp\u003eTo ensure reliability, safety, and regulatory compliance, the Agent component enforces strict guardrails on both user input and LLM-generated output. These safeguards are essential when working with generative AI in a financial context, where misinterpretation or hallucination can have real-world consequences.\u003c/p\u003e\n\u003ch4 id=\"input-guardrails\"\u003eInput Guardrails\u003c/h4\u003e\n\u003cp\u003eInput Validation: All incoming data from the mobile app is validated for structure, data types, and required fields.\u003c/p\u003e\n\u003cp\u003ePrompt Sanitization: User input is cleansed to remove any personally identifiable information (PII) or harmful/inappropriate content before it\u0026rsquo;s passed to the LLM.\u003c/p\u003e\n\u003cp\u003eContext Filtering: Only relevant, pre-approved data attributes are included in the prompt to minimize leakage and reduce attack surface.\u003c/p\u003e\n\u003cp\u003eRate Limiting \u0026amp; Access Controls: Ensure LLM access is gated by user roles and usage thresholds to avoid abuse.\u003c/p\u003e\n\u003ch4 id=\"output-guardrails\"\u003eOutput Guardrails\u003c/h4\u003e\n\u003cp\u003eContent Filtering: LLM responses are scanned for offensive, discriminatory, or misleading content before being displayed to users.\u003c/p\u003e\n\u003cp\u003eDomain-Specific Constraints: Business rules are applied post-generation to ensure the advice complies with financial regulations and bank policies.\u003c/p\u003e\n\u003cp\u003eFallback Handling: In case the generated content does not meet quality or compliance standards, predefined fallback messages or human-curated templates are served.\u003c/p\u003e\n\u003cp\u003eLogging \u0026amp; Monitoring: All LLM interactions are logged with input, output, and risk flags, allowing for post-event audits and retraining opportunities.\u003c/p\u003e\n\u003cp\u003eThese guardrails work together to ensure that the advice provided is not only contextually relevant and useful but also secure, explainable, and aligned with institutional standards.\u003c/p\u003e\n\u003ch2 id=\"technologies-and-frameworks\"\u003eTechnologies and Frameworks\u003c/h2\u003e\n\u003cp\u003eOur team primarily consists of Java developers, and the application where this needs to be integrated is also a Spring Microservices based architecture. And hence, it made perfect sense for us to use Spring AI instead of python. The results were good.\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eLayer\u003c/th\u003e\n          \u003cth\u003eTechnology\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eAPI\u003c/td\u003e\n          \u003ctd\u003eSpring Web (MVC / WebFlux)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eContext \u0026amp; Rules\u003c/td\u003e\n          \u003ctd\u003eSpring Boot Services + RestTemplate/WebClient\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLLM Integration\u003c/td\u003e\n          \u003ctd\u003eSpring AI (\u003ccode\u003eChatClient\u003c/code\u003e, \u003ccode\u003ePromptTemplate\u003c/code\u003e)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eAsync/Audit\u003c/td\u003e\n          \u003ctd\u003eSpring Events or \u003ccode\u003e@Async\u003c/code\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eConfiguration\u003c/td\u003e\n          \u003ctd\u003eSpring Config / DB-driven configs\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eSecurity\u003c/td\u003e\n          \u003ctd\u003eSpring Security, OAuth2 (for external calls)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eObservability\u003c/td\u003e\n          \u003ctd\u003eMicrometer, Zipkin, or OpenTelemetry\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"security-considerations\"\u003eSecurity Considerations\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eAll external API calls (CBS, CRM, LLM, etc.) are secured via OAuth2 or mutual TLS.\u003c/li\u003e\n\u003cli\u003eInput validation and prompt sanitization are applied before LLM invocation.\u003c/li\u003e\n\u003cli\u003eSensitive data such as account numbers or identity markers are anonymized or masked in prompt construction.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"future-enhancements\"\u003eFuture Enhancements\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eRAG (Retrieval-Augmented Generation)\u003c/strong\u003e: Integrate a vector store with Spring AI to provide grounded, policy-compliant answers using enterprise documents.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eMultilingual Support\u003c/strong\u003e: Enable LLM prompts and outputs in regional languages.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eFeedback Loop\u003c/strong\u003e: Collect user feedback on advice relevance and continuously refine prompt templates.\u003c/li\u003e\n\u003c/ul\u003e\n","description":"PFM DDD","image":"/images/blogs/2025/jul/personalized-financial-advice-generator/banner.png","permalink":"http://localhost:1313/blogs/2025/jul/personalized-financial-advice-generator/","title":"Personalized Financial Advice Generator"},{"content":"\u003ch1 id=\"introduction\"\u003eIntroduction\u003c/h1\u003e\n\u003cp\u003eHow many of us have stared blankly at a login screen, desperately trying to recall that complex password? It’s a frustratingly common experience, and a surprisingly significant hurdle in securing mobile applications. During my architecture design consulting sessions, I come across this situation multiple times – and I love to build authentication systems that don’t sacrifice user experience for security.\u003c/p\u003e\n\u003cp\u003eMy journey into this space began over a decade ago, designing and implementing software solutions for some of the largest banks across the globe. During that time, I witnessed firsthand the critical balance between robust security measures and the ease with which users can interact with their financial data. I realized that overly complicated authentication processes often lead to user frustration, abandonment, and ultimately, a weakened security posture – users are more likely to opt for simpler, less secure methods to avoid the hassle.\u003c/p\u003e\n\u003cp\u003eThis experience shaped my focus at one of the customer\u0026rsquo;s solution: to create innovative authentication frameworks that prioritize both security and a seamless user experience. I believe that strong authentication shouldn’t feel like a chore; it should be intuitive, reliable, and contribute to a positive overall app experience. I try to provide solutions that meet the demanding security requirements of modern applications, while remaining user-friendly and accessible.\u003c/p\u003e\n\u003ch1 id=\"password-authentication--the-server-side-approach\"\u003ePassword Authentication – The Server-Side Approach\u003c/h1\u003e\n\u003cp\u003eInspite of the introduction of passwordless techniques, Password based authentication remains the most common authentication mechanism for software applications, and industry trends strongly suggest this will continue to be the case for the foreseeable future. It’s a well-established and understood process, providing a baseline level of security when implemented correctly. However, it’s crucial to recognize the inherent vulnerabilities and proactively address them.\u003c/p\u003e\n\u003ch2 id=\"what-is-password-authentication\"\u003eWhat is Password Authentication?\u003c/h2\u003e\n\u003cp\u003ePassword authentication is the process of verifying a user’s identity based on a secret string of characters – their password. This process typically involves the user entering their password into the application, which is then transmitted to the server for comparison against a stored hash.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/blogs/2025/jul/pins-and-passwords/password-validation-Password_based_authentication.png\" alt=\"Password Authentication\"\u003e\u003c/p\u003e\n\u003cp\u003eStoring passwords in plain text is an unacceptable security risk. Instead, passwords are ‘hashed’ – transformed into an irreversible string of characters. This hashing process significantly reduces the risk of compromise if the database is breached. Crucially, a ‘salt’ – a random string of characters – is added to the password before hashing. The salt is unique to each user and further protects against attacks where attackers can use pre-computed hash tables (rainbow tables).\u003c/p\u003e\n\u003cp\u003eBeyond hashing and salting, several best practices are vital:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003ePassword Complexity\u003c/strong\u003e: Enforcing minimum password length, requiring a mix of uppercase and lowercase letters, numbers, and symbols, significantly improves security.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRate Limiting\u003c/strong\u003e: Implementing rate limiting restricts the number of login attempts within a specific timeframe. This mitigates brute-force attacks.\nProblems Associated with Passwords\u003c/p\u003e\n\u003cp\u003eDespite these best practices, password-based authentication faces significant challenges:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNetwork Transmission – \u003cem\u003eMan-in-the-Middle Attacks\u003c/em\u003e\u003c/strong\u003e: Passwords are inherently vulnerable when transmitted over the network. A malicious actor can intercept the password during transmission, leading to a \u0026ldquo;man-in-the-middle\u0026rdquo; attack, where they gain unauthorized access.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eDatabase Exposures – \u003cem\u003eLeaked Passwords\u003c/em\u003e\u003c/strong\u003e: If a database is compromised, sensitive passwords can be exposed, allowing attackers to gain access to user accounts.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eShared Passwords – \u003cem\u003eCross-Device Attacks\u003c/em\u003e\u003c/strong\u003e: Users often reuse passwords across multiple services. This creates a single point of failure; if an attacker gains access to one password, they can potentially access accounts on other software services using the same password.\u003c/p\u003e\n\u003ch2 id=\"pin-authentication--a-simpler-client-side-solution\"\u003ePIN Authentication – A Simpler Client-Side Solution\u003c/h2\u003e\n\u003cp\u003ePIN authentication offers a significantly simpler and potentially more secure alternative to traditional password-based authentication, particularly in mobile applications. Essentially, it involves users entering a numeric code – their PIN – to verify their identity. This approach leverages client-side cryptographic processes, minimizing the exposure of sensitive data.\u003c/p\u003e\n\u003cp\u003e\u003cimg src=\"/images/blogs/2025/jul/pins-and-passwords/pin-validation-Pin_based_authentication.png\" alt=\"Pin authentication \"\u003e\u003c/p\u003e\n\u003ch3 id=\"how-pins-are-generated--stored-client-side-token-generation\"\u003eHow PINs are Generated \u0026amp; Stored (Client-Side Token Generation)\u003c/h3\u003e\n\u003cp\u003ePIN authentication relies on generating a unique cryptographic token directly on the user’s device. This process begins with a securely generated KeyPair. This Keypair comprises of a private and a public key. The private key is secured and tightly bound with the mobile device. The security is such that even the software developers creating the app cannot extract the private key directly. There are wrappers apis available using which the app developers use private key to create signatures.\nThe public key, which is tightly coupled with the private key can be shared safely over the network and sent to users. Since public key alone cannot be used to authenticate the user, sending it to the server is a safe process.\nThen this keypair is associated with a PIN, which is a numeric code that the user can easily remember. The PIN is not stored in plain text; instead, it is used to derive a cryptographic key through a secure hashing function. This derived key is then used to create a signature that is a one time but unique identifier of the device.\u003c/p\u003e\n\u003cp\u003eCritically, this entire process occurs on the device, ensuring that the actual PIN never leaves the user’s control. Theobject that is transmitted to the server is a cryptographic signature, not the PIN itself. This signature is generated using the private key and the PIN, creating a unique token that can be verified by the server.\u003c/p\u003e\n\u003cp\u003eThe server by the onus of public key, can verify the signature without ever needing to know the PIN. This means that even if an attacker intercepts the communication, they cannot gain access to the PIN or the private key.\u003c/p\u003e\n\u003ch3 id=\"the-cryptographic-process-of-passwordless-architecture\"\u003eThe Cryptographic Process of Passwordless Architecture\u003c/h3\u003e\n\u003cp\u003eThis approach embodies the core principles of a passwordless architecture. The PIN alone cannot grant the access to application. The pin must be used on the specific device for the access to be granted. The security stems from the complexity of the cryptographic function and the unique random number used to generate it. The process creates a mathematically secure link between the user\u0026rsquo;s device and the application.\u003c/p\u003e\n\u003ch3 id=\"tightly-coupled-with-a-device---what-you-have--what-you-know\"\u003eTightly Coupled with a Device - “What you have + What you know”\u003c/h3\u003e\n\u003cp\u003ePIN authentication inherently creates a “what you have” security layer. Because the PIN is generated and stored solely on the user\u0026rsquo;s device – a smartphone or tablet – it’s inextricably linked to that specific device. This creates a strong security posture, adding to the “what you have” component alongside the \u0026ldquo;What you know\u0026rdquo; component.\u003c/p\u003e\n\u003ch3 id=\"improved-security--no-network-transmission\"\u003eImproved Security – No Network Transmission\u003c/h3\u003e\n\u003cp\u003eA key advantage of PIN authentication is that the PIN itself is never transmitted over the network. This dramatically reduces the surface area of attack. Even if an attacker intercepts the communication, they cannot access the PIN or the private key. The PIN is used to generate a cryptographic signature, which is then sent to the server for verification. This means that even if an attacker gains access to the server, they cannot retrieve the PIN or compromise the user’s account.\u003c/p\u003e\n\u003cp\u003eFrom attacker\u0026rsquo;s perspective, a mass scale attack on a system  is almost impossible. Because now to attack the system, the attacker needs to have access to all the devices where the PIN is stored. This means that even if an attacker manages to access a device and corresponding PIN, and in effect compromise a user account, they would still not be able to compromise the entire system. The attacker would need to compromise each device individually, which is a significantly more challenging task.\u003c/p\u003e\n\u003ch3 id=\"pin-reusability-and-security\"\u003ePin Reusability and Security\u003c/h3\u003e\n\u003cp\u003eWhile the PIN can be reused, the underlying security relies on a carefully managed system. A private key is tightly coupled with the app and device. This key is not reusable. So in effect, the pin, the app and the device are bind together. Even if one component is missing, the authentication fails.\u003c/p\u003e\n\u003ch3 id=\"memorable-pins---a-key-advantage\"\u003eMemorable PINs - A Key Advantage\u003c/h3\u003e\n\u003cp\u003eFurthermore, because the PIN is stored locally and doesn’t require users to memorize complex passwords, it’s inherently more memorable. This contrasts sharply with traditional password systems, where users often struggle to remember and correctly type long, complex passwords. The simplicity of a numeric PIN significantly reduces the cognitive load and improves the overall user experience, making it easier and more convenient for users to authenticate.\u003c/p\u003e\n\u003ch2 id=\"the-pitfalls-of-server-side-pin-storage\"\u003eThe Pitfalls of Server-Side PIN Storage\u003c/h2\u003e\n\u003cp\u003eA common and incredibly dangerous pitfall is storing PINs just like passwords – on the server. This approach inherits all the vulnerabilities associated with passwords: increased susceptibility to man-in-the-middle attacks and, crucially, heightened risk of brute-force attacks. Because PINs are typically shorter, they’re far more vulnerable when stored on the server. Furthermore, passwords’ complexity provides resistance to brute-forcing, while PINs offer substantially less resistance. This approach must never be adopted. Prioritizing client-side PIN generation and storage alongside device-level authentication is paramount for robust security.\u003c/p\u003e\n\u003ch2 id=\"choosing-the-right-approach\"\u003eChoosing the Right Approach\u003c/h2\u003e\n\u003cp\u003eSelecting the appropriate authentication method requires careful consideration of several key factors. Ultimately, the “best” approach depends on balancing security needs with user experience and regulatory compliance.\u003c/p\u003e\n\u003ch3 id=\"factors-to-consider\"\u003eFactors to Consider:\u003c/h3\u003e\n\u003cp\u003eSecurity Requirements: High-security environments, such as financial institutions or government applications, demand robust security, potentially favoring biometric authentication or multi-factor authentication combining PINs with other methods. Lower-risk applications may be adequately secured by a well-implemented PIN system.\nUser Experience: PIN authentication typically offers a smoother and more intuitive user experience than complex password systems. It’s well-suited for applications where ease of use is paramount.\nRegulatory Compliance: Certain industries (e.g., HIPAA, PCI DSS) may dictate specific authentication requirements, influencing the choice of method.\u003c/p\u003e\n\u003ch3 id=\"when-to-use-which\"\u003eWhen to Use Which:\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003ePIN Authentication\u003c/strong\u003e: Ideal for applications requiring moderate security and a seamless user experience, such as mobile banking apps, e-commerce platforms, and social media logins.\n\u003cstrong\u003eBiometric Authentication\u003c/strong\u003e: Recommended for high-security applications demanding the highest level of protection, like accessing sensitive financial data or government systems.\n\u003cstrong\u003eMulti-Factor Authentication\u003c/strong\u003e: Best suited for environments with stringent regulatory requirements or exceptionally valuable assets.\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eFeature\u003c/th\u003e\n          \u003cth\u003ePassword\u003c/th\u003e\n          \u003cth\u003ePIN\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eMemorability\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eOften difficult to remember, leading to weak passwords or reliance on password managers.\u003c/td\u003e\n          \u003ctd\u003eTypically easier to remember, particularly for numeric users.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eLength\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eTypically long (8+ characters)\u003c/td\u003e\n          \u003ctd\u003eShort (typically 4-6 digits)\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eCharacter Set\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eSupports a wide range of characters (uppercase, lowercase, numbers, symbols).\u003c/td\u003e\n          \u003ctd\u003eGenerally limited to numeric characters only.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eAttack Surface\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eLarger – device, network, server, database\u003c/td\u003e\n          \u003ctd\u003eSmaller – device only\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eUser Experience\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eCan be cumbersome for users.\u003c/td\u003e\n          \u003ctd\u003eSimple and intuitive.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eStorage\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eStored on server side\u003c/td\u003e\n          \u003ctd\u003eStored on device\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003ePhishing Vulnerability\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eHigh – susceptible to being tricked into entering password on fake website.\u003c/td\u003e\n          \u003ctd\u003eLower – even if PIN is leaked, it is not usable for attacker unless the attacker has access to the device as well.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eEase of Automation\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003eEasier to automate\u003c/td\u003e\n          \u003ctd\u003edifficult to automate\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e\u003cstrong\u003eNon device Usage\u003c/strong\u003e\u003c/td\u003e\n          \u003ctd\u003ePasswords can be used even when no device is bound to the users e.g. on browsers or when user switches the device\u003c/td\u003e\n          \u003ctd\u003eSince the pins are bound to device, they cannot be used on browser based applications or the user is forced to reset the pin when device is changed\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003cp\u003eIn conclusion, Passwords are best fit when there is no device associated with the user. They are versatile and can be used on browser based applications. PIN authentication presents a compelling alternative to traditional password-based systems, offering a simplified user experience while maintaining a robust security posture, particularly when coupled with client-side devices. We’ve seen that PINs provide a significant advantage in terms of memorability, ease of use, and reduced attack surface compared to complex passwords. However, it’s crucial to recognize that no single authentication method provides absolute security.\u003c/p\u003e\n\u003cp\u003eI’d be pleased to discuss PIN authentication in more detail or explore potential applications. If you’re interested in a brief consultation or simply want to share your thoughts, please don’t hesitate to contact me at \u003ca href=\"https://www.linkedin.com/in/mohit-kanwar-7668a211/\"\u003eLinkedIn\u003c/a\u003e. I’m available for a discussion and would welcome the opportunity to connect.”\u003c/p\u003e\n","description":"","image":"/images/blogs/2025/jul/pins-and-passwords/banner.png","permalink":"http://localhost:1313/blogs/2025/jul/pins-and-passwords/","title":"Pins and Passwords"},{"content":"\u003ch2 id=\"objective\"\u003eObjective\u003c/h2\u003e\n\u003cp\u003eTo develop a \u003cstrong\u003eChannel Banking Application\u003c/strong\u003e that seamlessly supports \u003cstrong\u003emultiple channels\u003c/strong\u003e, delivering consistent, secure, and scalable banking experiences across retail, business, and administrative domains.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"use-cases\"\u003eUse Cases\u003c/h2\u003e\n\u003cp\u003eThe solution encompasses the following core areas:\u003c/p\u003e\n\u003ch3 id=\"1-retail-banking-applications\"\u003e1. \u003cstrong\u003eRetail Banking Applications\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e📱 Mobile Banking App\u003c/li\u003e\n\u003cli\u003e💻 Internet Banking Web Portal\u003c/li\u003e\n\u003cli\u003e🔌 Open APIs for integrations\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"2-business-banking-applications\"\u003e2. \u003cstrong\u003eBusiness Banking Applications\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e📱 Business Mobile App\u003c/li\u003e\n\u003cli\u003e💻 Business Web Portal\u003c/li\u003e\n\u003cli\u003e🔌 Business Banking APIs\u003c/li\u003e\n\u003cli\u003e🔄 Corporate ERP Integration\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"3-admin-application\"\u003e3. \u003cstrong\u003eAdmin Application\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e⚙️ Centralized Admin Portal for Configuration, Monitoring, and Support\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"4-reporting-engine\"\u003e4. \u003cstrong\u003eReporting Engine\u003c/strong\u003e\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e📊 Analytics \u0026amp; Regulatory Reports\u003c/li\u003e\n\u003cli\u003e⏱️ Real-time and Scheduled Report Generation\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003ch2 id=\"-documentation-overview\"\u003e📚 Documentation Overview\u003c/h2\u003e\n\u003cp\u003eThis documentation provides comprehensive insights into the \u003cstrong\u003esolution architecture\u003c/strong\u003e, \u003cstrong\u003eprocess flows\u003c/strong\u003e, and \u003cstrong\u003eproject methodologies\u003c/strong\u003e that power the Channel Banking application.\nIt includes:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eProject Management Practices\u003c/li\u003e\n\u003cli\u003eRequirement Gathering Process\u003c/li\u003e\n\u003cli\u003eArchitecture and Design\u003c/li\u003e\n\u003cli\u003eDevelopment Standards\u003c/li\u003e\n\u003cli\u003eTesting Strategy\u003c/li\u003e\n\u003cli\u003eDeployment and Release Process\u003c/li\u003e\n\u003cli\u003eOperations and Support Model\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ca href=\"https://mohitkanwar.github.io/channel-banking-project/\" target=\"_blank\" rel=\"noopener\"\u003eREAD THE DOCUMENTATION HERE\u003c/a\u003e\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"ready-to-explore-or-contribute\"\u003eReady to explore or contribute?\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eJump into the documentation\u003c/strong\u003e using the navigation panel\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eStart with the Project Overview\u003c/strong\u003e or \u003cstrong\u003eRequirement Gathering Process\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eShare feedback\u003c/strong\u003e to help us improve continuously\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eFor access, contributions, or queries, please contact me on linkedin\u003c/p\u003e\n","description":"Explore the comprehensive documentation for the Channel Banking Application designed to support multiple banking channels including Retail, Business, Admin, and Reporting. This guide covers all aspects of the Software Development Life Cycle (SDLC)—from project management and requirement gathering to architecture, development, testing, deployment, and support. Whether you're building mobile banking apps, web portals, APIs, or admin tools, this documentation serves as a central knowledge base for developers, architects, testers, and stakeholders involved in digital banking transformation.","image":"/images/solutions/channel-banking-project/featured-background.jpg","permalink":"http://localhost:1313/solutions/channel-banking-project/","title":"Channel Banking"},{"content":"\u003ch3 id=\"the-test-data-dilemma-a-silent-challenge-in-software-development\"\u003eThe Test Data Dilemma: A Silent Challenge in Software Development\u003c/h3\u003e\n\u003cp\u003eWhen building software, one big challenge often goes unnoticed – getting the right test data. As a software architect, I have worked with many customers to create software systems. A common issue I’ve faced is that customers don’t have enough good test data for developers.\u003c/p\u003e\n\u003cp\u003eThis isn’t just a small problem. It can lead to serious issues, including legal trouble. Let’s talk about this problem, why it happens, and how we can fix it in a simple and effective way.\u003c/p\u003e\n\u003chr\u003e\n\u003ch3 id=\"whats-the-problem\"\u003eWhat’s the Problem?\u003c/h3\u003e\n\u003cp\u003eThe problem can be summarized in one sentence: it’s a battle of accuracy versus privacy. To achieve accurate test results, the test data must closely mirror real-world data. However, using real-world data brings severe privacy concerns and legal implications. This paradox creates a silent yet impactful challenge in the software development lifecycle.\u003c/p\u003e\n\u003ch4 id=\"not-enough-test-data\"\u003eNot Enough Test Data\u003c/h4\u003e\n\u003cp\u003eMost customers of a software services organization struggle to provide enough realistic test data for development and testing. Creating good test data requires time, expertise, and effort, but it is often relegated to a lower priority. As a result, developers are left with either insufficient or low-quality data, which undermines the effectiveness of the development process.\u003c/p\u003e\n\u003cp\u003eMoreover, when multiple developers or testers use the same limited test data, conflicts arise due to differing configurations and requirements. A common sight in development teams is messages like this:\u003c/p\u003e\n \u003cimg src=\"/images/blogs/2025/jan/the-test-data-dilemma/teamsmsg.png\" alt=\"Conflicts in test data\" class=\"responsive-image\"\u003e\n\u003ch4 id=\"using-real-data-by-mistake\"\u003eUsing Real Data by Mistake\u003c/h4\u003e\n\u003cp\u003eWhen sufficient test data is unavailable, customers sometimes resort to sharing real production data. Although attempts are made to mask sensitive information, these efforts are often manual and prone to error. Real phone numbers, email addresses, or even personally identifiable information (PII) can inadvertently slip through. This is not just a compliance violation but also a breach of trust that can have far-reaching consequences.\u003c/p\u003e\n\u003cp\u003eMoreover, development systems are often less secure than production systems. If production data reaches the development environments, it significantly increases the risk of exposing sensitive data to unauthorized access or breaches.\u003c/p\u003e\n\u003ch3 id=\"performance-related-testing\"\u003ePerformance related testing\u003c/h3\u003e\n\u003cp\u003ePerformance testing demands substantial volumes of realistic data to simulate heavy workloads and concurrent requests. Without adequate test data, testers cannot adequately stress the system, leading to undetected performance bottlenecks. The consequences are dire: applications may crash under real-world usage, causing service outages and customer dissatisfaction.\u003c/p\u003e\n\u003ch4 id=\"the-consequences-of-poor-test-data\"\u003eThe Consequences of Poor Test Data\u003c/h4\u003e\n\u003cp\u003eUsing real data can cause big problems:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eWrong Notifications\u003c/strong\u003e: Developers testing notification systems might accidentally send real messages to actual customers. Examples of such incidents have gained attention on platforms like Reddit, where users post screenshots of unexpected notifications. These posts often highlight humorous or concerning test messages, inadvertently revealing testing mishaps. Such notifications include placeholders like \u0026ldquo;Test message 123\u0026rdquo; or even personal identifiers, making them the subject of public mockery and scrutiny. These examples emphasize the risks and reputational damage caused by improper test data handling.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cimg src=\"/images/blogs/2025/jan/the-test-data-dilemma/test1.png\" alt=\"Conflicts in test data\" class=\"responsive-image\" style=\"max-width:250px\"\u003e \u003cimg src=\"/images/blogs/2025/jan/the-test-data-dilemma/test2.png\" alt=\"Conflicts in test data\" class=\"responsive-image\" style=\"max-width:250px\"\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eWorried Customers\u003c/strong\u003e:  Receiving confusing or unexpected messages can alarm customers, eroding their trust in the system. Recently, the fire department in Los Angeles mistakenly sent incorrect notifications to a large audience due to improper testing of their notification system. This caused widespread anxiety and fear among the population, highlighting the critical importance of rigorous testing with appropriate test data to prevent such incidents.\n\u003cimg src=\"/images/blogs/2025/jan/the-test-data-dilemma/firealarm.webp\" alt=\"Conflicts in test data\" class=\"responsive-image\" style=\"max-width:250px\"\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eLegal and Business Risks\u003c/strong\u003e: Mishandling data can lead to regulatory penalties, lawsuits, and damage to the company’s reputation. For example, mistaken notifications from major brands like Starbucks, OnePlus, and Rapido have led to public apologies from these organizations for sending incorrect notifications. Starbucks and OnePlus both issued statements acknowledging their mistakes and the impact on users. Interestingly, Rapido’s team turned a potential crisis into an opportunity by following their accidental \u0026ldquo;test\u0026rdquo; notification with a clever message that read: \u0026ldquo;We were testing your attention, now that we have it, here are some offers.\u0026rdquo; While this creative response softened the backlash, these incidents underscore the critical importance of proper test data management to prevent such mishaps.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ca href=\"https://www.thequint.com/tech-and-auto/tech-news/oneplus-7-pro-push-notification-globally-mistake-report\" target=\"_blank\"\u003eOnePlus 7 Pro Mistaken Push Notification\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://www.entrepreneur.com/business-news/starbucks-sends-out-mistaken-test-notification-from-sean-k/448618\" target=\"_blank\"\u003eStarbucks Mistaken Test Notification\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://inc42.com/buzz/rapido-test-push-notification/\" target=\"_blank\"\u003eRapido Test Push Notification\u003c/a\u003e\u003c/p\u003e\n\u003chr\u003e\n\u003ch3 id=\"how-can-we-solve-this\"\u003eHow Can We Solve This?\u003c/h3\u003e\n\u003cp\u003eSolving the test data dilemma requires a systematic approach. Here are some practical steps to ensure developers have access to safe and effective test data.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSet Clear Rules\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eStart by establishing strict policies that prohibit the use of real production data in development environments. Provide training to educate all team members about data privacy laws, such as GDPR, HIPAA, or India’s Personal Data Protection Act (PDPA). Continuous training ensures everyone understands their role in safeguarding data.\u003c/p\u003e\n\u003col start=\"2\"\u003e\n\u003cli\u003eLeverage Test Data Tools\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eModern tools can help create, manage, and safeguard test data effectively. These tools offer features like:\u003c/p\u003e\n\u003cp\u003eData Masking: Ensures sensitive information is obfuscated while retaining the original data’s structure, making it safe for testing without compromising privacy.\u003c/p\u003e\n\u003cp\u003eSynthetic Data Generation: Produces entirely artificial yet realistic data sets to mimic real-world scenarios, eliminating reliance on production data.\u003c/p\u003e\n\u003cp\u003eAccess Controls and Authorization: Enforces stringent access controls and robust authorization mechanisms to guarantee that only authorized personnel can manage or utilize sensitive test data securely.\u003c/p\u003e\n\u003cp\u003ePopular tools include \u003ca href=\"https://www.ibm.com/products/infosphere-optim-test-data-management\" target=\"_blank\"\u003eIBM Optim\u003c/a\u003e. By integrating such tools into your workflow, you can automate the creation and management of test data.\u003c/p\u003e\n\u003col start=\"3\"\u003e\n\u003cli\u003eDevelop a Comprehensive Test Data Strategy\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eA robust test data strategy encompasses identifying the specific types of data required for various testing scenarios, ensuring that datasets are regularly generated and refreshed to maintain their accuracy and relevance. Additionally, it involves implementing stringent compliance checks to guarantee that all test data adheres to applicable privacy regulations, protecting both the organization and its users from potential risks.\u003c/p\u003e\n\u003col start=\"4\"\u003e\n\u003cli\u003eAutomate Test Data Pipelines\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eManual handling of test data is not only inefficient but also risky. Automating test data pipelines can:\u003c/p\u003e\n\u003cp\u003eStreamline the provisioning of test data to teams.\u003c/p\u003e\n\u003cp\u003eEnforce validation checks to ensure data safety and quality.\u003c/p\u003e\n\u003cp\u003eEnable rapid scalability to meet testing demands.\u003c/p\u003e\n\u003col start=\"5\"\u003e\n\u003cli\u003eIsolate Testing Environments\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eUse sandboxed environments to isolate testing activities from production systems. Populate these environments with fake or masked data to create a secure testing ecosystem. Additionally, ensure that:\u003c/p\u003e\n\u003cp\u003eNotifications (e.g., emails or SMS) sent during testing are redirected to a controlled inbox accessible only by the team.\u003c/p\u003e\n\u003cp\u003eAccess controls prevent unauthorized use of real data.\u003c/p\u003e\n\u003col start=\"6\"\u003e\n\u003cli\u003eMonitor and Audit Regularly\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eEstablish continuous monitoring to detect and prevent the use of real production data in non-production environments. Use logging and auditing tools to:\u003c/p\u003e\n\u003cp\u003eTrack the flow and usage of test data.\u003c/p\u003e\n\u003ch2 id=\"identify-and-rectify-instances-of-data-leakage-or-misuse\"\u003eIdentify and rectify instances of data leakage or misuse.\u003c/h2\u003e\n\u003ch3 id=\"why-this-matters\"\u003eWhy This Matters\u003c/h3\u003e\n\u003cp\u003eAddressing the test data dilemma is not just about avoiding problems; it’s about building a strong and sustainable foundation of trust, operational efficiency, and software reliability. By implementing these strategies, organizations can achieve multiple objectives. First, they can protect customer trust by ensuring sensitive information is securely handled, reinforcing user confidence in their systems. Second, they can ensure legal compliance, mitigating the risks of costly penalties, lawsuits, and reputational harm arising from data privacy violations. Third, they can enhance development quality by providing developers with comprehensive and realistic test data, fostering an environment for creating robust, high-performance software. Finally, these efforts help to foster a privacy-first culture within the organization, where teams consistently prioritize data security and ethical handling practices, creating a competitive edge in today’s data-conscious market.\u003c/p\u003e\n\u003chr\u003e\n\u003ch3 id=\"take-action-today\"\u003eTake Action Today\u003c/h3\u003e\n\u003cp\u003eThe challenge of test data management is real, but it is not impossible to overcome. By taking proactive steps to create, manage, and safeguard test data, organizations can prevent costly mistakes and set themselves up for success. Let’s commit to handling test data responsibly, not just for compliance but for ethical and professional excellence.\u003c/p\u003e\n\u003cp\u003eA small effort today can prevent massive challenges tomorrow. Together, let’s make test data management a priority in every software project.\u003c/p\u003e\n","description":"","image":"/images/blogs/2025/jan/the-test-data-dilemma/banner.png","permalink":"http://localhost:1313/blogs/2025/jan/the-test-data-dilemma/","title":"The Test Data Dilemma"},{"content":"\u003cp\u003e\u003cstrong\u003eIntroduction\u003c/strong\u003e: What if the familiar captcha boxes we encounter daily were designed by your team, tailored specifically to your organization’s needs?\u003cbr\u003e\nRecently, I took on the challenge of creating a custom, self-hosted captcha service for a client. It sounded simple at first—why reinvent the wheel when solutions like Google’s reCAPTCHA already exist? But there was a twist: the client wanted full control, aiming to ensure data privacy and integrate accessibility features.\u003c/p\u003e\n\u003cp\u003eThis journey wasn’t straightforward, involving intense debates, surprising technical constraints, and more than a few “Aha!” moments. Here, I’ll walk you through the challenges we faced, the solutions we explored, and the lessons we learned, hoping these insights will be useful for anyone venturing into similar territory.\u003c/p\u003e\n\u003ch2 id=\"why-captcha\"\u003eWhy CAPTCHA?\u003c/h2\u003e\n\u003cp\u003eBefore diving in, we asked ourselves, Do we really need CAPTCHA? Our team debated the pros and cons of implementing a captcha solution versus relying on document verification and other bot-prevention measures.\u003c/p\u003e\n\u003ch3 id=\"against-captcha\"\u003eAgainst CAPTCHA:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eExisting Verification Steps\u003c/strong\u003e: We already required document uploads, and bots wouldn’t pass that barrier.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eUser Experience\u003c/strong\u003e: CAPTCHAs often frustrate users, particularly those with disabilities.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLanguage and Accessibility\u003c/strong\u003e: Many captchas assume users are fluent in English and sighted, which isn’t always the case.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"for-captcha\"\u003eFor CAPTCHA:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eCost Savings\u003c/strong\u003e: Automated verification could reduce the manual effort of validating documents and filtering out the ones uploaded by bots.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eScalability\u003c/strong\u003e: With future plans for fully automated onboarding, CAPTCHA would become essential.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eSecurity Needs\u003c/strong\u003e: Preventing credential stuffing and limiting OTP requests could save both costs and data.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cem\u003eIn the end, the decision was almost unanimous\u003c/em\u003e: CAPTCHA was necessary. However, implementing it came with a clear mandate to enhance user experience and accessibility.\u003c/p\u003e\n\u003ch3 id=\"the-quest-for-control-why-self-hosting\"\u003eThe Quest for Control: Why Self-Hosting?\u003c/h3\u003e\n\u003cp\u003eWhile many popular CAPTCHA solutions like Google’s reCAPTCHA are effective, they come with drawbacks—data collection, limited customization, and recurring costs. Our client wanted control over every aspect, from branding to data privacy. Here’s a quick rundown of the pros and cons of a SaaS CAPTCHA like Google’s:\u003c/p\u003e\n\u003cp\u003ePros:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eReady-made and reliable, backed by extensive bot-fighting data.\u003c/li\u003e\n\u003cli\u003eReduced development time.\u003c/li\u003e\n\u003cli\u003eMinimal setup and a trusted brand.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eCons:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eData-sharing with the provider.\u003c/li\u003e\n\u003cli\u003eLimited customization options.\u003c/li\u003e\n\u003cli\u003eRecurring costs that could become significant over time.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eSelf-hosting promised complete control but demanded more upfront effort. Armed with a list of needs—self-hosted, accessible, and with both obtrusive and non-obtrusive options—we embarked on our custom CAPTCHA journey.\u003c/p\u003e\n\u003ch3 id=\"the-build-or-buy-dilemma\"\u003eThe Build-or-Buy Dilemma\u003c/h3\u003e\n\u003cp\u003eInitially, we considered a third-party solution like Captcha.com. However, we faced regulatory challenges since it wasn’t on the client’s approved vendor list. Onboarding would have taken more time than developing our solution from scratch! So, with a ticking clock, we decided to go down the self-hosted path, focusing on building something that would meet both security and user experience standards.\u003c/p\u003e\n\u003ch3 id=\"finding-the-right-tools-evaluating-alternatives\"\u003eFinding the Right Tools: Evaluating Alternatives\u003c/h3\u003e\n\u003cp\u003eWith time running short, we assessed various open-source options:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://simplecaptcha.sourceforge.net/\" target=\"_blank\"\u003e\u003cstrong\u003eSimpleCaptcha\u003c/strong\u003e\u003c/a\u003e: Java-based, but there were some licensing issues and we could not proceed as per the legal department.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/logicsquad/nanocaptcha/tree/develop\" target=\"_blank\"\u003e\u003cstrong\u003eNanoCaptcha\u003c/strong\u003e\u003c/a\u003e: Great piece of work, but missed some of our critical requirements.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eWe also found some great alternatives, but they were written in tech stack that our team didn\u0026rsquo;t had capability to support.\u003c/p\u003e\n\u003cp\u003eWith each option, we balanced functionality, legal approvals, and technical compatibility with our stack. After much deliberation, we settled on a solution that combined multiple open-source components.\u003c/p\u003e\n\u003ch3 id=\"overcoming-challenges-prioritizing-testing-and-iterating\"\u003eOvercoming Challenges: Prioritizing, Testing, and Iterating\u003c/h3\u003e\n\u003cp\u003eHere’s where the project took a turn: with tight deadlines, technical constraints, and licensing hurdles, we had to make trade-offs. Here’s a snapshot of our approach:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eMinimal Viable Product (MVP)\u003c/strong\u003e: Starting with the essentials, we rapidly iterated while collecting feedback.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTeam Expertise Alignment\u003c/strong\u003e: We chose familiar frameworks to keep the development curve manageable.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eRigorous Security Checks\u003c/strong\u003e: Every library had to pass stringent security checks for CISO approval, and each integration was tested for compatibility with our environment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"balancing-user-experience-with-security\"\u003eBalancing User Experience with Security\u003c/h3\u003e\n\u003cp\u003eThe ultimate challenge was balancing security with user convenience. We wanted an experience that felt invisible to genuine users but was a nightmare for bots. Here’s how we approached this:\u003c/p\u003e\n\u003ch4 id=\"non-obtrusive-techniques\"\u003eNon-Obtrusive Techniques:\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eHoneypot Fields\u003c/strong\u003e: Bots tend to fill all form fields, so we added invisible fields that only bots would touch.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eBehavioral Analysis\u003c/strong\u003e: We tracked interactions like mouse movements and keystrokes to detect automated behavior.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eData\u003c/strong\u003e : Collecting a lot of meta data, and running analytical algorithms on them helped us capture and identify more details of the users.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"obtrusive-methods\"\u003eObtrusive Methods:\u003c/h4\u003e\n\u003cp\u003eWe reserved visual or audio CAPTCHAs only for suspicious cases, reducing friction for legitimate users.\nIf a user completed a form in milliseconds, it was flagged—bots are fast, humans take a bit longer. But we made sure the obtrusive elements only appeared when non-obtrusive methods weren’t enough.\u003c/p\u003e\n\u003ch3 id=\"learnings-the-dos-and-donts-of-captcha-design\"\u003eLearnings: The Do’s and Don’ts of CAPTCHA Design\u003c/h3\u003e\n\u003cp\u003eThroughout this project, we picked up some invaluable lessons about designing captchas that are both user-friendly and secure:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eGenerate Unique Captchas everytime\u003c/strong\u003e: Avoid replay attacks by associating captchas with a single attempt only, be it correct or incorrect attempt.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eUse a Mix of Text, Audio, and Visual Elements\u003c/strong\u003e: Each option has its vulnerabilities, so using a blend is ideal.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAccessibility Matters\u003c/strong\u003e: Many captchas unintentionally exclude users with disabilities. We minimized small, confusing characters and relied on high-contrast designs, along with options for non-english speakers/ listeners.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eObfuscate with Unpredictability\u003c/strong\u003e: Randomized text, colors, and fonts help stay a step ahead of AI bots.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eLeverage Behavioral Biometrics\u003c/strong\u003e: Behavioral biometrics, like typing speed or mouse movements, installed plugins,  can enhance security without affecting usability.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"beyond-captcha-advanced-security-tactics\"\u003eBeyond CAPTCHA: Advanced Security Tactics\u003c/h3\u003e\n\u003cp\u003eLooking forward, we’re exploring behavioral biometrics, which can create a risk profile for each user without disrupting their experience. Device fingerprinting—using a device’s unique attributes to detect bots—is another avenue we’re considering, though it’s still in the early stages.\u003c/p\u003e\n\u003ch3 id=\"captcha-with-the-human-element\"\u003eCAPTCHA with the Human Element\u003c/h3\u003e\n\u003cp\u003eThe irony of CAPTCHA is that, while designed to separate humans from bots, it often frustrates the humans! Designing a solution that’s secure yet seamless is a delicate balancing act. We learned that CAPTCHA should be part of a layered security strategy, one that complements other security measures like multi-factor authentication and rate limiting.\u003c/p\u003e\n\u003cp\u003eThis project taught me that security is a journey, not a destination. Bots may never go away, but we can make their lives a lot harder.\u003c/p\u003e\n\u003cp\u003eHave you had any CAPTCHA adventures? What solutions or challenges have you encountered? I’d love to hear your thoughts—share your stories, insights, or questions in the comments, and let’s keep the conversation going.\u003c/p\u003e\n","description":"Explore the journey of designing a self-hosted CAPTCHA service tailored for privacy and accessibility. Discover insights on balancing security and user experience, overcoming challenges, and best practices to keep bots at bay while enhancing UX","image":"/images/blogs/2024/nov/designing-a-captcha-service/banner.png","permalink":"http://localhost:1313/blogs/2024/nov/designing-a-captcha-service/","title":"Designing a Self-Hosted Captcha Service: Challenges, Insights, and Solutions"},{"content":"\u003cp\u003eI consider myself fortunate to have been hired by Infosys right after college, and even luckier to work on a world-class banking product – Finacle. When I joined, Infosys was revamping the channel layer of Finacle, and I was given the incredible opportunity to contribute to this effort from the ground up.\u003c/p\u003e\n\u003ch1 id=\"key-learnings-from-developing-finacle-e-banking-architecture-feba\"\u003eKey Learnings from Developing Finacle E-Banking Architecture (FEBA)\u003c/h1\u003e\n\u003cp\u003eWorking on the Finacle E-Banking Architecture (FEBA) taught me many invaluable lessons. Here are the key takeaways:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSecurity is Paramount\u003c/li\u003e\n\u003cli\u003ePerformance is Crucial\u003c/li\u003e\n\u003cli\u003eUser Experience Should Reflect Customer Needs\u003c/li\u003e\n\u003cli\u003eDesign for Extensibility and Reusability\u003c/li\u003e\n\u003cli\u003eChoose a Widely Adopted Language\u003c/li\u003e\n\u003cli\u003eStandardize and Automate Processes Where Possible\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"security-is-paramount\"\u003eSecurity is Paramount\u003c/h2\u003e\n\u003cp\u003eGiven that FEBA is a customer-facing product hosted in a publically accessible environment, security was our number one priority. We underwent extensive training on secure software development.\nSecurity concerns were a major focus during peer reviews and quality assurance.\u003c/p\u003e\n\u003cp\u003eI was actively involved in developing the authentication and authorization frameworks, as well as obtaining security certifications for FEBA.\u003c/p\u003e\n\u003cp\u003eHere are some challenges we faced:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eImproper Encryption\u003c/strong\u003e: A variable name was hardcoded post-encryption, revealing an anti-pattern known as \u0026ldquo;security by obscurity.\u0026rdquo;\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003ePublic Internal Information\u003c/strong\u003e: Developers often left comments in the code that exposed sensitive information such as ticket IDs and developer emails, posing significant risks.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUser Information Exposure\u003c/strong\u003e: We had a requirement to block users after three incorrect password attempts. However, our approach inadvertently allowed hackers to brute force valid usernames through misleading error messages.\u003c/p\u003e\n\u003ch2 id=\"performance-is-crucial\"\u003ePerformance is Crucial\u003c/h2\u003e\n\u003cp\u003eWith millions of users globally, performance was critical. We meticulously reviewed our code and adhered to best practices for performance optimization, such as:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMinimizing nested loops\u003c/li\u003e\n\u003cli\u003eUtilizing efficient data structures\u003c/li\u003e\n\u003cli\u003eCaching frequently accessed data\u003c/li\u003e\n\u003cli\u003eMinimizing data transfer over network\u003c/li\u003e\n\u003cli\u003eNormalized vs Flat tables considerations\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"user-experience-should-reflect-customer-needs\"\u003eUser Experience Should Reflect Customer Needs\u003c/h2\u003e\n\u003cp\u003eInitially, I found it counterintuitive that we were discouraged from creating visually appealing user interfaces. However, I soon realized that our product needed to accommodate various banks\u0026rsquo; branding and user experience guidelines.\u003c/p\u003e\n\u003cp\u003eInstead of developing beautiful interfaces, we focused on providing flexibility through multiple service approaches. We ensured that our APIs were configurable, well-documented, and offered clear error messages with potential solutions.\nBeautiful interfaces were added later during customization phases.\u003c/p\u003e\n\u003ch2 id=\"design-for-extensibility-and-reusability\"\u003eDesign for Extensibility and Reusability\u003c/h2\u003e\n\u003cp\u003eThe modular structure of our code was essential. Each component was designed to be replaceable without affecting others. We emphasized configuration over hardcoding, allowing for easy adjustments based on specific client requirements.\u003c/p\u003e\n\u003ch2 id=\"choose-a-widely-adopted-language\"\u003eChoose a Widely Adopted Language\u003c/h2\u003e\n\u003cp\u003eOur clients preferred various technologies, so we opted for XML as a documentation language. Its simplicity made it accessible for both developers and non-developers. After implementing the product in XML, we utilized automated tools to convert it into Java or .NET, making our code language-agnostic.\u003c/p\u003e\n\u003ch2 id=\"standardize-processes-where-possible\"\u003eStandardize Processes Where Possible\u003c/h2\u003e\n\u003cp\u003eInfosys is synonymous with standardization, which was evident throughout our work environment. This standardization extended to documentation formats, coding styles, and bug tracking, fostering familiarity and efficiency.\u003c/p\u003e\n\u003cp\u003eOne of my colleagues even automated the generation of code from requirement specifications, illustrating the potential for efficiency through structured thinking. Imagine the possibilities if we combined such structured thinking with today\u0026rsquo;s AI advancements!\u003c/p\u003e\n\u003ch2 id=\"automate-repetitive-tasks\"\u003eAutomate Repetitive Tasks\u003c/h2\u003e\n\u003cp\u003eWe embraced automation to reduce human error dramatically. From build and testing processes to documentation and analytics, we automated as much as possible, resulting in smoother releases and enhanced product reliability.\u003c/p\u003e\n","description":"Explore my journey as a solution architect at Infosys, where I developed the Finacle E-Banking Architecture (FEBA). Discover key lessons in security, performance optimization, user experience design, and automation in banking software development. Learn how modular design and standardization can enhance software solutions in the financial sector.","image":"/images/blogs/2024/aug/my-learnings-from-finacle/banner.png","permalink":"http://localhost:1313/blogs/2024/aug/my-learnings-from-finacle/","title":"My Journey with Finacle: Lessons Learned in Banking Software Development"},{"content":"\u003cblockquote\u003e\n\u003cp\u003eIt is easier to edit a draft than to create a new. I   understand that this blog is not upto the mark that I want it to be, however, I am still publishing it, so that I can keep on improving it.\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003eThe code for this blog is checked-in at \u003ca href=\"https://github.com/mohitkanwar/spring-microservices-framework\"\u003ehttps://github.com/mohitkanwar/spring-microservices-framework\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eWhile developing a microservices setup, one of the prime aspect is taking care of the security of the APIs.\u003c/p\u003e\n\u003cp\u003eToday, we are going to talk about setting up our application infrastructure to authenticate the APIs.\u003c/p\u003e\n\u003ch1 id=\"architecture\"\u003eArchitecture\u003c/h1\u003e\n\u003cp\u003eThis system involves\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eGateway\u003c/li\u003e\n\u003cli\u003eDiscovery\u003c/li\u003e\n\u003cli\u003eAuthentication Service\u003c/li\u003e\n\u003cli\u003eSecured Downstream Services e.g. Accounts Service\u003c/li\u003e\n\u003cli\u003ePublic Downstream Services e.g. Interest Calculator Service\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003eblock-beta\ncolumns 5\n  user((\u0026#34;User\u0026#34;)):5\n  space:5\n  block:InfraBlock:5\n    srv_gateway[\u0026#34;Gateway\u0026#34;]\n  end\n  space:5\n  block:InfraSupportBlock:5\n    srv_discovery[\u0026#34;Discovery\u0026#34;]:1\n    srv_auth[\u0026#34;Authentication Service\u0026#34;]:1\n    space\n    space\n    space\n  end\n  space:5\n  block:ServicesBlock:5\n    space\n    space\n    srv_public[\u0026#34;Public Service\u0026#34;]\n    srv_secured[\u0026#34;Secured Service\u0026#34;]\n  end\n  user --\u0026#34;Access\u0026#34;--\u0026gt; srv_gateway\n  srv_gateway --\u0026#34;Find available\u0026lt;br\u0026gt; services\u0026#34;--\u0026gt; srv_discovery\n  srv_discovery --\u0026gt; srv_gateway\n  srv_gateway --\u0026#34;Authenticate\u0026#34;--\u0026gt; srv_auth\n  srv_gateway --\u0026#34;Publically accessible\u0026#34;--\u0026gt; srv_public\n  srv_gateway --\u0026#34;Validate Access\u0026lt;br\u0026gt; before invoking\u0026#34;--\u0026gt; srv_secured\n\u003c/code\u003e\u003c/pre\u003e\u003ch3 id=\"gateway\"\u003eGateway\u003c/h3\u003e\n\u003cp\u003eThe Gateway service is the entry point of the application. It exposes all the APIs from downstream services.\u003c/p\u003e\n\u003cp\u003eSince this is the entry point of the application, it takes care of the following\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eAPIs Exposure\u003c/li\u003e\n\u003cli\u003eLoad Balancing\u003c/li\u003e\n\u003cli\u003eCircuit Breaking\u003c/li\u003e\n\u003cli\u003eToken Validation\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"discovery\"\u003eDiscovery\u003c/h3\u003e\n\u003cp\u003eThe Discovery service is the service responsible to discover the instances of running microservices and inform gateway about the same.\u003c/p\u003e\n\u003ch3 id=\"authentication-service\"\u003eAuthentication Service\u003c/h3\u003e\n\u003cp\u003eThis service is responsible for authenticating an incoming request by either generating an authentication token, or by validating an existing token. In today\u0026rsquo;s exercise, we are going to use Keycloak as our authentication service.\u003c/p\u003e\n\u003ch3 id=\"secured-services\"\u003eSecured Services\u003c/h3\u003e\n\u003cp\u003eThe secured downstream services (or APIs) are the endpoints that need security. Such endpoints are user specific, and a user accessing these APIs must authenticate and authorize himself before accessing these functionalities.\u003c/p\u003e\n\u003ch3 id=\"public-services\"\u003ePublic Services\u003c/h3\u003e\n\u003cp\u003eThe public services or APIs are the endpoints that are developed for general consumption. No authentication is necessary for such APIs.\u003c/p\u003e\n\u003ch1 id=\"tech-stack\"\u003eTech-Stack\u003c/h1\u003e\n\u003cp\u003eFor this solution, we are going to use Spring based technologies.\nThere may be additional techs added as part of services development\u003c/p\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eS.NO\u003c/th\u003e\n          \u003cth\u003eTechnology\u003c/th\u003e\n          \u003cth style=\"text-align: right\"\u003eVersion\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e1\u003c/td\u003e\n          \u003ctd\u003eJava\u003c/td\u003e\n          \u003ctd style=\"text-align: right\"\u003e21\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e2\u003c/td\u003e\n          \u003ctd\u003eSpringBoot\u003c/td\u003e\n          \u003ctd style=\"text-align: right\"\u003e3.3.1\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e3\u003c/td\u003e\n          \u003ctd\u003eGradle\u003c/td\u003e\n          \u003ctd style=\"text-align: right\"\u003e\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003e4\u003c/td\u003e\n          \u003ctd\u003espringCloudVersion\u003c/td\u003e\n          \u003ctd style=\"text-align: right\"\u003e2023.0.3\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch2 id=\"code-structure\"\u003eCode Structure\u003c/h2\u003e\n\u003cp\u003eCreate a software system as follows\u003c/p\u003e\n\u003ch3 id=\"discovery-1\"\u003eDiscovery\u003c/h3\u003e\n\u003cp\u003eCreate a SpringBoot application with the following dependency\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e       \u003cspan style=\"color:#f92672\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-netflix-eureka-server\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAdd the following annotation on your main class\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@EnableEurekaServer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAdd the following properties\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yaml\" data-lang=\"yaml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003espring\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eapplication\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ediscovery\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eserver\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eport\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e8761\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eeureka\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eclient\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eregister-with-eureka\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003efetch-registry\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eserver\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003ewait-time-in-ms-when-sync-empty\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e0\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eStart the service and check if it is running on \u003ca href=\"http://localhost:8761/\" target=\"_blank\"\u003ehttp://localhost:8761/\u003c/a\u003e.\u003c/p\u003e\n\u003ch3 id=\"gateway-1\"\u003eGateway\u003c/h3\u003e\n\u003cp\u003eSetup the Gateway service by adding following dependencies\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-gateway\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-starter-netflix-eureka-client\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-webflux\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-security\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.security\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-security-oauth2-resource-server\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.security\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-security-oauth2-jose\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.security\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-security-jwt\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;version\u0026gt;\u003c/span\u003e1.1.1.RELEASE\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/version\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.projectlombok\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003elombok\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003eprovided\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.boot\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-boot-starter-test\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003e\u0026lt;scope\u0026gt;\u003c/span\u003etest\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/scope\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eEnable the eureka client\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@EnableDiscoveryClient\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eAdd the following configurations in application.yml\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eserver\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eport\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e8080\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003espring\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eapplication\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003egateway\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003ecloud\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003egateway\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eroutes\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        - \u003cspan style=\"color:#f92672\"\u003eid\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eeureka-client\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003euri\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003elb://EUREKA-CLIENT\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003epredicates\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            - \u003cspan style=\"color:#ae81ff\"\u003ePath=/eureka-client/**\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"services\"\u003eServices\u003c/h3\u003e\n\u003cp\u003eFor demonstration, I have created a microservice called calculators-service.\u003c/p\u003e\n\u003cp\u003eIt is a springboot application. It exposes two end points.\nOne is supposed to be public, and another one is supposed to be protected.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003epackage\u003c/span\u003e com.mk.calculatorsservice.controller;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e com.mk.calculatorsservice.domain.request.FDRequest;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e com.mk.calculatorsservice.domain.response.FDResponse;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e org.springframework.web.bind.annotation.*;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@RestController\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@RequestMapping\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/calculator\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eFDController\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@PostMapping\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/fd/interest\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e FDResponse \u003cspan style=\"color:#a6e22e\"\u003ecalculateFD\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003e@RequestBody\u003c/span\u003e FDRequest fdRequest) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e// Example interest rates for different schemes\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003edouble\u003c/span\u003e interestRate \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eswitch\u003c/span\u003e (fdRequest.\u003cspan style=\"color:#a6e22e\"\u003egetSchemeCode\u003c/span\u003e()) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;SCHEME_A\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e 5.\u003cspan style=\"color:#a6e22e\"\u003e0\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;SCHEME_B\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e 6.\u003cspan style=\"color:#a6e22e\"\u003e0\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;SCHEME_C\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e 7.\u003cspan style=\"color:#a6e22e\"\u003e0\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003edefault\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003ethrow\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e IllegalArgumentException(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Invalid scheme code\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        };\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003edouble\u003c/span\u003e interest \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e (fdRequest.\u003cspan style=\"color:#a6e22e\"\u003egetAmount\u003c/span\u003e() \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e interestRate \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e fdRequest.\u003cspan style=\"color:#a6e22e\"\u003egetDuration\u003c/span\u003e()) \u003cspan style=\"color:#f92672\"\u003e/\u003c/span\u003e 100;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003edouble\u003c/span\u003e maturityAmount \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e fdRequest.\u003cspan style=\"color:#a6e22e\"\u003egetAmount\u003c/span\u003e() \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e interest;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        FDResponse fdResponse \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e FDResponse();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        fdResponse.\u003cspan style=\"color:#a6e22e\"\u003esetInterestRate\u003c/span\u003e(interestRate);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        fdResponse.\u003cspan style=\"color:#a6e22e\"\u003esetMaturityAmount\u003c/span\u003e(maturityAmount);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e fdResponse;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// should be public\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@PostMapping\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/fd/interest/p\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e FDResponse \u003cspan style=\"color:#a6e22e\"\u003ecalculatePublicFD\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003e@RequestBody\u003c/span\u003e FDRequest fdRequest) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#75715e\"\u003e// Example interest rates for different schemes\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003edouble\u003c/span\u003e interestRate \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eswitch\u003c/span\u003e (fdRequest.\u003cspan style=\"color:#a6e22e\"\u003egetSchemeCode\u003c/span\u003e()) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;SCHEME_A\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e 5.\u003cspan style=\"color:#a6e22e\"\u003e0\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;SCHEME_B\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e 6.\u003cspan style=\"color:#a6e22e\"\u003e0\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003ecase\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;SCHEME_C\u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e 7.\u003cspan style=\"color:#a6e22e\"\u003e0\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003edefault\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003ethrow\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e IllegalArgumentException(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Invalid scheme code\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        };\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003edouble\u003c/span\u003e interest \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e (fdRequest.\u003cspan style=\"color:#a6e22e\"\u003egetAmount\u003c/span\u003e() \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e interestRate \u003cspan style=\"color:#f92672\"\u003e*\u003c/span\u003e fdRequest.\u003cspan style=\"color:#a6e22e\"\u003egetDuration\u003c/span\u003e()) \u003cspan style=\"color:#f92672\"\u003e/\u003c/span\u003e 100;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003edouble\u003c/span\u003e maturityAmount \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e fdRequest.\u003cspan style=\"color:#a6e22e\"\u003egetAmount\u003c/span\u003e() \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e interest;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        FDResponse fdResponse \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e FDResponse();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        fdResponse.\u003cspan style=\"color:#a6e22e\"\u003esetInterestRate\u003c/span\u003e(interestRate);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        fdResponse.\u003cspan style=\"color:#a6e22e\"\u003esetMaturityAmount\u003c/span\u003e(maturityAmount);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e fdResponse;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"authentication-service-1\"\u003eAuthentication Service\u003c/h3\u003e\n\u003cp\u003eFor simplicity, we are going to use Keycloak as our authentication service. Practically, I would like to create a wrapper surrounding Keycloak and then use it as authentication service.\u003c/p\u003e\n\u003cp\u003eFor now, let\u0026rsquo;s use Keycloak itself.\u003c/p\u003e\n\u003cp\u003eWe can make use of docker-compose.yml to spin up a Keycloak instance.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eversion\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;3.8\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eservices\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003ekeycloak\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eimage\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003equay.io/keycloak/keycloak:25.0.2\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003econtainer_name\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003emkbank-keycloak-container\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eenvironment\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eKEYCLOAK_ADMIN\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eadmin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eKEYCLOAK_ADMIN_PASSWORD\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eadmin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eKC_LOG_LEVEL\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eINFO\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eports\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;8082:8080\u0026#34;\u003c/span\u003e  \u003cspan style=\"color:#75715e\"\u003e# Map host port 8082 to container port 8080\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003ecommand\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003estart-dev \u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e# Use the start-dev command for development mode\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003erestart\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eunless-stopped \u003c/span\u003e \u003cspan style=\"color:#75715e\"\u003e# Restart the container unless it\u0026#39;s explicitly stopped\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003etty\u003c/span\u003e: \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e  \u003cspan style=\"color:#75715e\"\u003e# Allocate a pseudo-TTY for better log display in console\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003evolumes\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#ae81ff\"\u003e./keycloak_data:/opt/keycloak/data\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen we need to setup a new Realm : Customers\nCreate a client and User within the client for authentication.\u003c/p\u003e\n\u003ch3 id=\"gateway---revisited\"\u003eGateway - revisited\u003c/h3\u003e\n\u003cp\u003eLet\u0026rsquo;s go back to Gateway to configure the routes and security steps.\u003c/p\u003e\n\u003cp\u003eUpdate the configuration to add Keycloak configurations\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003espring\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003esecurity\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eoauth2\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eresourceserver\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003ejwt\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003eissuer-uri\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehttp://localhost:8082/realms/customers\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eclient\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003eregistration\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003ekeycloak\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003eclient-id\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003egateway-client\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003eclient-secret\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eHPSzCoP0Q96xqm77vEhaigkMhmn4vZ1B\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003escope\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eopenid,profile,email\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003eauthorization-grant-type\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eauthorization_code\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003eredirect-uri\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;{baseUrl}/login/oauth2/code/{registrationId}\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003eprovider\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003ekeycloak\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003eauthorization-uri\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehttp://localhost:8082/realms/customers/protocol/openid-connect/auth\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003etoken-uri\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehttp://localhost:8082/realms/customers/protocol/openid-connect/token\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003euser-info-uri\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehttp://localhost:8082/realms/customers/protocol/openid-connect/userinfo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003ejwk-set-uri\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehttp://localhost:8082/realms/customers/protocol/openid-connect/certs\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003euser-name-attribute\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003epreferred_username\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eCreate a new configuration to specify public and protected routes :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eapplication\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eroutes\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003epublicRoutes\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eeureka_route\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003epath\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e/eureka/**\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003euri\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehttp://localhost:8761/eureka/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003efd_interest_calculator_route\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003epath\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e/calculator/fd/interest/p\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003euri\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003elb://CALCULATORS-SERVICE\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eauthenticatedRoutes\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003efd_interest_calculator_route\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003epath\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e/calculator/fd/interest\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003euri\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003elb://CALCULATORS-SERVICE\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe complete yml now looks like :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eserver\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eport\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e8080\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003espring\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eapplication\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003egateway\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003ecloud\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003egateway\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eroutes\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        - \u003cspan style=\"color:#f92672\"\u003eid\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eeureka-client\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003euri\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003elb://EUREKA-CLIENT\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003epredicates\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            - \u003cspan style=\"color:#ae81ff\"\u003ePath=/eureka-client/**\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003esecurity\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eoauth2\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eresourceserver\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003ejwt\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003eissuer-uri\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehttp://localhost:8082/realms/customers\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003eclient\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003eregistration\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003ekeycloak\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003eclient-id\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003egateway-client\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003eclient-secret\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eHPSzCoP0Q96xqm77vEhaigkMhmn4vZ1B\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003escope\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eopenid,profile,email\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003eauthorization-grant-type\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eauthorization_code\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003eredirect-uri\u003c/span\u003e: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;{baseUrl}/login/oauth2/code/{registrationId}\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003eprovider\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e          \u003cspan style=\"color:#f92672\"\u003ekeycloak\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003eauthorization-uri\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehttp://localhost:8082/realms/customers/protocol/openid-connect/auth\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003etoken-uri\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehttp://localhost:8082/realms/customers/protocol/openid-connect/token\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003euser-info-uri\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehttp://localhost:8082/realms/customers/protocol/openid-connect/userinfo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003ejwk-set-uri\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehttp://localhost:8082/realms/customers/protocol/openid-connect/certs\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#f92672\"\u003euser-name-attribute\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003epreferred_username\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eeureka\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eclient\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eservice-url\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003edefaultZone\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehttp://localhost:8761/eureka/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eapplication\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eroutes\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003epublicRoutes\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eeureka_route\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003epath\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e/eureka/**\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003euri\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehttp://localhost:8761/eureka/\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003efd_interest_calculator_route\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003epath\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e/calculator/fd/interest/p\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003euri\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003elb://CALCULATORS-SERVICE\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eauthenticatedRoutes\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      - \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003efd_interest_calculator_route\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003epath\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e/calculator/fd/interest\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#f92672\"\u003euri\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003elb://CALCULATORS-SERVICE\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003elogging\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003elevel\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eorg.springframework.security\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eDEBUG\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003eorg.springframework.security.oauth2\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eDEBUG\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eCreate a domain model to read this configuration :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003epackage\u003c/span\u003e com.mk.gateway.domains;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e lombok.Getter;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e lombok.Setter;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@Setter\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@Getter\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eAppRoute\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e String name;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e String path;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e String uri;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eCreate a configuration reading class\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003epackage\u003c/span\u003e com.mk.gateway.configs;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e com.mk.gateway.domains.AppRoute;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e lombok.Setter;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e org.springframework.boot.context.properties.ConfigurationProperties;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e org.springframework.context.annotation.Configuration;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e java.util.ArrayList;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e java.util.List;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@Setter\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@Configuration\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@ConfigurationProperties\u003c/span\u003e(prefix \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;application.routes\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eRouteConfigProperties\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e List\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eAppRoute\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e publicAppRoutes;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e List\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eAppRoute\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e authenticatedAppRoutes;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e List\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eAppRoute\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egetPublicAppRoutes\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (publicAppRoutes \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enull\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            publicAppRoutes \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e ArrayList\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026gt;\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e publicAppRoutes;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e List\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eAppRoute\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egetAuthenticatedAppRoutes\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eif\u003c/span\u003e (authenticatedAppRoutes \u003cspan style=\"color:#f92672\"\u003e==\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enull\u003c/span\u003e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            authenticatedAppRoutes \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e ArrayList\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026gt;\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e authenticatedAppRoutes;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eDefine the App routes\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003epackage\u003c/span\u003e com.mk.gateway.routes;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e com.mk.gateway.configs.RouteConfigProperties;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e com.mk.gateway.domains.AppRoute;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e org.springframework.beans.factory.annotation.Autowired;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e org.springframework.cloud.gateway.route.RouteLocator;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e org.springframework.context.annotation.Bean;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e org.springframework.context.annotation.Configuration;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@Configuration\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eCustomRouteConfig\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@Autowired\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e RouteConfigProperties routeConfigProperties;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@Bean\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e RouteLocator \u003cspan style=\"color:#a6e22e\"\u003ecustomRouteLocator\u003c/span\u003e(RouteLocatorBuilder builder) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        RouteLocatorBuilder.\u003cspan style=\"color:#a6e22e\"\u003eBuilder\u003c/span\u003e routesBuilder \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e builder.\u003cspan style=\"color:#a6e22e\"\u003eroutes\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e (AppRoute appRoute : routeConfigProperties.\u003cspan style=\"color:#a6e22e\"\u003egetPublicAppRoutes\u003c/span\u003e()) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            routesBuilder.\u003cspan style=\"color:#a6e22e\"\u003eroute\u003c/span\u003e(appRoute.\u003cspan style=\"color:#a6e22e\"\u003egetName\u003c/span\u003e(), r \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e r.\u003cspan style=\"color:#a6e22e\"\u003epath\u003c/span\u003e(appRoute.\u003cspan style=\"color:#a6e22e\"\u003egetPath\u003c/span\u003e())\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    .\u003cspan style=\"color:#a6e22e\"\u003euri\u003c/span\u003e(appRoute.\u003cspan style=\"color:#a6e22e\"\u003egetUri\u003c/span\u003e()));\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e (AppRoute appRoute : routeConfigProperties.\u003cspan style=\"color:#a6e22e\"\u003egetAuthenticatedAppRoutes\u003c/span\u003e()) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            routesBuilder.\u003cspan style=\"color:#a6e22e\"\u003eroute\u003c/span\u003e(appRoute.\u003cspan style=\"color:#a6e22e\"\u003egetName\u003c/span\u003e(), r \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e r.\u003cspan style=\"color:#a6e22e\"\u003epath\u003c/span\u003e(appRoute.\u003cspan style=\"color:#a6e22e\"\u003egetPath\u003c/span\u003e())\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    .\u003cspan style=\"color:#a6e22e\"\u003euri\u003c/span\u003e(appRoute.\u003cspan style=\"color:#a6e22e\"\u003egetUri\u003c/span\u003e()));\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e routesBuilder.\u003cspan style=\"color:#a6e22e\"\u003ebuild\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eCreate the security config\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003epackage\u003c/span\u003e com.mk.gateway.configs;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e com.mk.gateway.domains.AppRoute;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e lombok.extern.java.Log;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e org.springframework.beans.factory.annotation.Autowired;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e org.springframework.context.annotation.Bean;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e org.springframework.context.annotation.Configuration;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e org.springframework.core.Ordered;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e org.springframework.core.annotation.Order;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e org.springframework.security.config.web.server.ServerHttpSecurity;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e org.springframework.security.web.server.SecurityWebFilterChain;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport static\u003c/span\u003e org.springframework.security.config.Customizer.withDefaults;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@Configuration\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@EnableWebFluxSecurity\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@Log\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eSecurityConfig\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@Autowired\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e RouteConfigProperties routeConfigProperties;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@Order\u003c/span\u003e(Ordered.\u003cspan style=\"color:#a6e22e\"\u003eHIGHEST_PRECEDENCE\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@Bean\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e SecurityWebFilterChain \u003cspan style=\"color:#a6e22e\"\u003eapiHttpSecurity\u003c/span\u003e(ServerHttpSecurity http) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        http.\u003cspan style=\"color:#a6e22e\"\u003ecsrf\u003c/span\u003e(ServerHttpSecurity.\u003cspan style=\"color:#a6e22e\"\u003eCsrfSpec\u003c/span\u003e::disable)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                .\u003cspan style=\"color:#a6e22e\"\u003eauthorizeExchange\u003c/span\u003e(exchanges \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e (AppRoute appRoute : routeConfigProperties.\u003cspan style=\"color:#a6e22e\"\u003egetPublicAppRoutes\u003c/span\u003e()) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                        exchanges.\u003cspan style=\"color:#a6e22e\"\u003epathMatchers\u003c/span\u003e(appRoute.\u003cspan style=\"color:#a6e22e\"\u003egetPath\u003c/span\u003e()).\u003cspan style=\"color:#a6e22e\"\u003epermitAll\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    \u003cspan style=\"color:#66d9ef\"\u003efor\u003c/span\u003e (AppRoute appRoute : routeConfigProperties.\u003cspan style=\"color:#a6e22e\"\u003egetAuthenticatedAppRoutes\u003c/span\u003e()) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                        exchanges.\u003cspan style=\"color:#a6e22e\"\u003epathMatchers\u003c/span\u003e(appRoute.\u003cspan style=\"color:#a6e22e\"\u003egetPath\u003c/span\u003e()).\u003cspan style=\"color:#a6e22e\"\u003eauthenticated\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                    exchanges.\u003cspan style=\"color:#a6e22e\"\u003eanyExchange\u003c/span\u003e().\u003cspan style=\"color:#a6e22e\"\u003edenyAll\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                })\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                .\u003cspan style=\"color:#a6e22e\"\u003eoauth2ResourceServer\u003c/span\u003e(oauth2 \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e oauth2.\u003cspan style=\"color:#a6e22e\"\u003ejwt\u003c/span\u003e(withDefaults()));\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e http.\u003cspan style=\"color:#a6e22e\"\u003ebuild\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eStart all the services.\u003c/p\u003e\n\u003cp\u003eHit the public API via gateway.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-curl\" data-lang=\"curl\"\u003ecurl --location \u0026#39;http://localhost:8080/calculator/fd/interest/p\u0026#39; \\\n--header \u0026#39;Content-Type: application/json\u0026#39; \\\n--data \u0026#39;{\n    \u0026#34;schemeCode\u0026#34;: \u0026#34;SCHEME_A\u0026#34;,\n    \u0026#34;amount\u0026#34; : 20,\n    \u0026#34;duration\u0026#34; : 12\n}\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eHit the protected API via gateway\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-curl\" data-lang=\"curl\"\u003ecurl --location \u0026#39;http://localhost:8080/calculator/fd/interest\u0026#39; \\\n--header \u0026#39;Content-Type: application/json\u0026#39; \\\n--data \u0026#39;{\n    \u0026#34;schemeCode\u0026#34;: \u0026#34;SCHEME_A\u0026#34;,\n    \u0026#34;amount\u0026#34; : 20,\n    \u0026#34;duration\u0026#34; : 12\n}\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou ger unauthenticated exception. Generate the auth token :\nGet an authentication token from Keycloak\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-curl\" data-lang=\"curl\"\u003e\ncurl --location \u0026#39;http://localhost:8082/realms/customers/protocol/openid-connect/token\u0026#39; \\\n--header \u0026#39;Content-Type: application/x-www-form-urlencoded\u0026#39; \\\n--data-urlencode \u0026#39;client_id=gateway-client\u0026#39; \\\n--data-urlencode \u0026#39;username=m.m.kanwar@gmail.com\u0026#39; \\\n--data-urlencode \u0026#39;password=password\u0026#39; \\\n--data-urlencode \u0026#39;grant_type=password\u0026#39; \\\n--data-urlencode \u0026#39;client_secret=HPSzCoP0Q96xqm77vEhaigkMhmn4vZ1B\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThen hit the API with generated token :\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-curl\" data-lang=\"curl\"\u003e\ncurl --location \u0026#39;http://localhost:8080/calculator/fd/interest\u0026#39; \\\n--header \u0026#39;Content-Type: application/json\u0026#39; \\\n--header \u0026#39;Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ1eUxDU2tTMmxKNVZFbGZYWV9QYmpUVm5FOXZQMkJPdXNXODhTTGVKai00In0.eyJleHAiOjE3MjE4MTUyODEsImlhdCI6MTcyMTgxNDk4MSwianRpIjoiOTkyZjY4MjItYTkyOS00ZTI5LThjM2YtMmQ1YTQxNWJkMDc0IiwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo4MDgyL3JlYWxtcy9jdXN0b21lcnMiLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiNzI5ZDYyYmQtMTk2NC00YzY3LWFmZTQtNTAxMTBmMmI2NTEzIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiZ2F0ZXdheS1jbGllbnQiLCJzaWQiOiJjNTkwZThhYS1iMmU1LTQwMjUtOGJiMC0wOTgxMzY2OGE4YjkiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbIi8qIl0sInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJkZWZhdWx0LXJvbGVzLWN1c3RvbWVycyIsIm9mZmxpbmVfYWNjZXNzIiwidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6ImVtYWlsIHByb2ZpbGUiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwibmFtZSI6Ik1vaGl0IEthbndhciIsInByZWZlcnJlZF91c2VybmFtZSI6Im0ubS5rYW53YXJAZ21haWwuY29tIiwiZ2l2ZW5fbmFtZSI6Ik1vaGl0IiwiZmFtaWx5X25hbWUiOiJLYW53YXIiLCJlbWFpbCI6Im0ubS5rYW53YXJAZ21haWwuY29tIn0.g7bicpI5LS3OryxgvBpcNkt3OWH-KpwWDaJo8C3f1vS6qXlA5sfEHNPSSaD8O33qgSenOK4i1LaeQsFKooBskXWo4GbyfWg4YXX5m4FlgJmJ5mFCX0TLdnTRV7RpeJ3bRHK43g64sQMmfRfqx8wxmFEBN0sez0vww4h7CobJs9ig3svsc0APItpTk4Aq1CP6LY-zyYslSw_Zs2HbTIKSeQlTVoMVAnUc7rYANRgyPapSdVEhYKVo4IXExHpxpN8jAaDUWApHKUX91Rjt8JNY-5FjO7lGIvw8Utd4dzhH5ekobefO8P4xMC8mbxQqcRee0ZYJpKu2_S7Kwn7eqTf5Yg\u0026#39; \\\n--data \u0026#39;{\n    \u0026#34;schemeCode\u0026#34;: \u0026#34;SCHEME_A\u0026#34;,\n    \u0026#34;amount\u0026#34; : 20,\n    \u0026#34;duration\u0026#34; : 12\n}\u0026#39;\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAuthentication should be successful.\u003c/p\u003e\n","description":"","image":"/images/blogs/2024/jul/authenticating-services-in-a-microservices-environment/banner.png","permalink":"http://localhost:1313/blogs/2024/jul/authenticating-services-in-a-microservices-environment/","title":"Authenticating Services in a Microservices Environment"},{"content":"\u003cp\u003eWhile using any corporate application that is secured by Two Factor Authentication (TFA), we get an option to scan a QR code via an authenticator app. And then after, the number generated by the authenticator app works in login with the given service. Interesting thing is that it doesn\u0026rsquo;t even need internet or any active connection between the authenticator and the server for the authentication to take place.\nHave you ever wondered how the two factor authenticators e.g. Google Authenticator or Microsoft Authenticator work?\u003c/p\u003e\n\u003cp\u003eThis magic is possible because of Internet Engineering Task Force (IETF)\u0026rsquo;s RFC 6238.\u003c/p\u003e\n\u003cp\u003eRFC 6238 defines the Time-based One-Time Password (TOTP) algorithm, which is widely used for two-factor authentication (2FA). TOTP is an extension of the HMAC-based One-Time Password (HOTP) algorithm, which is defined in RFC 4226. TOTP adds a time component to the OTP generation process, ensuring that the generated passwords are valid only for a short period.\u003c/p\u003e\n\u003ch2 id=\"key-concepts-of-rfc-6238\"\u003eKey Concepts of RFC 6238:\u003c/h2\u003e\n\u003ch3 id=\"time-based-otp-totp\"\u003eTime-based OTP (TOTP)\u003c/h3\u003e\n\u003cp\u003eTOTP generates a one-time password that is valid for a specific time period. This time period is typically 30 seconds but can be configured.\u003c/p\u003e\n\u003ch3 id=\"components\"\u003eComponents\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003eShared Secret\u003c/strong\u003e: A secret key shared between the client (e.g., Google Authenticator app) and the server.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eCurrent Time\u003c/strong\u003e: The current Unix time (number of seconds since January 1, 1970) is used in the OTP generation process.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTime Step\u003c/strong\u003e: The time period for which the OTP is valid, usually 30 seconds.\u003c/p\u003e\n\u003ch3 id=\"algorithm\"\u003eAlgorithm\u003c/h3\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003etimeline\n    title Steps related to RFC 6238\n    1. Registration    : 1.1 Generates a secret key\n                    : 1.2 Secret Key is shared securely to client\n                    : 1.3 Time synchronization\n    3. Authentication  : 2.1 Calculate the current timestamp\n                    : 2.2 Generate Hmac from key \u0026amp; timestamp\n                    : 2.3 Create OTP from Hmac\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eRFC 6238 outlines the process for generating a time-based one-time password (TOTP) for secure authentication. This process is divided into two main phases: Registration and Authentication. Here’s a detailed explanation of each step involved:\u003c/p\u003e\n\u003ch4 id=\"registration-phase\"\u003eRegistration Phase\u003c/h4\u003e\n\u003ch5 id=\"generate-a-secret-key\"\u003eGenerate a Secret Key:\u003c/h5\u003e\n\u003cp\u003eThe server generates a unique secret key for each user. This key is crucial as it will be used to generate the time-based one-time passwords (TOTPs).\u003c/p\u003e\n\u003ch5 id=\"share-the-secret-key-securely-with-the-client\"\u003eShare the Secret Key Securely with the Client:\u003c/h5\u003e\n\u003cp\u003eThe generated secret key is shared with the client in a secure manner. This can be done through various secure channels such as QR codes, encrypted emails, or secure in-app communication. Ensuring the secrecy of this key is paramount to the security of the TOTP system. The security key, if not used within a short span of time, is expired.\u003c/p\u003e\n\u003ch5 id=\"time-synchronization\"\u003eTime Synchronization:\u003c/h5\u003e\n\u003cp\u003eTime synchronization between the server and the client is established. Both the server and the client need to have synchronized clocks to ensure that the time-based calculations are accurate. This can be achieved by asking an OTP from the client, and validating the timestep at the server side. If the system is able to authenticate, then the client and server are assumed to be in synch, otherwise not.\u003c/p\u003e\n\u003ch4 id=\"authentication-phase\"\u003eAuthentication Phase\u003c/h4\u003e\n\u003ch5 id=\"calculate-the-current-timestamp\"\u003eCalculate the Current Timestamp:\u003c/h5\u003e\n\u003cp\u003eDuring authentication, the current timestamp is calculated. This timestamp is usually represented in seconds since a fixed epoch (e.g., Unix epoch starting from January 1, 1970).\u003c/p\u003e\n\u003ch5 id=\"generate-hmac-from-key-and-timestamp\"\u003eGenerate HMAC from Key and Timestamp:\u003c/h5\u003e\n\u003cp\u003eThe secret key and the calculated timestamp are used to generate an HMAC (Hash-based Message Authentication Code). The HMAC is a cryptographic hash function that combines the secret key and the timestamp to produce a unique hash value.\u003c/p\u003e\n\u003ch5 id=\"create-otp-from-hmac\"\u003eCreate OTP from HMAC:\u003c/h5\u003e\n\u003cp\u003eThe HMAC is then truncated and converted into a numeric code, which forms the TOTP. This code is typically a 6 to 8 digit number that changes every 30 seconds (or another predefined time interval).\nThe generated TOTP is then used for secure login or transaction verification. Since the TOTP is time-based and changes frequently, it provides an additional layer of security by ensuring that even if a code is intercepted, it becomes invalid after a short period.\u003c/p\u003e\n\u003ch3 id=\"example-code\"\u003eExample Code:\u003c/h3\u003e\n\u003cp\u003eHere is an example of the TOTP algorithm based on RFC 6238:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e javax.crypto.Mac;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e javax.crypto.spec.SecretKeySpec;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e java.nio.ByteBuffer;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e java.nio.charset.StandardCharsets;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eimport\u003c/span\u003e java.util.Base64;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eTOTPGenerator\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estatic\u003c/span\u003e String \u003cspan style=\"color:#a6e22e\"\u003egenerateTOTP\u003c/span\u003e(String secret, \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e timeStepInSeconds) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003etry\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#75715e\"\u003e// Decode the base32 secret\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003ebyte\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e key \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e Base64.\u003cspan style=\"color:#a6e22e\"\u003egetDecoder\u003c/span\u003e().\u003cspan style=\"color:#a6e22e\"\u003edecode\u003c/span\u003e(secret);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#75715e\"\u003e// Get the current Unix time\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003elong\u003c/span\u003e currentTime \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e System.\u003cspan style=\"color:#a6e22e\"\u003ecurrentTimeMillis\u003c/span\u003e() \u003cspan style=\"color:#f92672\"\u003e/\u003c/span\u003e 1000L;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003elong\u003c/span\u003e timeStep \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e currentTime \u003cspan style=\"color:#f92672\"\u003e/\u003c/span\u003e timeStepInSeconds;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#75715e\"\u003e// Convert time step to byte array\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            ByteBuffer buffer \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e ByteBuffer.\u003cspan style=\"color:#a6e22e\"\u003eallocate\u003c/span\u003e(8);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            buffer.\u003cspan style=\"color:#a6e22e\"\u003eputLong\u003c/span\u003e(timeStep);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003ebyte\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e timeStepBytes \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e buffer.\u003cspan style=\"color:#a6e22e\"\u003earray\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#75715e\"\u003e// Generate HMAC-SHA1 hash\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            Mac mac \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e Mac.\u003cspan style=\"color:#a6e22e\"\u003egetInstance\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;HmacSHA1\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            SecretKeySpec keySpec \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e SecretKeySpec(key, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;HmacSHA1\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            mac.\u003cspan style=\"color:#a6e22e\"\u003einit\u003c/span\u003e(keySpec);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003ebyte\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e hmacHash \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e mac.\u003cspan style=\"color:#a6e22e\"\u003edoFinal\u003c/span\u003e(timeStepBytes);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#75715e\"\u003e// Truncate the hash to get a 6-digit OTP\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e offset \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e hmacHash\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003ehmacHash.\u003cspan style=\"color:#a6e22e\"\u003elength\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e 1\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e 0x0F;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e truncatedHash \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e ((hmacHash\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eoffset\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e 0x7F) \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e 24) \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                                ((hmacHash\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eoffset \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e 1\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e 0xFF) \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e 16) \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                                ((hmacHash\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eoffset \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e 2\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e 0xFF) \u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u0026lt;\u003c/span\u003e 8) \u003cspan style=\"color:#f92672\"\u003e|\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e                                (hmacHash\u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eoffset \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e 3\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u003c/span\u003e 0xFF);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e otp \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e truncatedHash \u003cspan style=\"color:#f92672\"\u003e%\u003c/span\u003e 1000000;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#75715e\"\u003e// Format OTP as a 6-digit string\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e String.\u003cspan style=\"color:#a6e22e\"\u003eformat\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;%06d\u0026#34;\u003c/span\u003e, otp);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        } \u003cspan style=\"color:#66d9ef\"\u003ecatch\u003c/span\u003e (Exception e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e            \u003cspan style=\"color:#66d9ef\"\u003ethrow\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e RuntimeException(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Error generating TOTP\u0026#34;\u003c/span\u003e, e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003estatic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003evoid\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emain\u003c/span\u003e(String\u003cspan style=\"color:#f92672\"\u003e[]\u003c/span\u003e args) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        String secret \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;JBSWY3DPEHPK3PXP\u0026#34;\u003c/span\u003e; \u003cspan style=\"color:#75715e\"\u003e// Example base32-encoded secret key\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        \u003cspan style=\"color:#66d9ef\"\u003eint\u003c/span\u003e timeStepInSeconds \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e 30; \u003cspan style=\"color:#75715e\"\u003e// Time step in seconds\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        String otp \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e generateTOTP(secret, timeStepInSeconds);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e        System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003eprintln\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Your OTP is: \u0026#34;\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e otp);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"security-considerations\"\u003eSecurity Considerations:\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003eShared Secret Protection\u003c/strong\u003e:\nThe shared secret must be securely stored and transmitted.\u003cbr\u003e\n\u003cstrong\u003eTime Synchronization\u003c/strong\u003e:\nBoth the client and server must have synchronized clocks to ensure the OTPs match.\u003cbr\u003e\n\u003cstrong\u003eShort Validity Period\u003c/strong\u003e:\nThe short validity period of the OTPs (e.g., 30 seconds) limits the window of opportunity for attackers to use a captured OTP.\u003c/p\u003e\n\u003ch2 id=\"the-sequence-diagram\"\u003eThe sequence diagram\u003c/h2\u003e\n\u003cp\u003eBelow is a sequence diagram to understand the process.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003esequenceDiagram\n    participant User\n    participant AuthenticatorApp\n    participant Server\n\n    Note over User, AuthenticatorApp: Initial Setup\n    User-\u0026gt;\u0026gt;AuthenticatorApp: Scan QR Code (Secret Key)\n    Server-\u0026gt;\u0026gt;AuthenticatorApp: Provide Secret Key (via QR Code)\n\n    Note over AuthenticatorApp: OTP Generation Process\n    loop Every 30 seconds\n        AuthenticatorApp-\u0026gt;\u0026gt;AuthenticatorApp: Get Current Unix Time\n        AuthenticatorApp-\u0026gt;\u0026gt;AuthenticatorApp: Calculate Time Step (T = (Current Time - T0) / X)\n        AuthenticatorApp-\u0026gt;\u0026gt;AuthenticatorApp: Generate HMAC-SHA1 Hash (HMAC-SHA1(SecretKey, T))\n        AuthenticatorApp-\u0026gt;\u0026gt;AuthenticatorApp: Truncate Hash to 6-digit OTP\n    end\n\n    Note over User, AuthenticatorApp: Authentication\n    User-\u0026gt;\u0026gt;AuthenticatorApp: Request OTP\n    AuthenticatorApp-\u0026gt;\u0026gt;User: Provide OTP\n    User-\u0026gt;\u0026gt;Server: Submit OTP\n\n    Note over Server: Verification Process\n    Server-\u0026gt;\u0026gt;Server: Get Current Unix Time\n    Server-\u0026gt;\u0026gt;Server: Calculate Time Step (T = (Current Time - T0) / X)\n    Server-\u0026gt;\u0026gt;Server: Generate HMAC-SHA1 Hash (HMAC-SHA1(SecretKey, T))\n    Server-\u0026gt;\u0026gt;Server: Truncate Hash to 6-digit OTP\n    Server-\u0026gt;\u0026gt;Server: Compare Generated OTP with Submitted OTP\n\n    alt OTP Matches\n        Server-\u0026gt;\u0026gt;User: Authentication Successful\n    else OTP Does Not Match\n        Server-\u0026gt;\u0026gt;User: Authentication Failed\n    end\n\u003c/code\u003e\u003c/pre\u003e","description":"Discover how Google Authenticator and Microsoft Authenticator generate secure OTPs without an internet connection using the TOTP algorithm defined in RFC 6238. Learn about key concepts, the registration and authentication process, and see example code and diagrams.","image":"/images/blogs/2024/jul/time-based-otp/banner.png","permalink":"http://localhost:1313/blogs/2024/jul/time-based-otp/","title":"Time Based Otp"},{"content":"\u003cp\u003eA lot of my friends come to me and ask about the skills required to grow in the software engineering field. The primary intention behind their questions is usually to understand which latest technologies they need to learn. Should they focus on improving their Python or Java skills? Should they focus on Frontend, Backend or DevOps?\u003c/p\u003e\n\u003cp\u003eWhile learning specific technologies or languages is certainly important, I believe that it constitutes only a small portion of what it takes to become a good software engineer.\u003c/p\u003e\n\u003cp\u003eTo improve as a software engineer, one needs to focus on their problem-solving skills. Identify an existing problem that you see in the industry and create a solution for it. Then, try to market your solution.\u003c/p\u003e\n\u003cp\u003eWhy do I suggest this approach? Because it provides an enhanced view of some of the things that simply learning a language will not help with. By taking this route, you will gain a comprehensive skill set that includes:\u003c/p\u003e\n\u003ch1 id=\"the-soft-skills\"\u003eThe Soft Skills\u003c/h1\u003e\n\u003ch2 id=\"communication\"\u003eCommunication\u003c/h2\u003e\n\u003cp\u003eBy solving a given problem, an engineer needs to enhance their communication skills, as they may need to interact with various stakeholders to understand the existing issues and potential solutions. This requires improving intake skills, such as active listening and effective reading, to gather and comprehend relevant information accurately.\u003c/p\u003e\n\u003cp\u003eOnce the solution is ready, the developer must demonstrate its effectiveness. This necessitates strong presentation skills, including oratory, writing, and other related abilities, to clearly and persuasively convey the solution\u0026rsquo;s value and functionality to others.\u003c/p\u003e\n\u003ch2 id=\"collaboration\"\u003eCollaboration\u003c/h2\u003e\n\u003cp\u003eAn engineer needs to collaborate with other engineers, clients, or stakeholders, often across different geographical regions and time zones. Effective collaboration requires the use of appropriate tools for idea sharing, decision recording, and project management. Enhancing skills in using these collaboration tools is essential. For instance, video conferencing software, project management platforms, real-time communication apps, and document collaboration tools play a significant role in facilitating smooth interactions and workflow.\u003c/p\u003e\n\u003cp\u003eDeveloping proficiency in these tools, along with the ability to work asynchronously and maintain clear, concise communication, can greatly improve the efficiency and success of collaborative efforts.\u003c/p\u003e\n\u003ch2 id=\"attention-to-detail\"\u003eAttention to Detail\u003c/h2\u003e\n\u003cp\u003eAttention to detail is vital in software engineering. Small errors can lead to significant issues, impacting functionality, performance, and user experience. Being meticulous in coding, testing, and documentation can prevent these problems, ultimately saving a lot of time and effort in the long run.\u003c/p\u003e\n\u003cp\u003eAn anecdote to illustrate this involves a time when I was referring to API documentation for developing one of our use cases. The documentation specified passing a variable (name changed) anExampleVariableName to a specific value. After trying multiple times and not getting the expected results, I raised the issue with the API provider. Due to team changes and the support person being new, it took several iterations before we realized that the API had two variables with seemingly similar names, differing only in the case of one character, e.g., anExampleVariablename.\u003c/p\u003e\n\u003cp\u003eBoth variables were in use under different use cases. This seemingly small issue of a variable name caused a sprint delay for the desired feature, necessitating a refactor of the code. This experience reinforced the importance of meticulous attention to detail in every aspect of software development.\u003c/p\u003e\n\u003ch2 id=\"planning-and-time-management\"\u003ePlanning and Time Management\u003c/h2\u003e\n\u003cp\u003eStarting a new work is exciting, but completing it is tough. It takes discipline and hard work to finalize what we started. Hence, a good amount of planning and time management is required. As engineers, we need to hone these skills as well.\u003c/p\u003e\n\u003cp\u003eHow many times have you started a new project, super excited on the day that brilliant idea struck your head? But once you start facing the bottlenecks, and some other \u0026ldquo;High Priority\u0026rdquo; tasks step in, the project that you started with so much passion takes a back seat. Isn\u0026rsquo;t this true?\u003c/p\u003e\n\u003cp\u003eTo overcome the \u0026ldquo;Too many starts and None Completed\u0026rdquo; scenarios, we need to be disciplined and manage our time. This planning helps us reach our target goals.\u003c/p\u003e\n\u003ch1 id=\"the-knowledge-skills\"\u003eThe Knowledge Skills\u003c/h1\u003e\n\u003ch2 id=\"continuous-learning\"\u003eContinuous Learning\u003c/h2\u003e\n\u003cp\u003eMy suggestion is to have a breadth of knowledge in different skills. Learn many languages and cross-apply the learnings. These learnings do not necessarily have to be linked to technology. For instance, we get so many beautiful fonts today because Apple founder Steve Jobs learned calligraphy.\u003c/p\u003e\n\u003cp\u003eThe Story of Steve Jobs and Calligraphy\nIn 1972, Steve Jobs enrolled at Reed College in Portland, Oregon. Although he dropped out after six months, he stayed around the campus for another 18 months, attending classes that interested him. One of these classes was a calligraphy course. Jobs was fascinated by the beauty of the characters and the art of typography. He learned about different typefaces, varying spaces between different letter combinations, and what makes great typography great.\u003c/p\u003e\n\u003cp\u003eYears later, when Jobs was designing the first Macintosh computer, he applied what he had learned in that calligraphy class. This led to the Mac being the first computer with beautiful typography and multiple fonts. As Jobs famously said in his 2005 Stanford Commencement Address:\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026ldquo;If I had never dropped in on that single course in college, the Mac would have never had multiple typefaces or proportionally spaced fonts. And since Windows just copied the Mac, it’s likely that no personal computer would have them.\u0026rdquo;\u003c/p\u003e\n\u003cp\u003e\u0026ndash;  \u003ccite\u003eSteve Jobs\u003ccite\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eThis story highlights the importance of continuous learning and exploring diverse fields. The knowledge and skills you gain from different areas can cross-pollinate and lead to innovative solutions and ideas in your primary field of work.\u003c/p\u003e\n\u003ch2 id=\"contributing-back-to-society\"\u003eContributing Back to Society\u003c/h2\u003e\n\u003cp\u003eWe are dependent upon the work done by older generations. We use operating systems developed by someone else, we use IDEs created by someone else, and we even use languages developed by someone else. Hence, it is our responsibility to start contributing back to society. We can contribute to open-source software, write blogs, create tutorials, or use other mechanisms to help the next generation. By doing so, we gain our own knowledge and skills as well.\u003c/p\u003e\n\u003ch4 id=\"the-importance-of-giving-back\"\u003eThe Importance of Giving Back\u003c/h4\u003e\n\u003cp\u003eContributing back to the community not only helps others but also enhances our own learning and growth. Here are some ways to contribute:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eOpen Source Contributions:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eCode Contributions:\u003c/strong\u003e Contribute to existing open-source projects by fixing bugs, adding features, or improving documentation.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eStarting New Projects:\u003c/strong\u003e If you have a unique idea, start your own open-source project and invite others to collaborate.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eWriting Blogs:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eSharing Knowledge:\u003c/strong\u003e Write about your experiences, challenges, and solutions. This can help others facing similar issues.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTechnical Tutorials:\u003c/strong\u003e Create step-by-step guides on various topics to help beginners and professionals alike.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eCreating Tutorials:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eVideo Tutorials:\u003c/strong\u003e Create video content on platforms like YouTube to explain complex topics in an easy-to-understand manner.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eInteractive Courses:\u003c/strong\u003e Develop courses on platforms like Coursera, Udemy, or LinkedIn Learning.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003cstrong\u003eMentorship:\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eOne-on-One Mentoring:\u003c/strong\u003e Offer to mentor junior developers or students. This can be done through formal programs or informal arrangements.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCommunity Involvement:\u003c/strong\u003e Participate in community events, hackathons, and meetups to share your knowledge and learn from others.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"the-benefits-of-contributing\"\u003eThe Benefits of Contributing\u003c/h4\u003e\n\u003cp\u003eTeaching others forces you to understand topics deeply. Working on diverse projects exposes you to new technologies and methodologies. Engaging with the community helps you build a network of like-minded professionals. Contributions can lead to job offers, collaborations, and other professional opportunities.\u003c/p\u003e\n\u003cp\u003eHelping others and seeing them succeed provides a sense of fulfillment and purpose. Contributing to the community ensures that your work benefits future generations.\u003c/p\u003e\n\u003ch1 id=\"business-skills\"\u003eBusiness Skills\u003c/h1\u003e\n\u003ch3 id=\"identifying-a-problem\"\u003eIdentifying a Problem\u003c/h3\u003e\n\u003cp\u003eIdentifying a real-world problem that needs solving is a crucial business skill. This involves understanding market needs, analyzing existing solutions, and recognizing gaps that your solution can fill. Mapping that with your skills and thinking of a solution. This manner sounds easy, but it requires a lot of hard work and improves your analytical and thinking capabilities.\u003c/p\u003e\n\u003ch4 id=\"steps-to-identify-a-problem\"\u003eSteps to Identify a Problem\u003c/h4\u003e\n\u003cp\u003eUnderstanding market needs is the first step, which involves conducting thorough market research through surveys, interviews, and focus groups to gather information about the needs and pain points of your target audience. Keeping an eye on industry trends, emerging technologies, and consumer behavior helps in identifying potential opportunities. Next, analyzing existing solutions is essential; this includes studying competitors to understand their strengths and weaknesses and analyzing customer feedback to pinpoint common complaints and areas for improvement. Recognizing gaps involves comparing the market needs with existing solutions to identify where your solution can provide a unique value proposition. Mapping your skills and thinking of a solution requires evaluating your capabilities and resources to determine if you can develop the solution, brainstorming ideas, and narrowing them down based on feasibility and impact. Prototyping or developing a minimum viable product (MVP) to test your solution and gather feedback is a critical step in this process.\u003c/p\u003e\n\u003ch4 id=\"the-benefits-of-identifying-and-solving-problems\"\u003eThe Benefits of Identifying and Solving Problems\u003c/h4\u003e\n\u003cp\u003eThe benefits of identifying and solving problems are manifold. Firstly, it improves your analytical skills by enhancing your critical thinking and problem-solving abilities, and it enables you to make data-driven decisions based on thorough market research and analysis. Secondly, it opens up business opportunities by fostering innovation and providing a competitive advantage through unique solutions that address unmet needs. Lastly, it contributes to personal growth by developing a wide range of skills, from research and analysis to creativity and project management, and provides a sense of achievement and confidence from successfully solving real-world problems.\u003c/p\u003e\n\u003cp\u003eBy identifying real-world problems and developing effective solutions, you not only create value for the market but also enhance your own skills and capabilities.\u003c/p\u003e\n\u003ch2 id=\"marketing-the-solution\"\u003eMarketing the Solution\u003c/h2\u003e\n\u003cp\u003eOnce you have a solution, marketing it effectively is essential. This involves understanding your target audience, creating a compelling value proposition, and using various marketing channels to reach potential users. Understanding your target audience requires segmenting the market based on demographics, behavior, and preferences, and tailoring your messaging to resonate with them.\nCreating a compelling value proposition involves clearly articulating the benefits of your solution and how it addresses the specific needs and pain points of your audience. Utilizing various marketing channels, such as social media, email marketing, content marketing, and paid advertising, ensures that you reach a broad audience and engage them effectively. Consistent branding and messaging across all channels reinforce your value proposition and build trust with your audience. Monitoring and analyzing the performance of your marketing efforts allows you to refine your strategies and maximize your reach and impact.\u003c/p\u003e\n\u003cp\u003eEffective marketing not only drives awareness and adoption of your solution but also builds a loyal customer base and establishes your brand in the market.\u003c/p\u003e\n\u003cp\u003eBalancing the development of technical and soft skills is essential for career growth and effectiveness. One effective approach is to dedicate specific time slots for each. For instance, you can spend mornings coding to enhance your technical skills, and afternoons attending workshops or reading books on communication and teamwork to develop your soft skills. Participating in projects that require both technical and soft skills is another excellent strategy. Leading a team on a technical project can help you practice leadership and communication while honing your technical expertise. Additionally, regularly seeking feedback from peers and mentors on both your technical and soft skills is crucial. Reflecting on this feedback and creating a plan for improvement ensures continuous growth and development.\u003c/p\u003e\n\u003cp\u003eBy integrating these practices into your routine, you can achieve a well-rounded skill set that enhances both your technical prowess and your ability to work effectively with others.\u003c/p\u003e\n","description":"This blog explains that there are other areas of skill improvements that a software engineer requires apart from being an expert in coding.","image":"/images/blogs/2024/jul/software-engineering-skills/banner.png","permalink":"http://localhost:1313/blogs/2024/jul/software-engineering-skills/","title":"Software Engineering Skills"},{"content":"\u003ch1 id=\"apis-like-diamonds-are-forever\"\u003eAPIs, like diamonds are forever.\u003c/h1\u003e\n\u003cp\u003eAPIs are expensive to build and maintain, and once developed they have little resale value.\u003c/p\u003e\n\u003cp\u003eAs an architect, we have to give full attention to the APIs being developed. In one of the assignment, I observed four to five versions of the same API all running parallally, because there is no single version that caters to all the requirements.\u003c/p\u003e\n\u003cp\u003eThe existing spagatti code doesn\u0026rsquo;t allow it to be fixed within the given time frame, and the default accepted way of working has become to add a new version of the API whenever a slight change is required in the API.\u003c/p\u003e\n\u003cp\u003eThis has resulted in increased complexity in adding new features or debugging a given problem.\u003c/p\u003e\n\u003cp\u003eThe problem is visible across layers. multiple versions of db tables create confusion in which data is populated where.\nHalf of the data is present in one table, the other half in another table.\u003c/p\u003e\n\u003cp\u003eOn the cost of speeding up now, we are eating up time from future.\u003c/p\u003e\n","description":"","image":"/images/blogs/2024/may/apis-are-forever/banner.png","permalink":"http://localhost:1313/blogs/2024/may/apis-are-forever/","title":"Apis Are Forever"},{"content":"\u003ch1 id=\"transformer-model\"\u003eTransformer Model\u003c/h1\u003e\n\u003cp\u003eHave you ever gotten frustrated with chatbots that just don\u0026rsquo;t seem to understand the full flow of conversation? Or maybe you\u0026rsquo;ve noticed machine translations that miss the mark completely. Well, there\u0026rsquo;s a reason for that –  until recently, computers had a tough time understanding the deeper connections between words in a sentence. But a game-changer called the Transformer model is here!\u003c/p\u003e\n\u003cp\u003eThe Transformer model is a deep learning architecture introduced in the paper \u003ca href=\"https://arxiv.org/pdf/1706.03762\"\u003e\u0026ldquo;Attention is All You Need\u0026rdquo;\u003c/a\u003e. It revolutionized the field of natural language processing (NLP) by introducing a novel mechanism based on attention rather than recurrent or convolutional layers.\u003c/p\u003e\n\u003cp\u003eAttention mechanism allows the model to focus on important words and generate contextual meaning from them.\u003c/p\u003e\n\u003ch1 id=\"text-generation-before-transformer\"\u003eText generation before transformer\u003c/h1\u003e\n\u003cp\u003eIn the early days of text generation, computers relied on a technique called Recurrent Neural Networks (RNNs) to churn out sentences word by word. Imagine a student answering a series of questions, only able to consider the answer they just provided. RNNs worked similarly, predicting the next word based on the few words that came before it. This approach worked well for short sentences, like composing basic greetings or short commands. However, as sentences grew longer and more complex, RNNs started to stumble.\u003c/p\u003e\n\u003cp\u003eThe problem arose because RNNs relied heavily on a concept called \u0026ldquo;memory.\u0026rdquo; They needed to remember the context of earlier words in the sequence to predict the upcoming ones effectively. But with limited computational power at the time, this memory became unreliable. The context of earlier words would either fade away entirely (vanishing gradients) or become disproportionately magnified (exploding gradients), making it difficult for the RNN to accurately predict the next word and capture the overall meaning of the sentence.  Furthermore, RNNs inherently struggled to grasp long-range dependencies between words spread far apart in a sentence. This meant they could miss subtle connections and nuances that are crucial for understanding the true intent of the text. As a result, RNN-based text generation often produced grammatically correct but nonsensical outputs, lacking the flow and coherence of natural language.\u003c/p\u003e\n\u003ch1 id=\"transformer-architecture\"\u003eTransformer Architecture\u003c/h1\u003e\n\u003cp\u003eThe below architecture diagram is picked from the mentioned paper above.\u003c/p\u003e\n\u003cimg src=\"/images/blogs/2024/may/components-in-llm-architecture/architecture.webp\" \u003e\n\u003cp\u003eThe architecture consists of the following components :\u003c/p\u003e\n\u003ch2 id=\"tokenizer--chopping-up-the-text-for-the-llm\"\u003eTokenizer : Chopping up the text for the LLM\u003c/h2\u003e\n\u003cp\u003eImagine you\u0026rsquo;re giving instructions to a machine that only understands basic building blocks. To make things clear, you wouldn\u0026rsquo;t just dump the entire instruction at once, right? You\u0026rsquo;d break it down into smaller, easier-to-understand pieces. That\u0026rsquo;s exactly what a tokenizer does for a Large Language Model (LLM).\u003c/p\u003e\n\u003cp\u003eA tokenizer acts like a special tool that takes a sentence and chops it up into smaller units called tokens. These tokens can be words, punctuation marks, or even smaller pieces like letters (depending on the specific LLM and task).  Just like you wouldn\u0026rsquo;t ask your machine to understand a whole sentence at once, the LLM can\u0026rsquo;t process a giant block of text either. Tokens make the information manageable for the LLM, allowing it to work more efficiently.\u003c/p\u003e\n\u003cp\u003eHere\u0026rsquo;s a deeper dive into how tokenizers function:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVocabulary\u003c/strong\u003e: LLMs have a defined vocabulary, like a shortlist of words they understand. The tokenizer checks each piece of text against this vocabulary and breaks it down into the corresponding tokens.\n\u003cstrong\u003eGoing Beyond Words\u003c/strong\u003e: Sometimes, tokenizers don\u0026rsquo;t just split text into words. For some tasks, they might separate punctuation marks or even break words down into characters. This depends on the specific needs of the LLM and the situation.\n\u003cstrong\u003eAdding Special Tokens\u003c/strong\u003e: Think of special tokens like helper words for the LLM. The tokenizer might add these tokens to the beginning or end of a sentence to signal the start or finish, or to indicate special cases like unknown words.\nBy breaking down text into tokens, the tokenizer plays a crucial role in preparing information for the LLM. It ensures the LLM gets bite-sized pieces it can understand and work with, paving the way for accurate and efficient language processing.\u003c/p\u003e\n\u003ch2 id=\"embeddings--turning-tokens-into-meaningful-codes\"\u003eEmbeddings : Turning Tokens into Meaningful Codes\u003c/h2\u003e\n\u003cp\u003eImagine you have a giant dictionary where every word has a unique code assigned to it. But this code isn\u0026rsquo;t just a random number – it captures the essence of the word, its meaning, and how it relates to other words. That\u0026rsquo;s exactly what embeddings do for tokens in the Transformer model.\u003c/p\u003e\n\u003cp\u003eEmbeddings are like secret codes, but instead of words, they represent tokens generated by the tokenizer. Each token gets converted into a vector, which is basically a fancy way of saying a list of numbers. The cool part is that these numbers aren\u0026rsquo;t random – they\u0026rsquo;re carefully chosen by the Transformer model during training to reflect the token\u0026rsquo;s meaning and its connection to other tokens.\u003c/p\u003e\n\u003cp\u003eHere\u0026rsquo;s how embeddings capture meaning:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSimilar Tokens, Similar Codes\u003c/strong\u003e: In the embedding space (imagine a giant map where each point represents a token\u0026rsquo;s code), tokens with similar meanings are positioned closer together. For example, \u0026ldquo;king\u0026rdquo; and \u0026ldquo;queen\u0026rdquo; would likely have codes that are close neighbors in this space, while \u0026ldquo;king\u0026rdquo; and \u0026ldquo;key\u0026rdquo; would be much farther apart.\n\u003cstrong\u003eContext is Key (For Advanced Models)\u003c/strong\u003e: In simpler models, embeddings might just represent the general meaning of a token. But advanced models take things a step further. They can generate contextual embeddings, which means the code for a token can shift slightly depending on the surrounding words. For instance, the embedding for \u0026ldquo;play\u0026rdquo; in the sentence \u0026ldquo;Let\u0026rsquo;s play outside\u0026rdquo; might be different from the embedding for \u0026ldquo;play\u0026rdquo; in the sentence \u0026ldquo;Press play on the music.\u0026rdquo;\nBy converting tokens into embeddings, the Transformer model goes beyond just recognizing individual words. It creates a meaningful representation of language, allowing it to understand the relationships between words and generate more natural and coherent text.\u003c/p\u003e\n\u003ch2 id=\"the-encoder-unveiling-the-hidden-connections\"\u003eThe Encoder: Unveiling the Hidden Connections\u003c/h2\u003e\n\u003cp\u003eImagine you\u0026rsquo;re reading a detective story. To understand who committed the crime, you need to analyze all the clues, not just the ones that appear right next to each other. The Transformer\u0026rsquo;s encoder works in a similar way. It takes the token embeddings, those secret codes packed with meaning, and analyzes them all together to uncover the hidden connections and understand the overall context of the text.\u003c/p\u003e\n\u003cp\u003eThe encoder is like a master detective board. It lays out all the embeddings (clues) and uses a special technique called self-attention to see how each piece connects to the others.  Self-attention allows the encoder to focus on relevant parts of the sentence, even if they\u0026rsquo;re far apart.  Here\u0026rsquo;s how it works:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBeyond Neighbors\u003c/strong\u003e: Unlike reading words one by one, the encoder can consider every token\u0026rsquo;s embedding at the same time. This lets it capture long-range dependencies – connections between words that might be separated by many other words in the sentence. For example, the encoder can understand how the subject of a sentence relates to the verb, even if they\u0026rsquo;re far apart.\n\u003cstrong\u003eNot All Clues Are Equal\u003c/strong\u003e: The encoder doesn\u0026rsquo;t just blindly analyze every connection. It assigns a score to each relationship, indicating how important it is for understanding the meaning. This ensures the encoder focuses on the most relevant clues, just like a detective prioritizing the most critical pieces of evidence.\u003c/p\u003e\n\u003cp\u003eEncoders are typically layered, with each layer building on the work of the previous one. The first layer might identify basic connections, and subsequent layers refine these connections and uncover deeper contextual information. By meticulously examining all the embeddings and their relationships, the encoder paints a clear picture of the meaning behind the words, preparing the ground for the next stage – generating a response.\u003c/p\u003e\n\u003ch2 id=\"the-decoder-weaving-a-response-from-the-unraveled-context\"\u003eThe Decoder: Weaving a Response from the Unraveled Context\u003c/h2\u003e\n\u003cp\u003eThe encoder, like a skilled detective, has meticulously analyzed the text and uncovered its hidden meaning. But what if that meaning just sits there, unutilized? That\u0026rsquo;s where the decoder comes in.  Imagine the decoder as a creative writer who takes the detective\u0026rsquo;s findings (the encoder\u0026rsquo;s output) and uses them to craft a response, like a new sentence, translation, or summary.\u003c/p\u003e\n\u003cp\u003eSimilar to the encoder, the decoder is layered. Each layer takes the output from the previous layer, which is a refined understanding of the context, and builds upon it. Here\u0026rsquo;s how the decoder works step-by-step:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eStarting Point\u003c/strong\u003e: The decoder typically begins with a special start token, signaling the beginning of the response it\u0026rsquo;s about to create.\n\u003cstrong\u003eAttention to the Context\u003c/strong\u003e: Just like the encoder, the decoder utilizes attention mechanisms. But instead of focusing on all the token embeddings at once, it pays attention to the encoder\u0026rsquo;s output and the previously generated tokens in the response (if it\u0026rsquo;s a multi-word response). This allows the decoder to consider the overall context and ensure the response aligns with the original meaning.\n\u003cstrong\u003eWord by Word Creation\u003c/strong\u003e: At each step, the decoder predicts the next token in the response. It considers the previously generated tokens, the encoder\u0026rsquo;s output (the context), and its own internal knowledge to pick the most fitting word.\n\u003cstrong\u003eBuilding Up the Response\u003c/strong\u003e: With each prediction, the decoder adds a new token to the response, one by one. This iterative process continues until the decoder predicts an end token, signifying the completion of the response.\u003c/p\u003e\n\u003cp\u003eThe type of decoder used can vary depending on the desired outcome. For tasks like generating full sentences, a different decoder architecture might be used compared to tasks that require summaries. But ultimately, all decoders share the same core function: transforming the encoder\u0026rsquo;s contextual understanding into a meaningful response.  By working together, the encoder and decoder form the heart of the Transformer model, allowing it to understand and respond to language in a way that surpasses traditional methods.\u003c/p\u003e\n\u003ch2 id=\"softmax-picking-the-perfect-word-with-probability\"\u003eSoftMax: Picking the Perfect Word (with Probability!)\u003c/h2\u003e\n\u003cp\u003eImagine you\u0026rsquo;ve narrowed down your choices to the final few words for your response, but you\u0026rsquo;re not quite sure which one lands the perfect punch. That\u0026rsquo;s where SoftMax steps in. It acts like a probability judge, analyzing the remaining candidate tokens (words) and picking the one with the highest chance of being the most fitting choice.\u003c/p\u003e\n\u003cp\u003eSoftMax isn\u0026rsquo;t a simple on/off switch. It considers the probability of each token and assigns a value between 0 and 1.  Think of it like a confidence score – a higher score indicates a greater chance of being the ideal word for the situation. The magic lies in how SoftMax treats these probabilities:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNormalization is Key\u003c/strong\u003e: SoftMax takes all the probabilities and adjusts them proportionally, ensuring they all add up to 1. This \u0026ldquo;normalization\u0026rdquo; prevents any single token from dominating the selection process unfairly.\n\u003cstrong\u003eThe Soft in SoftMax\u003c/strong\u003e: By normalizing the probabilities, SoftMax avoids picking the absolute highest value every time. This \u0026ldquo;softness\u0026rdquo; allows for some flexibility, considering not just the most likely option but also giving some weight to other possibilities with decent probabilities.\nSo, how does SoftMax use these probabilities to pick a word? It performs a weighted random selection based on the assigned probabilities.  Think of it like a lottery where each token has a number of tickets corresponding to its probability score. The higher the score, the more tickets a token has in the basket. SoftMax randomly picks a ticket, and the word on that ticket becomes the chosen token for the response.\u003c/p\u003e\n\u003cp\u003eSoftMax plays a crucial role in ensuring the Transformer model generates the most relevant and fitting words for the situation. It takes the possibilities presented by the decoder and selects the one with the highest chance of success, adding a layer of refinement and making the Transformer\u0026rsquo;s responses more natural and accurate.\u003c/p\u003e\n","description":"Struggling to understand how machines create human-like text? The Transformer model is a game-changer in Natural Language Processing (NLP), but its inner workings can seem complex. This blog post breaks down the Transformer into easy-to-understand concepts, using clear language and avoiding technical jargon.","image":"/images/blogs/2024/may/components-in-llm-architecture/banner.png","permalink":"http://localhost:1313/blogs/2024/may/components-in-llm-architecture/","title":"Components in Llm Architecture"},{"content":"\u003cp\u003eArtificial Intelligence stands out as a powerful and versatile technology that holds the potential to revolutionize various industries. Among these industries, FinTech emerges as a domain where AI can truly shine and deliver impactful results. The intersection of finance and technology presents a fertile ground for AI applications to streamline processes, enhance customer experiences, and drive innovation.\u003c/p\u003e\n\u003cp\u003eIn the FinTech industry, AI is being harnessed to tackle complex challenges and unlock new opportunities. From fraud detection and risk management to personalized financial advice and automated trading, AI is reshaping the way financial services are delivered and consumed. The ability of AI algorithms to analyze vast amounts of data, identify patterns, and make data-driven decisions in real-time is transforming how financial institutions operate and interact with customers.\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s discuss some of them as below\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eVoice Banking\u003c/li\u003e\n\u003cli\u003eBehavioural analysis\n\u003col\u003e\n\u003cli\u003efor fraud detection\u003c/li\u003e\n\u003cli\u003efor customized offerings\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/li\u003e\n\u003cli\u003eContent generation for user assistence\u003c/li\u003e\n\u003cli\u003eTax assistents\u003c/li\u003e\n\u003cli\u003eIdentity verification\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"conversational-banking\"\u003eConversational Banking\u003c/h2\u003e\n\u003cp\u003eThe advent of smart devices has brought banks closer to their customers through the development of conversational devices like Alexa or Siri. These voice-activated assistants enable users to interact with their banks seamlessly, performing various banking tasks with just their voice commands. This evolution has made banking more accessible and convenient, allowing users to engage in financial transactions without the need to navigate through traditional banking interfaces.\u003c/p\u003e\n\u003cpicture\u003e\n   \u003cimg src=\"/images/blogs/2024/apr/artificial-intelligence-applications-in-fintech/conversational-banking.png\" alt=\"Models in artificial intelligence\" class=\"responsive-image\" style=\"max-width: 50%;position: relative;left: 25%;\"\u003e\n\u003c/picture\u003e\n\u003cp\u003eFor instance, a simple voice command such as \u0026ldquo;Pay the overdue credit charges\u0026rdquo; can initiate a payment transaction without the user having to open a banking app or log in manually. The underlying AI technology interprets the user\u0026rsquo;s intent, verifies the user\u0026rsquo;s identity, and executes the transaction securely and efficiently.\u003c/p\u003e\n\u003cp\u003eConversational banking not only enhances convenience for the general population but also provides a significant benefit to differently abled individuals who may face challenges in using traditional banking methods. By enabling voice-activated interactions, banks are ensuring that their services are inclusive and accessible to all customers, regardless of their physical abilities.\u003c/p\u003e\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/PpSHoUfRsaA?si=dXs7sTdQ2OxXyTcF\u0026amp;clip=UgkxvgIKR7f1i8Ra5zO_4uPFfEFJU9MMZG-P\u0026amp;clipt=EMA-GODaAQ\" title=\"YouTube video player\" frameborder=\"2\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen style=\"max-width: 60%;position: relative;left: 25%;\"\u003e\u003c/iframe\u003e\n\u003ch2 id=\"behavioural-analysis\"\u003eBehavioural Analysis\u003c/h2\u003e\n\u003cp\u003eArtificial Intelligence serves as a potent tool for conducting behavioral analysis, leveraging its capability to monitor millions of parameters to discern user behavior patterns. By scrutinizing these behaviors, AI can construct detailed customer profiles that empower banks to differentiate between genuine customers and potential fraudulent activities.\u003c/p\u003e\n\u003cp\u003eIn today\u0026rsquo;s digital landscape, the ability to identify and authenticate customers accurately is paramount. AI-driven behavioral analysis plays a pivotal role in enhancing security measures and fraud detection within the financial sector.\u003c/p\u003e\n\u003cp\u003eMoreover, behavioral analysis offers the advantage of tailoring truely personalized offerings to customers based on their unique preferences and behaviors. By gaining deep insights into customer behavior through AI, banks can craft customized proposals that are more likely to resonate with individual customers, fostering a mutually beneficial relationship between the bank and the customer.\u003c/p\u003e\n\u003cpicture\u003e\n   \u003cimg src=\"/images/blogs/2024/apr/artificial-intelligence-applications-in-fintech/behaviour.png\" alt=\"Models in artificial intelligence\" class=\"responsive-image\" style=\"max-width: 50%;position: relative;left: 25%;\"\u003e\n\u003c/picture\u003e\n\u003cp\u003eOne real-world example of AI-powered behavioral analysis is \u003ccite\u003ePayPal\u0026rsquo;s utilization of AI algorithms\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/cite\u003e to detect fraudulent activities by analyzing user behavior patterns and transaction data. By leveraging AI for behavioral analysis, PayPal has enhanced its fraud detection capabilities and improved the security of its platform, safeguarding both the company and its customers from potential threats.\u003c/p\u003e\n\u003ch2 id=\"customer-assistance\"\u003eCustomer Assistance\u003c/h2\u003e\n\u003cp\u003eThe customer support systems of banks and fintech companies often face challenges in providing efficient and personalized assistance to customers. Issues such as repetitive marketing calls and inadequate support when needed can lead to customer dissatisfaction. While the human agents handling customer queries strive to assist, the limitations of manual processes can hinder their effectiveness in delivering timely and relevant information.\u003c/p\u003e\n\u003cpicture\u003e\n   \u003cimg src=\"/images/blogs/2024/apr/artificial-intelligence-applications-in-fintech/customer-assistance.png\" alt=\"Models in artificial intelligence\" class=\"responsive-image\" style=\"max-width: 50%;position: relative;left: 25%;\"\u003e\n\u003c/picture\u003e\n\u003cp\u003eAI emerges as a transformative solution to enhance customer assistance in the financial industry. By leveraging AI technologies, banks and fintechs can address these challenges and provide more effective support to their customers. AI-powered tools can streamline information retrieval, collate data efficiently, and present solutions in a clear and understandable manner, overcoming the complexities of financial processes and terminology.\u003c/p\u003e\n\u003cp\u003eSome tools that can be utilized for improving customer assistance in the banking and fintech sector include:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eChatbots\u003c/strong\u003e: AI-powered chatbots can engage with customers in real-time, providing instant responses to queries and offering personalized assistance.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNatural Language Processing (NLP) Tools\u003c/strong\u003e: NLP tools can analyze and interpret customer queries, enabling accurate and context-aware responses.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003ePersonalization Engines\u003c/strong\u003e: AI-driven personalization engines can tailor recommendations and solutions based on individual customer preferences and behaviors.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eInteractive Visualizations\u003c/strong\u003e: Tools that create visual representations of complex financial concepts can help customers better understand information.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVoice Assistants\u003c/strong\u003e: Voice-activated AI assistants can provide hands-free assistance to customers, enhancing accessibility and convenience.\u003c/p\u003e\n\u003ch2 id=\"tax-assistance\"\u003eTax Assistance\u003c/h2\u003e\n\u003cp\u003eTax filing is a crucial obligation for every earner, and the complexity of tax laws and regulations can often pose challenges for individuals. Artificial Intelligence (AI) emerges as a valuable tool in simplifying the tax filing process and providing assistance to users in navigating through the intricacies of tax forms and regulations.\u003c/p\u003e\n\u003cp\u003eAI can play a significant role in tax assistance by automating various aspects of tax preparation and filing. By leveraging AI algorithms, users can receive guidance on filling out tax forms accurately, identifying potential deductions, and maximizing tax-saving opportunities. AI can analyze user data, income sources, and expenses to provide personalized tax recommendations tailored to each individual\u0026rsquo;s financial situation.\u003c/p\u003e\n\u003cp\u003eIn countries like India where multiple tax regimes coexist, AI can offer valuable support in selecting the most beneficial tax scheme based on the user\u0026rsquo;s profile and financial circumstances. By analyzing user data and tax laws, AI can generate recommendations on the optimal tax-saving strategies and schemes that align with the user\u0026rsquo;s tax obligations and financial goals.\n\u003cpicture\u003e\u003c/p\u003e\n   \u003cimg src=\"/images/blogs/2024/apr/artificial-intelligence-applications-in-fintech/tax-assistance.png\" alt=\"Models in artificial intelligence\" class=\"responsive-image\" style=\"max-width: 50%;position: relative;left: 25%;\"\u003e\n\u003c/picture\u003e\n\u003cp\u003eMoreover, AI-powered tax assistance tools can help users gather the required documents, minimize errors in tax filings, and set up reminders for important tax deadlines. By automating these processes, AI not only simplifies tax compliance but also enhances the overall tax-filing experience for users, ensuring accuracy and efficiency in meeting tax obligations.\u003c/p\u003e\n\u003cp\u003eThrough AI-driven tax assistance, individuals and corporates can navigate the complexities of tax regulations with ease, optimize their tax returns, and stay informed about relevant tax-saving opportunities, ultimately empowering them to manage their taxes more effectively and efficiently.\u003c/p\u003e\n\u003ch2 id=\"identity-verification\"\u003eIdentity Verification\u003c/h2\u003e\n\u003cp\u003eEnsuring secure and accurate user verification is a critical aspect of applications, especially in the financial and banking sectors. Identity management systems must effectively distinguish between genuine users and fraudulent attempts, even in scenarios like differentiating between identical twins, while maintaining a seamless and convenient validation process.\u003c/p\u003e\n\u003cp\u003eAI technology plays a pivotal role in enhancing identity verification processes by leveraging a multitude of parameters to establish and authenticate user identities. By mapping a user\u0026rsquo;s photo with identity documents, analyzing facial features, calculating age, and cross-referencing various data points, AI enhances the security and accuracy of identity verification processes, thereby authorizing legitimate users to access banking applications securely.\u003c/p\u003e\n\u003cp\u003eThe incorporation of multiple parameters such as voice recognition, facial biometrics, geolocation data, address verification, document validity checks, age verification, device locations, and behavioral analysis strengthens the identity verification process. By utilizing these diverse parameters, AI can create a comprehensive digital fingerprint unique to each user, enhancing the robustness of identity verification and ensuring a high level of security.\n\u003cpicture\u003e\u003c/p\u003e\n   \u003cimg src=\"/images/blogs/2024/apr/artificial-intelligence-applications-in-fintech/identity.png\" alt=\"Models in artificial intelligence\" class=\"responsive-image\" style=\"max-width: 50%;position: relative;left: 25%;\"\u003e\n\u003c/picture\u003e\n\u003cp\u003eThe more parameters involved in the identity verification process, the higher the level of security and accuracy achieved. AI-driven identity verification not only enhances security measures but also streamlines the user authentication process, offering a seamless and reliable experience for users accessing banking applications and financial services.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003e\u003ca href=\"https://www.paypal.com/us/brc/article/payment-fraud-detection-machine-learning\"\u003ehttps://www.paypal.com/us/brc/article/payment-fraud-detection-machine-learning\u003c/a\u003e\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n","description":"","image":"/images/blogs/2024/apr/artificial-intelligence-applications-in-fintech/banner.gif","permalink":"http://localhost:1313/blogs/2024/apr/artificial-intelligence-applications-in-fintech/","title":"Artificial Intelligence Applications in Fintech"},{"content":"\u003cp\u003e\u003cstrong\u003eModel\u003c/strong\u003e is a simplified version of a real world entity that focuses on some of the properties of the real object that are under study. Similar to the models doing a ramp walk, help us understand how the clothes developed by a designer might look, models are an integral part of software industry, that help in catering to a specific set of properties that we want to create in the soft world.\u003c/p\u003e\n\u003cp\u003eIn artificial intelligence, a model is a mathematical representation of a specific aspect of the real world. AI models are created using algorithms and data to learn patterns, make predictions, or perform tasks without being explicitly programmed for each step. These models serve as the core components of AI systems and are used to process information, make decisions, and generate outputs based on input data.\u003c/p\u003e\n\u003cp\u003eAI models can take various forms depending on the type of problem they are designed to solve. Some common types of AI models include:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eMachine Learning Models\u003c/strong\u003e: These models learn from data to make predictions or decisions without being explicitly programmed. They include algorithms like linear regression, decision trees, support vector machines, neural networks, and more.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eDeep Learning Models\u003c/strong\u003e: A subset of machine learning, deep learning models use neural networks with multiple layers to learn complex patterns in data. They are commonly used for tasks like image recognition, natural language processing, and speech recognition.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eReinforcement Learning Models\u003c/strong\u003e: These models learn through trial and error by interacting with an environment and receiving feedback in the form of rewards or penalties. They are used in applications like game playing, robotics, and autonomous systems.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eGenerative Models\u003c/strong\u003e: Generative models create new data or content based on patterns learned from existing data. They are used for tasks like image generation, text generation, and content creation.\u003c/p\u003e\n\u003cpicture\u003e\n   \u003cimg src=\"/images/blogs/2024/apr/models-in-artificial-intelligence/types-of-ai-models.png\" alt=\"Models in artificial intelligence\" class=\"responsive-image\"\u003e\n\u003c/picture\u003e\n## Machine Learning Models\nMachine learning models are designed to learn from data and make predictions or decisions without being explicitly programmed for every scenario. Here's a brief overview of some common machine learning algorithms mentioned:\n\u003cp\u003e\u003cstrong\u003eLinear Regression\u003c/strong\u003e:\u003c/p\u003e\n\u003cp\u003eLinear regression is a foundational machine learning technique that predicts a continuous value based on input features by fitting a linear relationship between them.\u003cbr\u003e\nBy assuming a linear relationship between the independent variables and the output, linear regression calculates predictions by assigning weights to each feature and adding an intercept term.\nThis model is trained to minimize the difference between predicted and actual values, making it a valuable tool for tasks like sales forecasting, price estimation, and trend analysis across various industries.\nThe interpretability of linear regression coefficients allows for a clear understanding of how each input feature influences the predicted output, making it a widely used and versatile method in data analysis and prediction.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eDecision Trees\u003c/strong\u003e:\u003c/p\u003e\n\u003cp\u003eDecision Trees are tree-like models used in machine learning where each internal node represents a decision based on an input feature.\u003c/p\u003e\n\u003cp\u003eThese models are versatile and can be used for both classification and regression tasks. In a Decision Tree, the data is split at each node based on feature values to create branches that lead to leaf nodes representing the final decision or prediction.\u003c/p\u003e\n\u003cp\u003eDecision Trees are easy to interpret and visualize, making them popular for understanding the decision-making process in a transparent manner.\u003c/p\u003e\n\u003cp\u003eThey are effective for tasks like classification, where the goal is to predict the class label of a sample, and regression, where the goal is to predict a continuous value.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSupport Vector Machines (SVM)\u003c/strong\u003e:\u003c/p\u003e\n\u003cp\u003eSupport Vector Machines (SVM) are powerful machine learning models that are effective for both classification and regression tasks. SVM works by finding the hyperplane that best separates classes in the feature space.\u003c/p\u003e\n\u003cp\u003eIn classification tasks, SVM aims to find the optimal hyperplane that maximizes the margin between different classes, leading to better generalization and robustness. SVM can handle linear and non-linear relationships through the use of kernel functions, allowing it to capture complex decision boundaries in high-dimensional spaces.\u003c/p\u003e\n\u003cp\u003eSVM is widely used in various domains for tasks like image classification, text categorization, and anomaly detection due to its ability to find the best separation between classes in the feature space.\u003c/p\u003e\n\u003ch2 id=\"deep-learning-models\"\u003eDeep Learning Models\u003c/h2\u003e\n\u003cp\u003eDeep learning is a part of machine learning that uses neural networks with many layers to understand complex patterns in data. By copying how the human brain works, deep learning models can automatically find and show complicated connections in large amounts of data. These models are very good at tasks like recognizing images, understanding language, recognizing speech, and more, where normal machine learning methods might not work as well.\u003c/p\u003e\n\u003cp\u003eDeep learning techniques, like Convolutional Neural Networks (CNNs) for looking at images and Recurrent Neural Networks (RNNs) for working with data in a sequence, have changed fields like computer vision, healthcare, finance, and self-operating systems. The power of deep learning models to find important features in data and make correct predictions has pushed forward progress in artificial intelligence, letting machines do tasks with intelligence and efficiency similar to humans.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eConvolutional Neural Networks (CNNs)\u003c/strong\u003e\nConvolutional Neural Networks (CNNs) are a type of deep learning model commonly used for tasks like image recognition, object detection, and image classification.\u003c/p\u003e\n\u003cp\u003eCNNs are designed to automatically learn and extract hierarchical features from images by applying convolutional layers that capture patterns like edges, textures, and shapes.\u003c/p\u003e\n\u003cp\u003eThese models are effective in handling spatial relationships in images and have revolutionized computer vision tasks by enabling accurate and efficient analysis of visual data. CNNs have become a cornerstone in various applications such as facial recognition, medical image analysis, autonomous driving, and more, showcasing their versatility and effectiveness in processing visual information.\u003c/p\u003e\n\u003cp\u003eAn example of layers in CNN\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003egraph LR\n    A[Input Layer] --\u0026gt; B[Convolutional Layer]\n    B --\u0026gt; C[Activation Function]\n    C --\u0026gt; D[Pooling Layer]\n    D --\u0026gt; H[Flattening Layer]\n    H --\u0026gt; I[Fully Connected Layer]\n    I --\u0026gt; J[Output Layer]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eRecurrent Neural Networks (RNNs)\u003c/strong\u003e\nRecurrent Neural Networks (RNNs) are a type of neural network designed to handle sequential data, where the order of data points matters. RNNs have loops within their architecture, allowing them to maintain a memory of previous inputs as they process new ones. This memory feature enables RNNs to capture dependencies and patterns over time, making them suitable for tasks like language modeling, speech recognition, time series prediction, and more. The ability of RNNs to work with sequential data has made them popular in natural language processing and other applications where context and temporal information are crucial for making accurate predictions.\u003c/p\u003e\n\u003ch2 id=\"reinforcement-learning-models\"\u003eReinforcement Learning Models\u003c/h2\u003e\n\u003cp\u003eReinforcement learning models are machine learning algorithms that learn by interacting with an environment, receiving feedback in the form of rewards and penalties based on their actions. These algorithms aim to maximize cumulative rewards over time by making decisions through trial and error. Some key processes and algorithms in reinforcement learning include:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eMarkov Decision Processes (MDPs)\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eMarkov Decision Processes (MDPs) offer a mathematical framework for modeling decision-making in scenarios where outcomes are influenced by both random events and the decisions made by an agent. MDPs consist of:\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eStates\u003c/em\u003e: Represent the different situations or conditions in which the agent can find itself.\u003cbr\u003e\n\u003cem\u003eActions\u003c/em\u003e: Choices available to the agent at each state.\u003cbr\u003e\n\u003cem\u003eTransition Probabilities\u003c/em\u003e: Define the likelihood of moving from one state to another based on the chosen action.\u003cbr\u003e\n\u003cem\u003eRewards\u003c/em\u003e: Quantify the immediate benefit or cost associated with transitioning between states.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003egraph LR\n    A[State 1] --\u0026gt;|Action 1| B[State 2]\n    A --\u0026gt;|Action 2| C[State 3]\n    B --\u0026gt;|Action 3| D[State 4]\n    C --\u0026gt;|Action 4| D\n    D --\u0026gt;|Action 5| E[Terminal State]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003e\u003cstrong\u003eQ-learning\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eQ-learning is a model-free reinforcement learning algorithm that aims to learn the optimal action-selection policy for a given Markov Decision Process (MDP). It works by estimating the value of taking a specific action in a particular state, known as the Q-value. The algorithm iteratively updates these Q-values based on the rewards received from the environment. By exploring different actions and updating Q-values accordingly, Q-learning enables the agent to learn the best policy for maximizing cumulative rewards over time in a dynamic environment. This approach allows the agent to make informed decisions based on the learned Q-values, leading to efficient and effective decision-making in complex scenarios.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003egraph LR\n    A[State S] --\u0026gt; B[Action A]\n    B --\u0026gt; C[Observe Reward R]\n    C --\u0026gt; D[Update Q-Value]\n    D --\u0026gt; E[Choose Next Action]\n    E --\u0026gt; B\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"generative-models\"\u003eGenerative Models\u003c/h2\u003e\n\u003cp\u003eGenerative models are a class of machine learning models that aim to create new data or content based on patterns learned from existing data. These models learn the underlying structure of the data and generate new samples that resemble the original data distribution. Generative models are widely used in tasks like image generation, text generation, and content creation.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eGenerative Adversarial Networks (GANs)\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eGenerative Adversarial Networks (GANs) are a class of generative models that comprise two neural networks: a generator and a discriminator. These networks are trained in an adversarial manner, where they compete against each other in a game-like setting.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eGenerator\u003c/em\u003e: The generator network generates fake samples, such as images or videos, based on random noise or input data. Its goal is to create samples that are indistinguishable from real data.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eDiscriminator\u003c/em\u003e: The discriminator network acts as a critic and tries to differentiate between real samples from the dataset and fake samples produced by the generator. Its objective is to correctly classify whether a given sample is real or fake.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003e\ngraph LR\n    A[Random Noise or Input Data] --\u0026gt; B[Generator]\n    B --\u0026gt; C[Fake Samples]\n    A --\u0026gt; D[Real Data]\n    D --\u0026gt; E[Discriminator]\n    C --\u0026gt; E\n    E --\u0026gt;|Feedback| B\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThrough this adversarial training process, the generator learns to create increasingly realistic samples to fool the discriminator, while the discriminator improves its ability to distinguish between real and fake data. This competition between the two networks leads to the refinement of both models, ultimately resulting in the generation of high-quality and realistic data, such as images and videos, by the generator. GANs have demonstrated remarkable success in various applications, including image generation, style transfer, and data augmentation.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eVariational Autoencoders (VAEs)\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eVariational Autoencoders (VAEs) are a type of generative model that focuses on learning a low-dimensional latent space representation of data. VAEs consist of an encoder network that maps input data to a latent space and a decoder network that reconstructs the input data from the latent space representation.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eEncoder:\u003c/em\u003e The encoder network takes input data and maps it to a lower-dimensional latent space, where each point represents a different configuration of the input data. This latent space captures the underlying structure of the data in a compressed form.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eDecoder:\u003c/em\u003e The decoder network takes a point from the latent space and reconstructs the input data. By sampling from the learned latent space, VAEs can generate new samples that resemble the original data distribution.\u003c/p\u003e\n\u003cp\u003eVAEs are trained to reconstruct input data accurately while also regularizing the latent space to follow a specific distribution, typically a Gaussian distribution. This regularization encourages the latent space to be continuous and smooth, allowing for meaningful interpolation between data points.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003egraph LR\n    A[Input Data] --\u0026gt; B[Encoder]\n    B --\u0026gt; C[Latent Space]\n    C --\u0026gt; D[Decoder]\n    D --\u0026gt; E[Reconstructed Data]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eBy learning a compact and structured latent space representation, VAEs can generate new samples by sampling from this space. They are commonly used for tasks like image generation, data compression, and representation learning, where capturing the underlying structure of the data is essential for generating meaningful outputs.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTransformers\u003c/strong\u003e\u003c/p\u003e\n\u003cp\u003eTransformers are a class of deep learning models that have gained significant popularity, particularly in natural language processing tasks. Transformers have revolutionized the field by addressing the limitations of recurrent neural networks (RNNs) and long short-term memory (LSTM) networks in capturing long-range dependencies in sequential data.\u003c/p\u003e\n\u003cp\u003eKey features of Transformers include:\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eSelf-Attention Mechanism:\u003c/em\u003e Transformers leverage self-attention mechanisms to weigh the importance of different input tokens when processing each token. This mechanism allows the model to capture dependencies between distant words in a sentence efficiently.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003eTransformer Architecture:\u003c/em\u003e Transformers consist of an encoder-decoder architecture, where the encoder processes the input sequence and the decoder generates the output sequence. Each layer in the encoder and decoder contains multi-head self-attention mechanisms and feedforward neural networks.\u003c/p\u003e\n\u003cp\u003e\u003cem\u003ePositional Encoding:\u003c/em\u003e To maintain the sequential order of input tokens, Transformers use positional encodings to inject information about the position of tokens into the model.\u003c/p\u003e\n\u003cp\u003eTransformers have been successfully applied to various natural language processing tasks, including machine translation, text summarization, language modeling, and more. Additionally, Transformers have been adapted beyond text-based tasks and applied to image captioning, speech recognition, and other sequential data tasks due to their ability to capture complex dependencies efficiently.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003egraph LR\n    A[Input Sequence] --\u0026gt; B[Encoder Layer 1]\n    B --\u0026gt; C[Encoder Layer 2]\n    C --\u0026gt; D[...]\n    D --\u0026gt; E[Encoder Layer N]\n    E --\u0026gt; F[Decoder Layer 1]\n    F --\u0026gt; G[Decoder Layer 2]\n    G --\u0026gt; H[...]\n    H --\u0026gt; I[Decoder Layer N]\n    I --\u0026gt; J[Output Sequence]\n\u003c/code\u003e\u003c/pre\u003e","description":"","image":"/images/blogs/2024/apr/models-in-artificial-intelligence/banner.png","permalink":"http://localhost:1313/blogs/2024/apr/models-in-artificial-intelligence/","title":"Models in Artificial Intelligence"},{"content":"\u003ch1 id=\"introduction-to-rag\"\u003eIntroduction to RAG\u003c/h1\u003e\n\u003cp\u003eRetrieval-Augmented Generation (RAG) is a cutting-edge technique in artificial intelligence that merges generative AI capabilities with large language models to enhance language generation tasks. By integrating both parametric memory (learned patterns) and non-parametric memory (external knowledge sources), RAG models aim to boost the specificity, diversity, and accuracy of the text they generate to new heights. Unlike traditional Large Language Models (LLMs) that rely solely on internal data, RAG allows for seamless access to external knowledge repositories like Wikipedia. This access enables RAG models to deepen their understanding of context and improve the overall quality of the text they produce.\u003c/p\u003e\n\u003ch1 id=\"generative-ai\"\u003eGenerative AI\u003c/h1\u003e\n\u003cp\u003eGenerative AI refers to systems capable of creating new content, such as text, images, or music, rather than simply regurgitating the existing data.\nThis innovative technology enables machines to generate original content by mimicking human creativity. Generative AI algorithms learn patterns from vast datasets and use this knowledge to produce novel outputs that can be diverse, contextually relevant, and sometimes even artistic.\u003c/p\u003e\n\u003cp\u003eApplications of generative AI span various fields, including content generation, creative design, conversational agents, and personalized recommendations. The ability of generative AI to generate new and imaginative content has significant implications for industries such as entertainment, marketing, and research, paving the way for innovative solutions and enhanced user experiences.\u003c/p\u003e\n\u003ch1 id=\"large-language-models\"\u003eLarge Language Models\u003c/h1\u003e\n\u003cp\u003eLarge Language Models are smart tools in generative AI that help computers understand and create human-like content in human readable languages.\nThese models, trained on huge amounts of text, can figure out patterns in language to write coherent and relevant sentences.\nModels like GPT-3 have become famous for their ability to chat like humans and generate text that makes sense. They are great at tasks like writing, translating, summarizing, and answering questions.\u003c/p\u003e\n\u003cp\u003eHowever, these models also have challenges with things like fairness, explaining their decisions, and being ethical.\u003c/p\u003e\n\u003cp\u003eResearchers are looking into new methods like Retrieval-Augmented Generation to make these models even better at handling tasks that need a lot of knowledge.\u003c/p\u003e\n\u003ch1 id=\"llm-shortcomings\"\u003eLLM Shortcomings\u003c/h1\u003e\n\u003cp\u003eLarge Language Models are powerful, yet, despite their impressive capabilities, LLMs are not without their limitations. Some of them are listed below\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eLack of Contextual Understanding\u003c/strong\u003e: One of the primary shortcomings of LLMs is their limited ability to grasp nuanced contextual cues. While these models excel at generating text based on statistical patterns in data, they may struggle to understand the subtleties of human language, leading to inaccuracies and inconsistencies in generated outputs.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBias and Fairness Issues\u003c/strong\u003e: LLMs are prone to inheriting biases present in the data they are trained on, which can result in biased or unfair outcomes in their generated text. These biases can perpetuate stereotypes, reinforce inequalities, and impact the quality and reliability of the model\u0026rsquo;s outputs, raising concerns about ethical implications.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eInterpretability Challenges\u003c/strong\u003e: Another significant challenge with LLMs is their lack of interpretability, making it difficult to understand how these models arrive at their decisions. The complex nature of deep learning algorithms used in LLMs can obscure the reasoning behind their outputs, hindering transparency and trust in the decision-making process.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eData Efficiency and Resource Intensiveness\u003c/strong\u003e: Training and fine-tuning LLMs require vast amounts of data and computational resources, making them resource-intensive and environmentally costly. The reliance on massive datasets for training can also raise concerns about data privacy, security, and the environmental impact of large-scale model training.\u003c/p\u003e\n\u003ch1 id=\"rag-concept\"\u003eRAG Concept\u003c/h1\u003e\n\u003cp\u003eEnhancing the context provided to Large Language Models (LLMs) can mitigate many of their shortcomings and improve their performance significantly.\u003c/p\u003e\n\u003cp\u003eBy offering more relevant information and background to LLMs, they can better understand the nuances of a given task, leading to more accurate and tailored responses. For example, when presented with a prompt about a medical condition, providing additional context such as symptoms, treatment options, and related research can help LLMs generate more informed and reliable answers. This enriched context not only aids in removing biases but also enhances the efficiency of responses by guiding LLMs towards the most pertinent information.\u003c/p\u003e\n\u003cp\u003eIn the context of the Retrieval-Augmented Generation (RAG) approach, the integration of additional documents or data sources further amplifies the benefits of contextual enrichment for LLMs. For instance, if a prompt requires information on a historical event, RAG can retrieve relevant articles, timelines, and scholarly papers to supplement the LLM\u0026rsquo;s knowledge base. By expanding the scope of available information, RAG empowers LLMs to delve deeper into the topic within a more focused context, leading to more comprehensive and accurate responses.\u003c/p\u003e\n\u003cp\u003eMoreover, the synergy between contextual enrichment and external knowledge retrieval not only streamlines the search process for LLMs but also equips them with a broader understanding of diverse topics. This holistic approach enables LLMs to generate responses that are not only factually accurate but also contextually relevant and tailored to the specific requirements of the task at hand. By leveraging the combined strengths of enhanced context provision and external knowledge integration, LLMs can overcome their inherent limitations and deliver more sophisticated and nuanced language outputs across various domains and applications.\u003c/p\u003e\n\u003ch1 id=\"rag-architecture\"\u003eRAG Architecture\u003c/h1\u003e\n\n\n\n\n\n\n\n    \n\n\n\u003cimg src=\"http://localhost:1313/images/blogs/2024/apr/retrieval-augmented-generation/rag-architecture.png\" class=\"\" style=\"\"\u003e\n\u003cp\u003eThe \u003cstrong\u003eRetrieval-Augmented Generation (RAG)\u003c/strong\u003e architecture is a well-structured system that orchestrates the flow of information and processes. Let\u0026rsquo;s break down the components and their interactions:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUser Input\u003c/strong\u003e: The process begins with the user providing input, which could be a query, prompt, or request.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUser Interface (UI) and Prompt Filter\u003c/strong\u003e:\n- The user input is first validated through the UI.\n- The prompt filter then assesses the input to determine its relevance and purpose.\n- The filter can be used to mask any sensitive information provided by the user before it is sent to the LLM or other third party systems.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eData Source Retrieval\u003c/strong\u003e:\n- The prompt filter guides the system to identify relevant data sources.\n- These sources could include databases, articles, scholarly papers, or any other relevant information repositories.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSource Selector\u003c/strong\u003e:\n- Once potential data sources are identified, the system selects the most appropriate ones.\n- The selection process considers factors like reliability, recency, and relevance.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eContext Preparation\u003c/strong\u003e:\n- The system prepares context based on the selected data sources.\n- Context includes additional information related to the prompt, enriching the understanding of the task.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eLarge Language Model (LLM)\u003c/strong\u003e:\n- The context, along with the original prompt, is fed into the LLM.\n- The LLM processes this input and generates an enriched response.\n- It leverages its pre-existing knowledge and the context to create a tailored answer.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eResponse Display\u003c/strong\u003e:\n- The LLM\u0026rsquo;s output is sent back to the user interface.\n- The UI displays the response to the user.\n- Optionally, the returned responses can be stored, and analyzed for any problems before sending them to the user.\u003c/p\u003e\n\u003cp\u003eThe RAG architecture systematically combines contextual enrichment, external knowledge retrieval, and LLM processing to provide accurate and relevant responses to user prompts. By integrating these components, we enhance the quality of language outputs across various domains and applications.\u003c/p\u003e\n\u003ch1 id=\"rag-advantages\"\u003eRAG Advantages\u003c/h1\u003e\n\u003cp\u003e\u003cstrong\u003eContextual Enrichment\u003c/strong\u003e:\nRAG integrates additional context into the language model\u0026rsquo;s input. This context provides a deeper understanding of the task, enabling more accurate and nuanced responses. By considering relevant information beyond the prompt, RAG reduces biases and improves overall performance.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eExternal Knowledge Retrieval\u003c/strong\u003e:\nRAG leverages external data sources (such as articles, papers, or databases). These sources supplement the language model\u0026rsquo;s pre-existing knowledge. Retrieving information from diverse sources enhances the model\u0026rsquo;s ability to generate well-informed answers.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eFocused Response Generation\u003c/strong\u003e:\nThe combination of context and external knowledge allows RAG to generate responses tailored to specific requirements. RAG avoids generic or irrelevant answers by honing in on the most pertinent information. This focused approach benefits both accuracy and relevance.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eComprehensive Coverage\u003c/strong\u003e:\nRAG\u0026rsquo;s holistic approach ensures comprehensive coverage of topics. By expanding the scope of available information, it addresses a wide range of queries. Users receive detailed and thorough responses across various domains.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eEfficient Search Process\u003c/strong\u003e:\nRAG streamlines the search for relevant data. It selects the most reliable and up-to-date sources, saving time and effort. The efficient retrieval process contributes to faster response times.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNuanced Language Outputs\u003c/strong\u003e:\nRAG enables LLMs to produce sophisticated and nuanced language. By combining context, external knowledge, and LLM processing, it surpasses the limitations of standalone models. Users benefit from high-quality, contextually relevant answers.\u003c/p\u003e\n\u003ch1 id=\"rag-considerations\"\u003eRAG Considerations\u003c/h1\u003e\n\u003cp\u003eWhile the \u003cstrong\u003eRetrieval-Augmented Generation (RAG)\u003c/strong\u003e approach offers significant advantages, it also has some limitations:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eComplexity and Resource Intensiveness\u003c/strong\u003e:\nImplementing RAG requires integrating multiple components: context preparation, external knowledge retrieval, and language model processing. Managing these components can be complex, especially when dealing with large-scale systems. Additionally, retrieving external knowledge may consume significant computational resources.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eQuality of Retrieved Sources\u003c/strong\u003e:\nThe effectiveness of RAG heavily depends on the quality and relevance of the retrieved data sources. If the external sources contain inaccuracies, biases, or outdated information, it can negatively impact the overall response quality.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eLatency and Response Time\u003c/strong\u003e:\nRetrieving external knowledge introduces latency. Users may experience delays in receiving responses due to the time required for source selection and retrieval. Balancing response time and accuracy is a challenge.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eCoverage Limitations\u003c/strong\u003e:\nWhile RAG expands the scope of available information, it may still miss niche or specialized topics. Some queries may require sources not readily available in the selected data repositories.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eDependency on Data Availability\u003c/strong\u003e:\nRAG relies on the existence of relevant external sources. If certain topics lack comprehensive coverage in existing databases, RAG may struggle to provide accurate answers.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBias Amplification\u003c/strong\u003e:\nIf the retrieved sources contain biases, RAG may inadvertently amplify those biases in its responses. Careful curation of data sources is essential to mitigate this risk.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTrade-off Between Context and Length\u003c/strong\u003e:\nIncluding extensive context can improve response quality, but it also increases response length. Striking a balance between context richness and conciseness is crucial.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eChallenges in Multilingual Settings\u003c/strong\u003e:\nRAG\u0026rsquo;s effectiveness may vary across languages. Retrieving external knowledge in languages other than English can be challenging.\u003c/p\u003e\n","description":"Explore the innovative world of Retrieval-Augmented Generation (RAG) with Mohit Kanwar’s insightful blog. Discover how RAG combines generative AI with large language models to revolutionize language generation tasks, offering unparalleled specificity, diversity, and accuracy.","image":"/images/blogs/2024/apr/retrieval-augmented-generation/banner.png","permalink":"http://localhost:1313/blogs/2024/apr/retrieval-augmented-generation/","title":"Retrieval Augmented Generation"},{"content":"\u003cp\u003eI have been creating designs for software solutions for quite some time now. A picture is worth a thousand words and hence the different diagrams really help in expressing the software designs in a better way to fellow team mates.\u003c/p\u003e\n\u003cp\u003eA Sequence diagram is a powerful tool that shows the step-by-step interactions between different parts of a software system, making it easier to understand how messages and actions flow.\u003c/p\u003e\n\u003cp\u003eOver the years, I\u0026rsquo;ve utilized various tools like Visio and Draw.io for manual diagram creation. However, in recent times, I\u0026rsquo;ve found mermaid.js to be my preferred tool for crafting sequence diagrams. Mermaid.js stands out as it enables diagram creation using a specific DSL, primarily in markdown format. This markdown is swiftly transformed into shareable diagrams.\u003c/p\u003e\n\u003cp\u003eMermaid\u0026rsquo;s user-friendly markdown format makes it easy to grasp, leading to a shorter learning curve. Additionally, markdown files can be stored in git for version control, enhancing collaboration.\u003c/p\u003e\n\u003cp\u003eThe integration of different IDE plugins facilitates rapid editing, thereby enhancing efficiency and speeding up the delivery process.\u003c/p\u003e\n\u003cp\u003eToday I will explain how can we create the sequence diagram using mermaid\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eParticipants\u003c/li\u003e\n\u003cli\u003eRequest and Response representations\u003c/li\u003e\n\u003cli\u003eGrouping Participants\u003c/li\u003e\n\u003cli\u003eAuto numbering\u003c/li\u003e\n\u003cli\u003eNotes\u003c/li\u003e\n\u003cli\u003eActivations\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"participants\"\u003eParticipants\u003c/h2\u003e\n\u003cp\u003eParticipants represent the entities or components involved in the sequence of interactions. They are typically depicted as boxes at the top of the diagram. Here\u0026rsquo;s an example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-txt\" data-lang=\"txt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esequenceDiagram\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    Client-\u0026gt;\u0026gt;Server: Get details\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003esequenceDiagram\n    Client-\u0026gt;\u0026gt;Server: Get details\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIn the above diagram, we have two participants Client and Server.\nThe Client is requesting to \u0026ldquo;Get details\u0026rdquo; from the server.\nWhile it is optional, but I prefer to call out the participants on the top of the diagram, to be more specific.\nIt also aids in improving the thought process by calling out all the participants upfront. e.g.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-txt\" data-lang=\"txt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esequenceDiagram\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Client\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Server\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    Client-\u0026gt;\u0026gt;Server: Get details\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003esequenceDiagram\n    participant Client\n    participant Server\n    Client-\u0026gt;\u0026gt;Server: Get details\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"request-and-response-representations\"\u003eRequest and Response representations\u003c/h2\u003e\n\u003cp\u003eIn the previous example we determined that the arrow \u003ccode\u003e -\u0026gt;\u0026gt;\u003c/code\u003e represents the request.\nWhile it is not a standard representation, I like to represent the responses with a dashed arrow. The dashed arrow can be represente by \u003ccode\u003e --\u0026gt;\u0026gt;\u003c/code\u003e.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-txt\" data-lang=\"txt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esequenceDiagram\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Client\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Server\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    Client-\u0026gt;\u0026gt;Server: Get details\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    Server --\u0026gt;\u0026gt; Client: Here are the details\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003esequenceDiagram\n    participant Client\n    participant Server\n    Client-\u0026gt;\u0026gt;Server: Get details\n    Server --\u0026gt;\u0026gt; Client: Here are the details\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"grouping-participants\"\u003eGrouping Participants\u003c/h2\u003e\n\u003cp\u003eSometimes we want to represent more components in a complex system, involving multiple participants. It is easier to group the participants for easier understanding.\nLet\u0026rsquo;s group the participants using a box\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esequenceDiagram\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox FrontEnd\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Mobileapp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox LandingZone\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Firewall\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Gateway\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Cache\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant AuthService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox BusinessServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant AccountsService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant TransactionServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eMobileapp -\u0026gt;\u0026gt; Firewall : get accounts and transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFirewall -\u0026gt;\u0026gt; Gateway : filtered requests\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt; Cache : if request cached\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eCache --\u0026gt;\u0026gt; Gateway : cached request\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt; AuthService: authentication\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAuthService --\u0026gt;\u0026gt; Gateway : token\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt;AccountsService : get accounts\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAccountsService -\u0026gt;\u0026gt; TransactionServices : get transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eTransactionServices --\u0026gt;\u0026gt; AccountsService : Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAccountsService --\u0026gt;\u0026gt; Gateway : Accounts and Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway --\u0026gt;\u0026gt; Mobileapp : Accounts and Transactions\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003esequenceDiagram\nbox FrontEnd\n    participant Mobileapp\nend\nbox LandingZone\n    participant Firewall\n    participant Gateway\n    participant Cache\n    participant AuthService\nend\nbox BusinessServices\n    participant AccountsService\n    participant TransactionServices\nend\nMobileapp -\u0026gt;\u0026gt; Firewall : get accounts and transactions\nFirewall -\u0026gt;\u0026gt; Gateway : filtered requests\nGateway -\u0026gt;\u0026gt; Cache : if request cached\nCache --\u0026gt;\u0026gt; Gateway : cached request\nGateway -\u0026gt;\u0026gt; AuthService: authentication\nAuthService --\u0026gt;\u0026gt; Gateway : token\nGateway -\u0026gt;\u0026gt;AccountsService : get accounts\nAccountsService -\u0026gt;\u0026gt; TransactionServices : get transactions\nTransactionServices --\u0026gt;\u0026gt; AccountsService : Transactions\nAccountsService --\u0026gt;\u0026gt; Gateway : Accounts and Transactions\nGateway --\u0026gt;\u0026gt; Mobileapp : Accounts and Transactions\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eAlthough we have grouped the participants, it is still not very clear. Let\u0026rsquo;s add some colours to represent the diagrams better :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esequenceDiagram\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox lightyellow FrontEnd\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Mobileapp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox lightgreen LandingZone\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Firewall\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Gateway\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Cache\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant AuthService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox azure BusinessServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant AccountsService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant TransactionServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eMobileapp -\u0026gt;\u0026gt; Firewall : get accounts and transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFirewall -\u0026gt;\u0026gt; Gateway : filtered requests\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt; Cache : if request cached\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eCache --\u0026gt;\u0026gt; Gateway : cached request\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt; AuthService: authentication\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAuthService --\u0026gt;\u0026gt; Gateway : token\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt;AccountsService : get accounts\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAccountsService -\u0026gt;\u0026gt; TransactionServices : get transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eTransactionServices --\u0026gt;\u0026gt; AccountsService : Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAccountsService --\u0026gt;\u0026gt; Gateway : Accounts and Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway --\u0026gt;\u0026gt; Mobileapp : Accounts and Transactions\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003esequenceDiagram\nbox lightyellow FrontEnd\n    participant Mobileapp\nend\nbox lightgreen LandingZone\n    participant Firewall\n    participant Gateway\n    participant Cache\n    participant AuthService\nend\nbox azure BusinessServices\n    participant AccountsService\n    participant TransactionServices\nend\nMobileapp -\u0026gt;\u0026gt; Firewall : get accounts and transactions\nFirewall -\u0026gt;\u0026gt; Gateway : filtered requests\nGateway -\u0026gt;\u0026gt; Cache : if request cached\nCache --\u0026gt;\u0026gt; Gateway : cached request\nGateway -\u0026gt;\u0026gt; AuthService: authentication\nAuthService --\u0026gt;\u0026gt; Gateway : token\nGateway -\u0026gt;\u0026gt;AccountsService : get accounts\nAccountsService -\u0026gt;\u0026gt; TransactionServices : get transactions\nTransactionServices --\u0026gt;\u0026gt; AccountsService : Transactions\nAccountsService --\u0026gt;\u0026gt; Gateway : Accounts and Transactions\nGateway --\u0026gt;\u0026gt; Mobileapp : Accounts and Transactions\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe above colours work well for light mode, for dark mode let\u0026rsquo;s chose darker colours :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esequenceDiagram\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox purple FrontEnd\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant WebApp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Mobileapp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant PartnerApp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox green LandingZone\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Firewall\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Gateway\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Cache\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant AuthService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox blue BusinessServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant AccountsService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant TransactionServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eMobileapp -\u0026gt;\u0026gt; Firewall : get accounts and transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFirewall -\u0026gt;\u0026gt; Gateway : filtered requests\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt; Cache : if request cached\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eCache --\u0026gt;\u0026gt; Gateway : cached request\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt; AuthService: authentication\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAuthService --\u0026gt;\u0026gt; Gateway : token\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt;AccountsService : get accounts\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAccountsService -\u0026gt;\u0026gt; TransactionServices : get transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eTransactionServices --\u0026gt;\u0026gt; AccountsService : Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAccountsService --\u0026gt;\u0026gt; Gateway : Accounts and Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway --\u0026gt;\u0026gt; Mobileapp : Accounts and Transactions\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003esequenceDiagram\nbox purple FrontEnd\n    participant Mobileapp\nend\nbox green LandingZone\n    participant Firewall\n    participant Gateway\n    participant Cache\n    participant AuthService\nend\nbox blue BusinessServices\n    participant AccountsService\n    participant TransactionServices\nend\nMobileapp -\u0026gt;\u0026gt; Firewall : get accounts and transactions\nFirewall -\u0026gt;\u0026gt; Gateway : filtered requests\nGateway -\u0026gt;\u0026gt; Cache : if request cached\nCache --\u0026gt;\u0026gt; Gateway : cached request\nGateway -\u0026gt;\u0026gt; AuthService: authentication\nAuthService --\u0026gt;\u0026gt; Gateway : token\nGateway -\u0026gt;\u0026gt;AccountsService : get accounts\nAccountsService -\u0026gt;\u0026gt; TransactionServices : get transactions\nTransactionServices --\u0026gt;\u0026gt; AccountsService : Transactions\nAccountsService --\u0026gt;\u0026gt; Gateway : Accounts and Transactions\nGateway --\u0026gt;\u0026gt; Mobileapp : Accounts and Transactions\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"activations\"\u003eActivations\u003c/h2\u003e\n\u003cp\u003eIt would had been great if we could identify for how long each component is active.\nLet\u0026rsquo;s activate and deactivate the components to add that detail :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esequenceDiagram\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox purple FrontEnd\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Mobileapp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox green LandingZone\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Firewall\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Gateway\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Cache\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant AuthService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox blue BusinessServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant AccountsService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant TransactionServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eMobileapp -\u0026gt;\u0026gt; Firewall : get accounts and transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate Mobileapp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate Firewall\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFirewall -\u0026gt;\u0026gt; Gateway : filtered requests\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate Gateway\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt; Cache : if request cached\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate Cache\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eCache --\u0026gt;\u0026gt; Gateway : cached request\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate Cache\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt; AuthService: authentication\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate AuthService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAuthService --\u0026gt;\u0026gt; Gateway : token\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate AuthService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt;AccountsService : get accounts\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate AccountsService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAccountsService -\u0026gt;\u0026gt; TransactionServices : get transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate TransactionServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eTransactionServices --\u0026gt;\u0026gt; AccountsService : Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate TransactionServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAccountsService --\u0026gt;\u0026gt; Gateway : Accounts and Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate AccountsService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway --\u0026gt;\u0026gt; Mobileapp : Accounts and Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate Gateway\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate Mobileapp\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003esequenceDiagram\nbox purple FrontEnd\n    participant Mobileapp\nend\nbox green LandingZone\n    participant Firewall\n    participant Gateway\n    participant Cache\n    participant AuthService\nend\nbox blue BusinessServices\n    participant AccountsService\n    participant TransactionServices\nend\n\nMobileapp -\u0026gt;\u0026gt; Firewall : get accounts and transactions\nactivate Mobileapp\nactivate Firewall\nFirewall -\u0026gt;\u0026gt; Gateway : filtered requests\nactivate Gateway\nGateway -\u0026gt;\u0026gt; Cache : if request cached\nactivate Cache\nCache --\u0026gt;\u0026gt; Gateway : cached request\ndeactivate Cache\nGateway -\u0026gt;\u0026gt; AuthService: authentication\nactivate AuthService\nAuthService --\u0026gt;\u0026gt; Gateway : token\ndeactivate AuthService\nGateway -\u0026gt;\u0026gt;AccountsService : get accounts\nactivate AccountsService\nAccountsService -\u0026gt;\u0026gt; TransactionServices : get transactions\nactivate TransactionServices\nTransactionServices --\u0026gt;\u0026gt; AccountsService : Transactions\ndeactivate TransactionServices\nAccountsService --\u0026gt;\u0026gt; Gateway : Accounts and Transactions\ndeactivate AccountsService\nGateway --\u0026gt;\u0026gt; Mobileapp : Accounts and Transactions\ndeactivate Gateway\ndeactivate Mobileapp\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOh, the firewall somehow didn\u0026rsquo;t get activated. I just realized that there was a problem in the diagram. Let\u0026rsquo;s correct that :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esequenceDiagram\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox purple FrontEnd\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Mobileapp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox green LandingZone\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Firewall\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Gateway\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Cache\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant AuthService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox blue BusinessServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant AccountsService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant TransactionServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eMobileapp -\u0026gt;\u0026gt; Firewall : get accounts and transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate Mobileapp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate Firewall\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFirewall -\u0026gt;\u0026gt; Gateway : filtered requests\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate Gateway\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt; Cache : if request cached\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate Cache\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eCache --\u0026gt;\u0026gt; Gateway : cached request\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate Cache\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt; AuthService: authentication\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate AuthService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAuthService --\u0026gt;\u0026gt; Gateway : token\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate AuthService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt;AccountsService : get accounts\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate AccountsService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAccountsService -\u0026gt;\u0026gt; TransactionServices : get transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate TransactionServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eTransactionServices --\u0026gt;\u0026gt; AccountsService : Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate TransactionServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAccountsService --\u0026gt;\u0026gt; Gateway : Accounts and Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate AccountsService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway --\u0026gt;\u0026gt; Firewall : Accounts and Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate Gateway\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFirewall --\u0026gt;\u0026gt; Mobileapp : Accounts and Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate Mobileapp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate Firewall\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003esequenceDiagram\nbox purple FrontEnd\n    participant Mobileapp\nend\nbox green LandingZone\n    participant Firewall\n    participant Gateway\n    participant Cache\n    participant AuthService\nend\nbox blue BusinessServices\n    participant AccountsService\n    participant TransactionServices\nend\n\nMobileapp -\u0026gt;\u0026gt; Firewall : get accounts and transactions\nactivate Mobileapp\nactivate Firewall\nFirewall -\u0026gt;\u0026gt; Gateway : filtered requests\nactivate Gateway\nGateway -\u0026gt;\u0026gt; Cache : if request cached\nactivate Cache\nCache --\u0026gt;\u0026gt; Gateway : cached request\ndeactivate Cache\nGateway -\u0026gt;\u0026gt; AuthService: authentication\nactivate AuthService\nAuthService --\u0026gt;\u0026gt; Gateway : token\ndeactivate AuthService\nGateway -\u0026gt;\u0026gt;AccountsService : get accounts\nactivate AccountsService\nAccountsService -\u0026gt;\u0026gt; TransactionServices : get transactions\nactivate TransactionServices\nTransactionServices --\u0026gt;\u0026gt; AccountsService : Transactions\ndeactivate TransactionServices\nAccountsService --\u0026gt;\u0026gt; Gateway : Accounts and Transactions\ndeactivate AccountsService\nGateway --\u0026gt;\u0026gt; Firewall : Accounts and Transactions\ndeactivate Gateway\nFirewall --\u0026gt;\u0026gt; Mobileapp : Accounts and Transactions\ndeactivate Mobileapp\ndeactivate Firewall\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"auto-numbering\"\u003eAuto numbering\u003c/h2\u003e\n\u003cp\u003eWith the diagram we often need to provide a textual description for the diagram, where we would like to talk about the different invocations.\nLet\u0026rsquo;s add numbering to all the calls\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esequenceDiagram\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eautonumber\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox purple FrontEnd\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Mobileapp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox green LandingZone\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Firewall\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Gateway\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Cache\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant AuthService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox blue BusinessServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant AccountsService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant TransactionServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eMobileapp -\u0026gt;\u0026gt; Firewall : get accounts and transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate Mobileapp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate Firewall\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFirewall -\u0026gt;\u0026gt; Gateway : filtered requests\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate Gateway\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt; Cache : if request cached\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate Cache\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eCache --\u0026gt;\u0026gt; Gateway : cached request\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate Cache\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt; AuthService: authentication\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate AuthService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAuthService --\u0026gt;\u0026gt; Gateway : token\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate AuthService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt;AccountsService : get accounts\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate AccountsService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAccountsService -\u0026gt;\u0026gt; TransactionServices : get transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate TransactionServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eTransactionServices --\u0026gt;\u0026gt; AccountsService : Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate TransactionServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAccountsService --\u0026gt;\u0026gt; Gateway : Accounts and Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate AccountsService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway --\u0026gt;\u0026gt; Firewall : Accounts and Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate Gateway\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFirewall --\u0026gt;\u0026gt; Mobileapp : Accounts and Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate Mobileapp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate Firewall\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003esequenceDiagram\nautonumber\nbox purple FrontEnd\n    participant Mobileapp\nend\nbox green LandingZone\n    participant Firewall\n    participant Gateway\n    participant Cache\n    participant AuthService\nend\nbox blue BusinessServices\n    participant AccountsService\n    participant TransactionServices\nend\n\nMobileapp -\u0026gt;\u0026gt; Firewall : get accounts and transactions\nactivate Mobileapp\nactivate Firewall\nFirewall -\u0026gt;\u0026gt; Gateway : filtered requests\nactivate Gateway\nGateway -\u0026gt;\u0026gt; Cache : if request cached\nactivate Cache\nCache --\u0026gt;\u0026gt; Gateway : cached request\ndeactivate Cache\nGateway -\u0026gt;\u0026gt; AuthService: authentication\nactivate AuthService\nAuthService --\u0026gt;\u0026gt; Gateway : token\ndeactivate AuthService\nGateway -\u0026gt;\u0026gt;AccountsService : get accounts\nactivate AccountsService\nAccountsService -\u0026gt;\u0026gt; TransactionServices : get transactions\nactivate TransactionServices\nTransactionServices --\u0026gt;\u0026gt; AccountsService : Transactions\ndeactivate TransactionServices\nAccountsService --\u0026gt;\u0026gt; Gateway : Accounts and Transactions\ndeactivate AccountsService\nGateway --\u0026gt;\u0026gt; Firewall : Accounts and Transactions\ndeactivate Gateway\nFirewall --\u0026gt;\u0026gt; Mobileapp : Accounts and Transactions\ndeactivate Mobileapp\ndeactivate Firewall\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"notes\"\u003eNotes\u003c/h2\u003e\n\u003cp\u003eSometimes we also need to represent some additional notes in the diagram :\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esequenceDiagram\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eautonumber\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox purple FrontEnd\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Mobileapp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox green LandingZone\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Firewall\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Gateway\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant Cache\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant AuthService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebox blue BusinessServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant AccountsService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    participant TransactionServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eend\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eMobileapp -\u0026gt;\u0026gt; Firewall : get accounts and transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate Mobileapp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate Firewall\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFirewall -\u0026gt;\u0026gt; Gateway : filtered requests\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate Gateway\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt; Cache : if request cached\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate Cache\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eCache --\u0026gt;\u0026gt; Gateway : cached request\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate Cache\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt; AuthService: authentication\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate AuthService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAuthService --\u0026gt;\u0026gt; Gateway : token\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate AuthService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway -\u0026gt;\u0026gt;AccountsService : get accounts\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate AccountsService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAccountsService -\u0026gt;\u0026gt; TransactionServices : get transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eactivate TransactionServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003enote right of TransactionServices : This is a slow call, \u0026lt;br\u0026gt; increase timeout for this call\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eTransactionServices --\u0026gt;\u0026gt; AccountsService : Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate TransactionServices\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eAccountsService --\u0026gt;\u0026gt; Gateway : Accounts and Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate AccountsService\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eGateway --\u0026gt;\u0026gt; Firewall : Accounts and Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate Gateway\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eFirewall --\u0026gt;\u0026gt; Mobileapp : Accounts and Transactions\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate Mobileapp\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edeactivate Firewall\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003esequenceDiagram\nautonumber\nbox purple FrontEnd\n    participant Mobileapp\nend\nbox green LandingZone\n    participant Firewall\n    participant Gateway\n    participant Cache\n    participant AuthService\nend\nbox blue BusinessServices\n    participant AccountsService\n    participant TransactionServices\nend\n\nMobileapp -\u0026gt;\u0026gt; Firewall : get accounts and transactions\nactivate Mobileapp\nactivate Firewall\nFirewall -\u0026gt;\u0026gt; Gateway : filtered requests\nactivate Gateway\nGateway -\u0026gt;\u0026gt; Cache : if request cached\nactivate Cache\nCache --\u0026gt;\u0026gt; Gateway : cached request\ndeactivate Cache\nGateway -\u0026gt;\u0026gt; AuthService: authentication\nactivate AuthService\nAuthService --\u0026gt;\u0026gt; Gateway : token\ndeactivate AuthService\nGateway -\u0026gt;\u0026gt;AccountsService : get accounts\nactivate AccountsService\nAccountsService -\u0026gt;\u0026gt; TransactionServices : get transactions\nactivate TransactionServices\nnote right of TransactionServices : This is a slow call, \u0026lt;br\u0026gt; increase timeout for this call\nTransactionServices --\u0026gt;\u0026gt; AccountsService : Transactions\ndeactivate TransactionServices\nAccountsService --\u0026gt;\u0026gt; Gateway : Accounts and Transactions\ndeactivate AccountsService\nGateway --\u0026gt;\u0026gt; Firewall : Accounts and Transactions\ndeactivate Gateway\nFirewall --\u0026gt;\u0026gt; Mobileapp : Accounts and Transactions\ndeactivate Mobileapp\ndeactivate Firewall\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eMermaid offers many more tools for representing the sequence diagram like if-else conditions, loops, breaks etc.\u003c/p\u003e\n\u003cp\u003eI feel much more productive while using mermaid over other tools because now I don\u0026rsquo;t waste my time correcting the lines, adjusting the positions of the participants etc.\u003c/p\u003e\n\u003cp\u003eAlthough mermaid has it\u0026rsquo;s own limitations e.g. it comes with limited shapes, and colouring and styling options.\u003c/p\u003e\n\u003cp\u003eI hope to see more evolutions happening in mermaid js .\nYou can read more about Mermaid sequence diagram on the following link : \u003ca href=\"https://mermaid.js.org/syntax/sequenceDiagram.html\"\u003ehttps://mermaid.js.org/syntax/sequenceDiagram.html\u003c/a\u003e\u003c/p\u003e\n","description":"Crafting software solutions with visual precision is key to effective communication within a team. Discover the power of mermaid.js, a seamless tool for creating sequence diagrams using a specific DSL in markdown format. Simplify your workflow, enhance collaboration, and boost efficiency as you delve into the world of sequence diagram creation with mermaid.js.","image":"/images/blogs/2024/apr/sequence-diag-mermaid/banner.png","permalink":"http://localhost:1313/blogs/2024/apr/sequence-diag-mermaid/","title":"Sequence Diagrams using Mermaid"},{"content":"\u003cp\u003eI recently attended an XKE (Xebia\u0026rsquo;s Knowledge Exchange) session delivered by Mr. Chandan Kumar and Mr. Himanshu Jain.\nIn this session they talked about the Data Reconciliation Patterns in an Event driven AWS Ecosystem, and I am presenting here my learnings from the session.\u003c/p\u003e\n\u003cp\u003eData reconciliation is vital to ensure that data across different systems or components remains consistent and in sync. In the realm of application development, multiple systems work together to deliver specific functionalities. However, due to the complexity involved, system failures mid-transaction can lead to data inconsistencies. As vigilant system architects, it is crucial to design robust systems capable of recovering from such data irregularities. Data reconciliation plays a key role in rectifying data inconsistencies, automating error resolutions, and allowing for manual interventions when needed.\u003c/p\u003e\n\u003cp\u003eEvent-driven architecture in AWS involves using services like Amazon S3, Amazon Kinesis, AWS Lambda, Amazon SQS, and Amazon SNS to build scalable and resilient applications that respond to events in real-time.\u003c/p\u003e\n\u003cp\u003eThe most errors related to data reconciliation happens when the data flows from one system to another. To prevent data loss it is important to capture the information before being sent over the network.\u003c/p\u003e\n\u003ch1 id=\"tldr\"\u003eTL;DR\u003c/h1\u003e\n\u003col\u003e\n\u003cli\u003eEvent Sourcing\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eConcept\u003c/strong\u003e: Treats system changes as individual events or actions.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eProcess\u003c/strong\u003e: Records every event that alters the system\u0026rsquo;s state.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eFunction\u003c/strong\u003e: Allows the system to be reconstructed accurately by replaying the recorded events in sequence.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eChange Data Capture\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eConcept\u003c/strong\u003e: Involves capturing and tracking changes made to data in a source system.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eProcess\u003c/strong\u003e: Captures data changes and creates a chronological chain of events.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eFunction\u003c/strong\u003e: Enables the recreation of the system by leveraging the captured changes in the correct sequence.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eIdempotent Consumers\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003ePrinciple\u003c/strong\u003e: Ensures that repeating the same request multiple times has the same effect as doing it just once.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eProcess\u003c/strong\u003e: Handles requests in a way that duplicates do not cause additional changes.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eFunction\u003c/strong\u003e: Guarantees that processing the same request multiple times does not lead to duplicate or incorrect outcomes.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003eCompensation Events\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eConcept\u003c/strong\u003e: Designed to handle failures by reverting or correcting changes made by previous events.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eProcess\u003c/strong\u003e: Rollback events to rectify errors or failures that occur during data processing.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eFunction\u003c/strong\u003e: Manages transaction failures by undoing or compensating for incorrect data changes, ensuring data integrity and consistency.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003eflowchart TD\n    EventSource --\u0026gt; EventProcessor\n    EventProcessor --\u0026gt; DataStore\n    DataStore --\u0026gt; DataReconciliationComponents\n    EventSource --\u0026gt; DataReconciliationComponents\n    EventProcessor --\u0026gt; DataReconciliationComponents\n\u003c/code\u003e\u003c/pre\u003e\u003ch2 id=\"event-sourcing\"\u003eEvent Sourcing\u003c/h2\u003e\n\u003cp\u003eEvent sourcing stands out as a robust pattern in the realm of data reconciliation, offering a structured approach to capturing state changes within an application. By recording every alteration to the application\u0026rsquo;s state as a series of events, event sourcing provides a comprehensive and chronological log of all transactions and updates.\u003c/p\u003e\n\u003ch3 id=\"key-benefits-of-event-sourcing\"\u003eKey Benefits of Event Sourcing:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eReliable Log of State Changes\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eReplayability for Accurate State Reconstruction\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eFacilitation of Data Consistency\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eEnhanced Auditing and Traceability\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"change-data-capture\"\u003eChange Data Capture\u003c/h2\u003e\n\u003cp\u003eChange Data Capture (CDC) plays a pivotal role in maintaining data consistency and integrity by capturing and propagating changes made to data in a source database to other systems in real-time. This process enables organizations to synchronize data updates seamlessly across multiple systems, ensuring that all systems have access to the most up-to-date information.\u003c/p\u003e\n\u003ch3 id=\"key-aspects-of-change-data-capture\"\u003eKey Aspects of Change Data Capture:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eReal-Time Data Propagation\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eMinimized Data Latency\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eEfficient Data Integration\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eAWS DMS for Change Data Capture\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"idempotent-consumers\"\u003eIdempotent Consumers\u003c/h2\u003e\n\u003cp\u003eIdempotent consumers play a crucial role in data processing workflows by ensuring that processing the same event multiple times does not result in duplicate or incorrect data. This concept is particularly important in distributed systems where events may be processed multiple times due to network issues, system failures, or retries, potentially leading to data inconsistencies if not handled correctly.\u003c/p\u003e\n\u003ch3 id=\"key-features-of-idempotent-consumers\"\u003eKey Features of Idempotent Consumers\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eData Consistency\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eError Handling\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eScalability\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eData Reconciliation\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"compensation-events\"\u003eCompensation Events\u003c/h2\u003e\n\u003cp\u003eCompensation events serve as a critical mechanism in event-driven systems to address failures and inconsistencies that may arise during data processing. These events are designed to revert or correct the changes made by preceding events, ensuring data integrity and consistency even in the face of unexpected errors or disruptions.\u003c/p\u003e\n\u003ch3 id=\"key-aspects-of-compensation-events\"\u003eKey Aspects of Compensation Events:\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eError Handling\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eData Reversal\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eData Correction\u003c/strong\u003e\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eTransaction Rollback\u003c/strong\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"benefits-of-compensation-events\"\u003eBenefits of Compensation Events:\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003eData Integrity Assurance\u003c/strong\u003e: Compensation events safeguard data integrity by providing a mechanism to rectify errors and inconsistencies in data processing workflows.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eFault Tolerance\u003c/strong\u003e: By enabling systems to recover from failures and errors, compensation events enhance the fault tolerance of event-driven architectures and ensure the reliability of data processing operations.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eConsistency Maintenance\u003c/strong\u003e: Compensation events help maintain data consistency across systems by addressing discrepancies and ensuring that data remains accurate and up to date.\u003c/p\u003e\n","description":"Discover essential data reconciliation patterns in AWS for maintaining data integrity and consistency. Explore event sourcing, change data capture, idempotent consumers, and compensation events in this insightful blog post. Optimize your systems for seamless data processing and reliability in the event-driven AWS ecosystem.","image":"/images/blogs/2024/mar/data-recon-aws/banner.png","permalink":"http://localhost:1313/blogs/2024/mar/data-recon-aws/","title":"Data Reconciliation Patterns in an Event driven AWS Ecosystem"},{"content":"\u003cp\u003eThe architecture of a building plays a critical role in its usability and longevity. Similarly, the architecture of a software application is vital for ensuring scalability, maintainability, and overall system success.\nIn this blog, we will delve into different architectural approaches that can be employed to achieve these goals:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eLayering\u003c/li\u003e\n\u003cli\u003eMicroservices\u003c/li\u003e\n\u003cli\u003eEvent driven architecture\u003c/li\u003e\n\u003cli\u003eDomain driven design\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"layering-defining-clear-responsibilities\"\u003eLayering: Defining Clear Responsibilities\u003c/h2\u003e\n\u003cp\u003eLayering is a fundamental architectural concept that involves segregating responsibilities into different layers. By creating distinct layers, we can clearly define the responsibilities of each layer, improving security and protecting downstream layers from potential attacks.\u003c/p\u003e\n\u003cp\u003eIn the context of network architecture, layering plays a crucial role in ensuring the secure and efficient flow of data. Let\u0026rsquo;s consider an example where layering is applied to a network infrastructure:\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003egraph LR\n    A[Firewall layer] --\u0026gt; B[Gateway]\n    B --\u0026gt; C[Load balancers]\n    C --\u0026gt; D[Session management layer]\n    D --\u0026gt; E[Application layer]\n    E --\u0026gt; F[Database layer]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIn this diagram, we have different layers that handle specific tasks within the network infrastructure. The Firewall layer acts as the first line of defense, protecting the network from unauthorized access. The Gateway layer manages the entry and exit points of the network, ensuring secure and controlled communication. The Load balancers layer distributes incoming network traffic across multiple servers, enhancing performance and reliability. The Session management layer handles user sessions and authentication, ensuring secure and seamless user experiences. The Application layer contains the core business logic and functionality of the system. Finally, the Database layer stores and manages the data required by the application.\u003c/p\u003e\n\u003cp\u003eHowever, it\u0026rsquo;s important to strike a balance when implementing layering. While layering provides clear separation of responsibilities, an excessive number of layers can introduce performance issues and integration complexities.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003egraph LR\n    A[Firewall layer] --\u0026gt; B[Gateway]\n    B --\u0026gt; C[Load balancers]\n    C --\u0026gt; D[Session management layer]\n    D --\u0026gt; E[Application 1 layer]\n    \n    E --\u0026gt; F[Database layer]\n    E --\u0026gt; G[Application 2 layer]\n    G --\u0026gt; H[Application 3 layer]\n    H --\u0026gt; I[Third party system]\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIn this extended diagram, we see an example where the Application layer is further divided into multiple sub-layers, each responsible for different applications or integrations. While this level of granularity can provide enhanced modularity and flexibility, it\u0026rsquo;s essential to carefully consider the trade-offs. Adding more layers can increase complexity, maintenance efforts, and potential points of failure.\u003c/p\u003e\n\u003cp\u003eBy thoughtfully designing and implementing layering in a network or software system, we can achieve clear separation of responsibilities, improved security, and better scalability. It\u0026rsquo;s crucial to strike the right balance and consider the specific needs and constraints of the system to ensure optimal performance and maintainability.\u003c/p\u003e\n\u003ch2 id=\"microservices-architecture-scalability-and-challenges\"\u003eMicroservices Architecture: Scalability and Challenges\u003c/h2\u003e\n\u003cp\u003eMicroservices architecture has gained significant popularity due to its ability to provide a scalable and flexible solution for modern software systems. It offers a way to break down complex applications into smaller, independent services that can be developed, deployed, and scaled independently. This architectural approach promotes component-level independence and technology diversity, allowing teams to work on different services simultaneously without being tightly coupled to a monolithic system.\u003c/p\u003e\n\u003cp\u003eThe benefits of microservices architecture are evident in its ability to scale individual services based on demand, enabling organizations to handle varying workloads efficiently. This scalability allows teams to allocate resources to specific services without affecting the entire system. Moreover, microservices architecture promotes technology independence, allowing teams to choose the most suitable technology stack for each service, based on its specific requirements.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003egraph LR\n    A[Customer Service] -- HTTP/API --\u0026gt; B[Account Service]\n    A -- Message Queue --\u0026gt; C[Payment Service]\n    C -- Database --\u0026gt; D[Transaction Service]\n    E[Client/User Interface] -- HTTP/API --\u0026gt; A\n    G[Authentication Service] -- HTTP/API --\u0026gt; A\n    G -- HTTP/API --\u0026gt; B\n    G -- HTTP/API --\u0026gt; C\n    G -- HTTP/API --\u0026gt; D\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eHowever, managing multiple microservices and their versions can become challenging, leading to what is commonly referred to as \u0026ldquo;microservice hell.\u0026rdquo; With numerous services to handle, organizations may face difficulties in monitoring, deployment, and ensuring consistent behavior across services. Proper governance and management practices are crucial to mitigate these challenges.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003egraph LR\n    A[Customer Service] -- HTTP/API --\u0026gt; B[Account Service]\n    A -- Message Queue --\u0026gt; C[Payment Service]\n    B -- Message Queue --\u0026gt; C\n    C -- Database --\u0026gt; D[Transaction Service]\n    E[Client/User Interface] -- HTTP/API --\u0026gt; A\n    F[Notification Service] -- Message Queue --\u0026gt; A\n    F -- Message Queue --\u0026gt; B\n    F -- Message Queue --\u0026gt; C\n    F -- Message Queue --\u0026gt; D\n    G[Authentication Service] -- HTTP/API --\u0026gt; A\n    G -- HTTP/API --\u0026gt; B\n    G -- HTTP/API --\u0026gt; C\n    G -- HTTP/API --\u0026gt; D\n    H[Loan Service] -- HTTP/API --\u0026gt; B\n    H -- Message Queue --\u0026gt; C\n    H -- Message Queue --\u0026gt; D\n    I[Credit Service] -- HTTP/API --\u0026gt; A\n    I -- HTTP/API --\u0026gt; B\n    I -- Message Queue --\u0026gt; C\n    I -- Message Queue --\u0026gt; D\n    J[Investment Service] -- HTTP/API --\u0026gt; B\n    J -- Message Queue --\u0026gt; C\n    J -- Message Queue --\u0026gt; D\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eTo address the complexities of managing microservices, organizations can implement effective governance strategies. This includes establishing clear guidelines for service design, communication protocols, and versioning practices. Additionally, adopting robust monitoring and observability tools can help track the performance and behavior of individual services, ensuring their reliability and availability.\u003c/p\u003e\n\u003cp\u003eService orchestration and coordination become critical in a microservices environment. Implementing service discovery mechanisms, load balancing strategies, and fault tolerance techniques can help manage the interaction and coordination between services effectively. Employing containerization technologies like Docker and container orchestration platforms like Kubernetes can simplify deployment and management of microservices.\u003c/p\u003e\n\u003cp\u003eIn conclusion, microservices architecture offers a scalable and flexible solution for modern software systems. It allows organizations to develop and scale services independently, providing technology independence and agility. However, managing multiple microservices and their versions can pose challenges. By implementing proper governance, adopting effective management practices, and leveraging orchestration and monitoring tools, organizations can successfully navigate the complexities of microservices architecture and harness its benefits.\u003c/p\u003e\n\u003ch2 id=\"event-driven-architecture-achieving-loose-coupling-and-asynchronous-processing\"\u003eEvent-Driven Architecture: Achieving Loose Coupling and Asynchronous Processing\u003c/h2\u003e\n\u003cp\u003eEvent-Driven Architecture (EDA) is an architectural style that promotes loose coupling and asynchronous processing in software systems. It offers a way to design systems where components communicate and interact primarily through events. This approach provides several benefits, including improved perceived performance, scalability, and flexibility.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003egraph LR\n    A[Customer Service] -- Customer Created --\u0026gt; B[Event Bus]\n    C[Account Service] -- Account Opened --\u0026gt; B\n    D[Payment Service] -- Payment Made --\u0026gt; B\n    E[Transaction Service] -- Transaction Completed --\u0026gt; B\n    F[Notification Service] -- Event Subscriptions --\u0026gt; B\n    G[Analytics Service] -- Event Subscriptions --\u0026gt; B\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eOne of the key advantages of EDA is its ability to achieve loose coupling between components. In traditional architectures, components are tightly coupled, meaning they have direct dependencies on each other. In contrast, EDA allows components to communicate indirectly through events. This loose coupling enables greater flexibility, as components can evolve independently without affecting the entire system. It also promotes reusability, as components can be easily replaced or added without disrupting the existing system.\u003c/p\u003e\n\u003cp\u003eAsynchronous processing is another significant advantage of EDA. By using events, components can operate independently and asynchronously. When an event occurs, it is published to a message broker or event bus, and interested components can subscribe to these events. This decoupled nature allows components to process events at their own pace, improving responsiveness and scalability. As a result, EDA is well-suited for systems that require real-time or near-real-time processing.\u003c/p\u003e\n\u003cp\u003eEDA is commonly used for logging and auditing purposes. Events can be generated and published to capture important system activities, such as user actions or system events. These events can then be consumed by logging or auditing services, ensuring a comprehensive record of system activities. By using events for logging and auditing, system performance is not compromised, as these activities can be performed asynchronously without impacting the main processing flow.\u003c/p\u003e\n\u003cp\u003eHowever, it\u0026rsquo;s important to consider the potential downsides of event-driven architecture. When an excessive number of events are used, it can become challenging to understand the flow of control within the system. The asynchronous nature of event processing can make it difficult to trace the sequence of events and the resulting system behavior. Therefore, careful consideration should be given to strike the right balance and avoid excessive complexity in event-driven systems.\u003c/p\u003e\n\u003cp\u003eIn conclusion, event-driven architecture offers several advantages, including loose coupling, asynchronous processing, and improved perceived performance. It enables systems to scale, evolve, and handle real-time processing efficiently. However, it\u0026rsquo;s crucial to carefully design and manage the flow of events to maintain clarity and avoid excessive complexity. By leveraging the benefits of event-driven architecture while considering its limitations, organizations can build flexible and scalable systems that meet their business needs.\u003c/p\u003e\n\u003ch2 id=\"domain-driven-design-ddd-simplifying-system-components-and-enabling-vendor-flexibility\"\u003eDomain-Driven Design (DDD): Simplifying System Components and Enabling Vendor Flexibility\u003c/h2\u003e\n\u003cp\u003eDomain-Driven Design (DDD) is an approach that focuses on aligning software systems with the business domain they are built for. It aims to create a shared understanding and language between domain experts and software developers, resulting in systems that are more maintainable, extensible, and closely aligned with business requirements.\u003c/p\u003e\n\u003cp\u003eOne of the key benefits of DDD is that it helps in keeping the system components\u0026rsquo; names easy to understand. By placing emphasis on the core business domain, DDD encourages the use of domain-specific terminology and concepts in naming system components. This approach makes the codebase more readable and easier to comprehend for both developers and domain experts. Clear and meaningful naming conventions improve collaboration, reduce ambiguity, and enhance the overall quality of the software system.\u003c/p\u003e\n\u003cp\u003eFurthermore, DDD emphasizes the importance of creating a vocabulary that reflects the business requirements. By establishing a ubiquitous language, DDD ensures that all stakeholders, including developers, domain experts, and users, have a shared understanding of the system\u0026rsquo;s functionality and behavior. This common language helps bridge the communication gap between technical and non-technical team members, facilitating more effective collaboration and reducing the risk of misunderstandings.\u003c/p\u003e\n\u003cp\u003eAnother advantage of DDD is its ability to facilitate vendor flexibility. By creating well-defined boundaries and abstractions within the system, DDD enables the replacement of vendors or external services with minimal impact on the core domain. The domain model acts as a shield, encapsulating the complexities of external dependencies and providing a stable interface for interaction. This abstraction layer allows for easier integration of new vendors or services, reducing the coupling between the system and external dependencies.\u003c/p\u003e\n\u003cp\u003eDDD also promotes the creation of abstractions in the layers of the system. By identifying and separating the core domain from infrastructure concerns, such as persistence or user interface, DDD allows for better maintainability and testability. The use of domain-specific abstractions helps in isolating and managing complexities, making the system more adaptable to changes and reducing the risk of technical debt.\u003c/p\u003e\n\u003cp\u003eDDD is beautifully explained in this stackoverflow answer \u003ca href=\"https://stackoverflow.com/questions/1222392/what-is-domain-driven-design-ddd/1222488#1222488\"\u003ehttps://stackoverflow.com/questions/1222392/what-is-domain-driven-design-ddd/1222488#1222488\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eIn summary, how we design software is super important for how well it works and how long it lasts. We talked about a few ways to design software: splitting responsibilities into layers, using smaller independent services (like building blocks) called microservices, making systems that react to events, and designing software that matches the real world (domain-driven design). Each way has its own good parts and challenges. It\u0026rsquo;s like choosing tools for a job – you need to pick the right one for the task. Understanding these ways of designing software helps us make systems that can change and grow along with the needs of users and businesses. So, it\u0026rsquo;s all about making smart choices, managing things well, and always improving to keep our software strong, flexible, and useful for the long haul.\u003c/p\u003e\n\u003cp\u003eFeel free to leave your comments, questions, or suggestions—I would love to hear from you! Let\u0026rsquo;s continue the conversation and explore the exciting world of software architecture together. Happy reading!\u003c/p\u003e\n","description":"Discover how architectural approaches like layering, microservices, event-driven architecture, and domain-driven design shape modern software systems for scalability, maintainability, and success. Learn about their benefits, challenges, and real-world applications, and gain insights into striking the right balance for optimal system performance and longevity.","image":"/images/blogs/2024/mar/architectural-patterns/banner.png","permalink":"http://localhost:1313/blogs/2024/mar/architectural-patterns/","title":"Approaches to Software Architecture"},{"content":"\u003cp\u003eConfiguration management is a crucial yet often overlooked aspect of working with microservices. In a microservices environment, managing various configurations, including those related to client applications, business processes, and technical settings, can become complex. This complexity is further amplified when dealing with multiple environments such as development, QA, and production, each requiring different configurations.\u003c/p\u003e\n\u003cp\u003eWhile organizations typically maintain version control for their codebase, the versioning of configurations is sometimes neglected. In this article, we will explore how we can create a configuration management microservice using Spring Cloud Config, a powerful solution provided by the Spring framework. We will specifically focus on its applicability in the FinTech industry.\u003c/p\u003e\n\u003ch2 id=\"the-use-case\"\u003eThe Use Case\u003c/h2\u003e\n\u003cp\u003eOur configuration service should serve as a centralized hub for managing business configuration changes, encompassing server-side and client-side configurations across different environments. The key requirements for our configuration management microservice are as follows:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSupport for server-side and client-side configurations.\u003c/li\u003e\n\u003cli\u003eFlexibility to handle configurations for different environments (e.g., development, testing, production).\u003c/li\u003e\n\u003cli\u003eEasy and consistent configuration changes that are eventually consistent.\u003c/li\u003e\n\u003cli\u003eEfficient retrieval of configurations to ensure quick response times.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eTo meet these requirements, we will explore the capabilities of Spring Cloud Config and its practical implementation in a FinTech context.\u003c/p\u003e\n\u003ch2 id=\"getting-started-with-spring-cloud-config\"\u003eGetting Started with Spring Cloud Config\u003c/h2\u003e\n\u003cp\u003eTo demonstrate the power of Spring Cloud Config, I have created a GitHub repository that contains various configuration examples. You can find the codebase at \u003ca href=\"https://github.com/mohitkanwar/spring-cloud-tutorial/tree/remote-config\"\u003ehttps://github.com/mohitkanwar/spring-cloud-tutorial\u003c/a\u003e (specifically the remote-config branch). This repository includes multiple services, but we will primarily focus on the config service for the purpose of this article.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eCreate a git repo to store configurations\u003c/li\u003e\n\u003cli\u003eStart Config Server\u003c/li\u003e\n\u003cli\u003eCreate configurations on clients\u003c/li\u003e\n\u003cli\u003eCreate a microservice that consumes configurations\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"step-1-create-a-git-repository-for-configurations\"\u003eStep 1: Create a Git Repository for Configurations\u003c/h3\u003e\n\u003cp\u003eTo achieve versioning and track changes effectively, we will utilize Git as the version management system for our configurations. Start by creating a Git repository that will store all your configurations. You can organize the repository using branches to represent different environments. For example, you can have separate branches for development, testing, and production configurations. For example, refer to the git repo at \u003ca href=\"config-server-git-repo\"\u003ehttps://github.com/mohitkanwar/config-server-git-repo\u003c/a\u003e. This is a different git repository.\nOur running microservice will be consuming data (the configurations) from this repository.\u003c/p\u003e\n\u003cp\u003eConsider the following example folder structure for your repository:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-txt\" data-lang=\"txt\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003erepo\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  ├── apps\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  │   └── modules\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  │       ├── login.json\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  │       ├── dashboard.json\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  │       └── transaction.json\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  └── application.yml\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  └── hello-world.yml\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eIn the above example structure, I have \u003ccode\u003eapplication.yml\u003c/code\u003e That contains the global configurations.\nWe can define more files e.g. I have created a file called \u003ccode\u003ehello-world.yml\u003c/code\u003e for my microservice called \u003ccode\u003ehello-world\u003c/code\u003e.\nAlthough, not mandatory, it is easier if we follow a naming convention for the files that allows us to remember and find the right configurations.\u003c/p\u003e\n\u003cp\u003eFor other client specific configurations, we can define a custom path as well, e.g. \u003ccode\u003e/apps/modules/login.json\u003c/code\u003e contains configurations for login module.\u003c/p\u003e\n\u003cp\u003eAs you have observed, we can have any format for defining configurations, but the popular ones are :\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e.properties\u003c/li\u003e\n\u003cli\u003e.yml\u003c/li\u003e\n\u003cli\u003e.json\u003c/li\u003e\n\u003cli\u003e.xml\u003c/li\u003e\n\u003cli\u003e.toml\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOnce the structure is defined, we need to create the different branches catering to different environments.\nEach branch (e.g., dev, uat, prod) can contain configurations specific to that environment. This structure allows you to manage configurations efficiently across various environments.\u003c/p\u003e\n\u003ch3 id=\"step-2-create-a-server-for-reading-configurations\"\u003eStep 2: Create a Server for Reading Configurations\u003c/h3\u003e\n\u003cp\u003eNext, we need to create a microservice that acts as the configuration server.\nAn example service \u003ccode\u003ehello-world\u003c/code\u003e is available in the code.\u003c/p\u003e\n\u003cp\u003eThis service was created by creating a new microservice using Spring Initializr. Following dependency was added to this project\u0026rsquo;s pom.xml file:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-xml\" data-lang=\"xml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e\u0026lt;groupId\u0026gt;\u003c/span\u003eorg.springframework.cloud\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/groupId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003e\u0026lt;artifactId\u0026gt;\u003c/span\u003espring-cloud-config-server\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/artifactId\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e\u0026lt;/dependency\u0026gt;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTo enable the microservice as a configuration server, annotate your main application class with the following annotation\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@EnableConfigServer\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis annotation, along with the added dependency, configures the microservice as a Spring Cloud Config server.\u003c/p\u003e\n\u003cp\u003eNow, we need to tell this microservice to read the configurations from a remote location instead\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-yml\" data-lang=\"yml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003espring\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003ecloud\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#f92672\"\u003econfig\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003euri\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehttp://localhost:8888\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003ename\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003ehello-world\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e      \u003cspan style=\"color:#f92672\"\u003elabel\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003eprod\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003eserver\u003c/span\u003e:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003eport\u003c/span\u003e: \u003cspan style=\"color:#ae81ff\"\u003e8888\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003ccode\u003espring.cloud.config.uri\u003c/code\u003e defines the location of our configuration microservice.\n\u003ccode\u003espring.cloud.config.name\u003c/code\u003e defines the file from which the configuration needs to be picked up. It is not required to provide the extension.\n\u003ccode\u003espring.cloud.config.label\u003c/code\u003e defines the branch for which the configurations need to be picked up.\u003c/p\u003e\n\u003cp\u003eThis configuration establishes the connection between the config server and the Git repository. You can customize the port according to your preference.\u003c/p\u003e\n\u003cp\u003eTo start the server, run the following command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003emvn spring-boot:start\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e\u003cstrong\u003eExperiments\u003c/strong\u003e\nConsume the configurations like we used to consume them earlier : e.g.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003e@Value\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;${hello.world.name:hardcoded}\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e String name;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eTry changing the values label for different environments, the microservice will be able to pick up the specific properties.\u003c/p\u003e\n\u003ch3 id=\"step-3-consuming-configurations-in-client-applications\"\u003eStep 3: Consuming Configurations in Client Applications\u003c/h3\u003e\n\u003cp\u003eClient applications can consume configurations from the config server by making HTTP requests to the server\u0026rsquo;s endpoint. The URL pattern for accessing configurations is as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehttp\u003cspan style=\"color:#f92672\"\u003e(\u003c/span\u003es\u003cspan style=\"color:#f92672\"\u003e)\u003c/span\u003e://\u0026lt;servername or ipaddress\u0026gt;:\u0026lt;port\u0026gt;/\u0026lt;config-server-name\u0026gt;/\u0026lt;profileName\u0026gt;/\u0026lt;label\u0026gt;/\u0026lt;path\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eFor example, to fetch the config.json file for the dashboard module, you can use the following command:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecurl --location \u003cspan style=\"color:#e6db74\"\u003e\u0026#39;http://localhost:8888/config-server/main/prod/modules/dashboard/config.json\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThe url can be configured in the client applications to manage the releases.\u003c/p\u003e\n\u003ch2 id=\"more-steps\"\u003eMore Steps\u003c/h2\u003e\n\u003cp\u003eThere is more to configurations than has been explained in this blog. You may like to explore\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ehow to cache configurations on microservices for better performance.\u003c/li\u003e\n\u003cli\u003eAdding validations while committing the config files, so that incorrect configurations cannot be committed.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eConclusion\nIn this blog post, we explored the importance of configuration management in a microservices environment and discussed how to create a configuration management microservice using Spring Cloud Config. We learned how to set up a Git repository to store configurations, create a configuration server, and consume configurations in both client applications and microservices.\u003c/p\u003e\n\u003cp\u003eBy effectively managing configurations, you can ensure consistency across your microservices architecture, simplify the deployment process, and improve the scalability and maintainability of your applications.\u003c/p\u003e\n\u003cp\u003eFeel free to explore the provided GitHub repository for more examples and hands-on experience with Spring Cloud Config. Happy configuring!\u003c/p\u003e\n","description":"As the microservices environment grows, managing the configurations across becomes difficult. Let's work towards a sample application that serves configurations.","image":"/images/blogs/2024/mar/configuration-management-microservices/banner.png","permalink":"http://localhost:1313/blogs/2024/mar/configuration-management-microservices/","title":"Configuration Management Microservice"},{"content":"\u003ch1 id=\"application-security-verification-standards\"\u003eApplication Security Verification Standards\u003c/h1\u003e\n\u003cp\u003eEnsuring the security of an application is a complex task. To simplify this process, OWASP (Open Web Application Security Project) has developed \u003ccite\u003ea standardized approach\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/cite\u003e aimed at gauging and enhancing application security. Application Security Verification Standards a.k.a ASVS framework not only assists in evaluating the security posture of an application but also empowers development teams to build robust and secure software.\u003c/p\u003e\n\u003cp\u003eConsider a scenario where a fintech company is developing a new banking application. By incorporating OWASP\u0026rsquo;s recommendations into their development process, they can systematically identify and address security weaknesses, safeguard sensitive financial information and bolster customer trust.\u003c/p\u003e\n\u003ch1 id=\"security-architecture\"\u003eSecurity Architecture\u003c/h1\u003e\n\u003cp\u003eFrom security point of view, we need to take care of the following aspects\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAvailability,\u003c/li\u003e\n\u003cli\u003eConfidentiality\u003c/li\u003e\n\u003cli\u003eIntegrity\u003c/li\u003e\n\u003cli\u003eNon-repudiation\u003c/li\u003e\n\u003cli\u003ePrivacy\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"availability\"\u003eAvailability\u003c/h2\u003e\n\u003cp\u003eThe information and services must be readily available as anticipated. Security considerations in this context must address issues such as Denial-of-Service (DoS) or, in the modern world, Distributed-Denial-of-Service (DDoS) attacks. In such instances, malicious entities inundate servers with a vast number of requests, thereby monopolizing server resources and impeding access for legitimate users.\u003c/p\u003e\n\u003cp\u003eIn my role as a security architect, it is imperative to strategize for disaster recovery in the event of such occurrences. This necessitates ensuring the implementation of regular backups and recovery scripts.\u003c/p\u003e\n\u003ch2 id=\"confidentiality\"\u003eConfidentiality\u003c/h2\u003e\n\u003cp\u003eInformation that should not be disclosed must be safeguarded against leaks. This encompasses internal service details, proprietary business secrets, and similar sensitive data. The unauthorized disclosure of such information could result in significant financial losses for the business and potentially provide an advantage to competitors. Therefore, as an architect, it is crucial for me to establish robust authorization and authentication mechanisms. This includes implementing multi-factor authentication and encryption protocols for data both in transit and at rest.\u003c/p\u003e\n\u003ch2 id=\"integrity\"\u003eIntegrity\u003c/h2\u003e\n\u003cp\u003eHackers may infiltrate the core systems of a business, altering data or manipulating process behaviors, thereby compromising the integrity of the system. This breach of integrity can lead to unpredictable outcomes and potentially allow hackers to propagate their own agendas. As an architect, it is incumbent upon me to implement measures such as checksums and other integrity checks to safeguard against unauthorized alterations to data by external systems.\u003c/p\u003e\n\u003ch2 id=\"non--repudiation\"\u003eNon- Repudiation\u003c/h2\u003e\n\u003cp\u003eWhen a user initiates an action, they should not be able to later deny having taken that action. As a security architect, it is my responsibility to establish robust audit trails and logging mechanisms to ensure accountability. Additionally, implementing digital signatures can help create legally binding records for the actions performed by users. These measures are essential to uphold the integrity and traceability of user actions within the system.\u003c/p\u003e\n\u003ch2 id=\"privacy\"\u003ePrivacy\u003c/h2\u003e\n\u003cp\u003eThe privacy of users must be upheld as a paramount concern. Information pertaining to one user should remain inaccessible to other users unless explicitly required for business purposes. As an architect, it is imperative to adhere to regulations such as GDPR and other privacy guidelines to safeguard user data. This entails implementing robust access controls and data protection measures to prevent unauthorized access or disclosure of sensitive information.\u003c/p\u003e\n\u003ch1 id=\"asvs-levels\"\u003eASVS Levels\u003c/h1\u003e\n\u003cp\u003eOWASP (Open Web Application Security Project) has categorized the Application Security Verification Standard (ASVS) into three levels:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eASVS Level 1: Low Assurance\u003c/li\u003e\n\u003cli\u003eASVS Level 2: Moderate Assurance\u003c/li\u003e\n\u003cli\u003eASVS Level 3: High Assurance\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eThese levels are structured to cater to various application security needs based on the sensitivity of the data and the criticality of the application.\u003c/p\u003e\n\u003cimg src=\"/images/blogs/2024/mar/Application-Security-Verification-Standard/summary.png\" alt=\"Image\" alt=\"Summary of ASVS guidelines by OWASP\" class=\"responsive-image-bounded\"\u003e\n\u003cp\u003eThe ASVS guidelines are organized into the following sections, which provide comprehensive coverage of security controls and best practices:\u003c/p\u003e\n\u003ch2 id=\"v1-architecture-design-and-threat-modelling\"\u003eV1 Architecture, Design and Threat Modelling\u003c/h2\u003e\n\u003cp\u003eSecurity should be integrated into every stage of the development lifecycle, beginning with the drafting of requirements and the architectural design phase. It is essential to thoroughly consider security measures from the project\u0026rsquo;s inception. Performing threat modeling at the outset helps identify and address potential security vulnerabilities early on, thereby preventing security issues from permeating the system as it progresses.\u003c/p\u003e\n\u003ch2 id=\"v2-authentication\"\u003eV2 Authentication\u003c/h2\u003e\n\u003cp\u003eThe foundation of security lies in user identification. Authentication is the pivotal process that verifies the identity of users logging into and accessing the system. The strength of the authentication mechanism directly correlates with the overall security of the system.\u003c/p\u003e\n\u003ch2 id=\"v3-session-management\"\u003eV3 Session Management\u003c/h2\u003e\n\u003cp\u003eFollowing user authentication, a session is initiated. It is imperative to secure this session to mitigate risks such as session hijacking, which could lead to unauthorized access to the system.\u003c/p\u003e\n\u003ch2 id=\"v4-access-control\"\u003eV4 Access Control\u003c/h2\u003e\n\u003cp\u003eUpon user identification, it is crucial to enforce restrictions ensuring users access only permitted information and actions while being barred from accessing unauthorized resources. The latter aspect is of paramount importance. It is achieved through the implementation of various access control mechanisms such as Role-Based Access Control (RBAC) or Attribute-Based Access Control (ABAC).\u003c/p\u003e\n\u003ch2 id=\"v5-validation-sanitization-and-encoding\"\u003eV5 Validation, Sanitization, and Encoding\u003c/h2\u003e\n\u003cp\u003eThe system is required to thoroughly validate and sanitize all input sources, encompassing user inputs as well as those from integrating systems. Any third-party system providing inputs must adhere to a predefined contract. Input fields must undergo meticulous sanitization procedures to mitigate risks associated with Injection and Cross-Site Scripting (XSS) vulnerabilities.\u003c/p\u003e\n\u003ch2 id=\"v6-stored-cryptography\"\u003eV6 Stored Cryptography\u003c/h2\u003e\n\u003cp\u003eAll stored data should be categorized based on security requirements, such as Personally Identifiable Information (PII), financial data, and public information. This classification enables striking the appropriate balance between encryption and performance. Effective management of access to security and cryptographic keys is crucial.\u003c/p\u003e\n\u003ch2 id=\"v7-error-handling-and-logging\"\u003eV7 Error Handling and Logging\u003c/h2\u003e\n\u003cp\u003eThroughout system development, diverse errors must be gracefully handled, and logging must be executed to facilitate issue resolution. Log management entails defining the lifespan of logs. Logs should contain sufficient information for troubleshooting without being overly verbose.\u003c/p\u003e\n\u003ch2 id=\"v8-data-protection\"\u003eV8 Data Protection\u003c/h2\u003e\n\u003cp\u003eData must be safeguarded to uphold its Confidentiality, Integrity, and Availability. This encompasses overall data protection, securing data at the client side, and safeguarding various forms of data, whether directly accessible or in derived formats. All data must be protected in accordance with its classification.\u003c/p\u003e\n\u003ch2 id=\"v9-communications\"\u003eV9 Communications\u003c/h2\u003e\n\u003cp\u003eEnsuring the security of client-server communication is paramount. The inherent untrustworthiness of networks, compounded by the internet\u0026rsquo;s design, which involves multiple hops before packets reach their destination, necessitates robust measures. The system should implement mechanisms such as TLS, mTLS, or SSL pinning for securing client-server communication. Particular attention should be given to preventing Man-in-the-Middle (MITM) attacks.\u003c/p\u003e\n\u003ch2 id=\"v10-malicious-code\"\u003eV10 Malicious Code\u003c/h2\u003e\n\u003cp\u003eSufficient security and review mechanisms should be in place to prevent the infiltration of malicious code. In the event of such infiltration, measures should be in place to contain the harm and prevent its spread throughout the system. This can be achieved by restricting access and control of services. The system must be devoid of any backdoors or hidden functionalities that could be exploited by hackers. Antivirus and other checks should be available to detect and mitigate such threats.\u003c/p\u003e\n\u003ch2 id=\"v11-business-logic\"\u003eV11 Business Logic\u003c/h2\u003e\n\u003cp\u003eSecurity considerations should be integrated into the definition of business requirements. When defining the business logic, it\u0026rsquo;s essential to establish limits and implement access control measures.\u003c/p\u003e\n\u003ch2 id=\"v12-files-and-resources\"\u003eV12 Files and Resources\u003c/h2\u003e\n\u003cp\u003eFiles are often targeted in cyber attacks. Any file uploads must adhere to defined standards and undergo antivirus checks. Uploaded files should only have specified and allowed MIME types. In most cases, granting executable rights to uploaded or downloaded files is unnecessary and should be avoided.\u003c/p\u003e\n\u003ch2 id=\"v13-api-and-web-services\"\u003eV13 API and Web Services\u003c/h2\u003e\n\u003cp\u003eAll APIs, whether REST, SOAP, GraphQL, or any other mechanism, must enforce authorization to ensure that only authorized individuals can access data and processes. Even public APIs should incorporate rate limiting mechanisms.\u003c/p\u003e\n\u003ch2 id=\"v14-configuration\"\u003eV14 Configuration\u003c/h2\u003e\n\u003cp\u003eConfigurations should be securely stored, especially as they may contain sensitive information such as licenses. Access to or modification of configurations should require the involvement of more than one individual for added security.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003e\u003ca href=\"https://owasp.org/www-project-application-security-verification-standard/\"\u003ehttps://owasp.org/www-project-application-security-verification-standard/\u003c/a\u003e\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n","description":"Explore the power of OWASP's Application Security Verification Standards (ASVS) to fortify your software against cyber threats. Learn how to navigate key security categories like authentication, access control, and data protection, ensuring compliance with industry standards while enhancing user trust. Dive deep into ASVS levels and essential security considerations to build robust, secure applications that stand strong against evolving security challenges.","image":"/images/blogs/2024/mar/Application-Security-Verification-Standard/banner.png","permalink":"http://localhost:1313/blogs/2024/mar/application-security-verification-standard/","title":"Application Security Verification Standard"},{"content":"\u003ch1 id=\"motivation-behind-this-blog\"\u003eMotivation behind this blog\u003c/h1\u003e\n\u003cp\u003eDuring a visit to my friend\u0026rsquo;s house, I needed to check my email on his laptop. Upon entering my credentials, I encountered a captcha prompt unexpectedly. After successfully navigating through the captcha challenge, I was then required to enter an additional layer of OTP. It was only after overcoming both obstacles that I finally gained access to my emails.\u003c/p\u003e\n\u003cp\u003eOn the contrary, I rarely need to input my credentials on my iPad or phone to access Gmail. After logging in once, I can consistently access my emails without the need to reauthenticate my identity each time.\u003c/p\u003e\n\u003cp\u003eThe service\u0026rsquo;s behavior varies depending on the specific circumstances of access. Despite providing a valid password, the trust level of the user is determined by various other factors.\u003c/p\u003e\n\u003ch2 id=\"adaptive-authentication\"\u003eAdaptive Authentication\u003c/h2\u003e\n\u003cp\u003eAdaptive authentication is a sophisticated security mechanism that mandates users to validate their identity through a diverse range of methods tailored to specific conditions and contexts. This dynamic approach ensures that the authentication process adapts to the unique circumstances of each login attempt, enhancing overall security and mitigating potential risks associated with unauthorized access.\u003c/p\u003e\n\u003ch3 id=\"passwords-as-an-authentication-mechanism\"\u003ePasswords as an authentication mechanism\u003c/h3\u003e\n\u003cp\u003ePasswords, while widely used as the default authentication credentials, are known to have inherent security limitations. Numerous articles and discussions have highlighted the vulnerabilities associated with passwords, emphasizing the need for alternative authentication methods. However, due to their widespread acceptance and ease of creation, passwords continue to be the primary authentication mechanism for most websites today.\u003c/p\u003e\n\u003cp\u003eTo address the risks associated with password leakage, organizations can implement adaptive authentication as a proactive security measure. Adaptive authentication involves analyzing various factors to assess the legitimacy of a user\u0026rsquo;s login attempt. If the login appears suspicious based on predefined criteria, additional verification steps are triggered before granting immediate access. This approach helps mitigate the risks associated with compromised passwords and provides an extra layer of security by adapting the authentication process to the specific circumstances of each login attempt.\u003c/p\u003e\n\u003ch2 id=\"other-factors-for-authentication\"\u003eOther factors for authentication\u003c/h2\u003e\n\u003cp\u003eApart from passwords, there are several factors that can be utilized to establish trust in a user and enhance authentication protocols. Here are some of these factors and how they can be incorporated into the authentication process:\u003c/p\u003e\n\u003ch3 id=\"physical-devices\"\u003ePhysical Devices\u003c/h3\u003e\n\u003cp\u003eDevice from which the user is accessing the application, can be a powerful mechanism to trust or doubt the credentials being used.\u003c/p\u003e\n\u003cp\u003eSince physical devices like mobile phones, or browsers can be uniquely identified, and associated with a user, a history of user logins can be maintained.\nThis history can be used to create information about the user and devices.\nIf a user generally logs in from a few given devices, and suddenly the account is being accessed from a new device, the access is less trustworthy.\nSimilarly, if a device is being used by a couple of users, (they may be a family or living close-by) the device can be trusted. But if suddenly a device is being used by hundreds of users it could be a device that might have been automated for testing different accounts. such a device should not be trusted.\u003c/p\u003e\n\u003cp\u003eDevices being physical have an inherent risk, they can be stolen. And hence although devices provide a good amount of trust factor, they can not be 100% trusted.\u003c/p\u003e\n\u003ch3 id=\"geographical-location\"\u003eGeographical Location\u003c/h3\u003e\n\u003cp\u003eDevices and browsers have access to the physical location of the users. This geographical location can be used to understand the various factors that determine the user\u0026rsquo;s behaviour.\u003c/p\u003e\n\u003cp\u003eIf we have the access to specific location, we can determine if the user is accessing the application from a residential or office location.\nA corporate account should generally not be accessed from a residential location. (Covid has brought some changes in this criteria, where work-from-home is the new normal and widely accepted)\nAnd if the geographical location is near to the registered (or usual) address, the session can be trusted more than the ones that are far away from the usual locations.\nGeographical location can also be a powerful tool to prevent frauds. For instance, if we know that a user logged in from a known location that is somewhere in New Delhi.\nIf the same account is being logged in from Malasia within a span of an hour, it can be determined to be an invalid or suspicious attempt, because travelling from new delhi to Malasia within one hour is not possible given the present modes of travel.\u003c/p\u003e\n\u003ch3 id=\"user-behaviour\"\u003eUser Behaviour\u003c/h3\u003e\n\u003cp\u003eUser behavior can provide valuable insights for authentication. Different types of user behaviours can be tracked, e.g. usage of mouse/trackpad vs keyboard for navigation.\u003c/p\u003e\n\u003cp\u003eAutomated tools generally tend to move mouse in a pattern, but humans generally have a certain randomness in their behaviour.\u003c/p\u003e\n\u003cp\u003eConsistent patterns in typing speed, form entry order, or preferred settings indicate normal behavior.\u003c/p\u003e\n\u003cp\u003eSudden deviations, such as pasting a password from the clipboard instead of manually typing it, or switching from dark mode to light mode, may indicate suspicious behavior. Monitoring these behavioral cues can enhance authentication security.\u003c/p\u003e\n\u003ch3 id=\"time-of-access\"\u003eTime of Access\u003c/h3\u003e\n\u003cp\u003eMonitoring the time of access can help identify suspicious login attempts. For instance, if a user typically accesses a service in the evening after office hours but suddenly attempts access at 4 am, it raises suspicion. Unusual access times can trigger additional verification steps to ensure the legitimacy of the login attempt.\u003c/p\u003e\n\u003cp\u003eIf any of the factors indicate that there is a variance in the usual behaviour. It can be assumed that the trust factor is reduced. More the variance, more will be the distrust generated.\u003c/p\u003e\n\u003cp\u003eIf the distrust generated is higher than a given threashold, we can ask for further authentication mechanism by asking more parameters.\u003c/p\u003e\n\u003ch2 id=\"what-factors-can-be-trusted\"\u003eWhat factors can be trusted?\u003c/h2\u003e\n\u003cp\u003eIn reality, all the factors have their shortcomings, and hence a single factor cannot be trusted completely.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003ePasswords : can be copied, or shared within individuals.\u003c/li\u003e\n\u003cli\u003eGeographical Location : People travel, and multiple people can be present in the same location\u003c/li\u003e\n\u003cli\u003eOTPs : OTPs like passwords, can be shared. The numbers can be hacked. So, although much more secure than passwords due to limited life, OTPs are also not 100% trust worthy.\u003c/li\u003e\n\u003cli\u003ePhysical devices: Devices can be stolen. They may be lost, and then discovered by conmens.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003ejourney\n    title Trust Factors of different mechanisms (individually)\n      Cookies : 1\n      ipAddress: 1\n      Geographical location: 2\n      Password: 3\n      User Behaviour : 4\n      OTP: 4\n      Biometrics: 6\n      physical device: 6\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eSo any single factor cannot be trusted 100% but by the \u003ccite\u003econcepts of probability\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003ccite\u003e, when we include more factors, the trust factor is increased. In other words the probability of distrust goes down drastically, when we include many trustworthy items together.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eP(A ∩ B) = P(A) . P(B)\n\u003c/code\u003e\u003c/pre\u003e\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003e\u003ca href=\"https://byjus.com/maths/multiplication-rule-probability/\"\u003ehttps://byjus.com/maths/multiplication-rule-probability/\u003c/a\u003e\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n","description":"","image":"/images/blogs/2024/feb/adaptive-authentication/banner.png","permalink":"http://localhost:1313/blogs/2024/feb/adaptive-authentication/","title":"Adaptive Authentication"},{"content":"\u003ch1 id=\"access-control-in-owasp-top-10\"\u003eAccess Control in OWASP top 10\u003c/h1\u003e\n\u003cp\u003eAccess control is a crucial aspect of application security that ensures users can only perform actions within their authorized permissions. However, broken access control vulnerabilities can lead to unauthorized access, data breaches, and other security risks. In this blog, I want to talk about a very common observation that I have while reviewing codes. Well, not only observed by me, broken access control is the number one in \u003ca href=\"https://owasp.org/Top10/A01_2021-Broken_Access_Control/\"\u003eOWASP Top 10 2021 list\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eI was reviewing code for a project written by a young developer, and most of the APIs that were written were in the following manner.\u003c/p\u003e\n\u003ch2 id=\"typical-listing-screen-and-behaviour\"\u003eTypical Listing Screen and behaviour\u003c/h2\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003esequenceDiagram\n\nbox  FrontEnd\n    participant User\n    participant LoginJourney\n    participant AccountsJourney\nend\nbox  Backend\n    participant Gateway\n    participant LoginService\n    participant AuthorizationService\n    participant AccountsService\nend\nUser-\u0026gt;\u0026gt;LoginJourney : logs in\nLoginJourney -\u0026gt;\u0026gt; LoginService : Login\nLoginService--\u0026gt;\u0026gt;LoginJourney : authentication successful\nLoginJourney --\u0026gt;\u0026gt; User : user-token\nUser -\u0026gt;\u0026gt; AccountsJourney : load accounts for user\nAccountsJourney -\u0026gt;\u0026gt; Gateway: validate the user token for accounts\nGateway -\u0026gt;\u0026gt; AuthorizationService : is user authorized to access Accounts?\nalt User is allowed to access accounts service\n    AuthorizationService --\u0026gt;\u0026gt; Gateway : valid token and auth controls\n    Gateway -\u0026gt;\u0026gt; AccountsService: get accounts for the user\n    AccountsService --\u0026gt;\u0026gt; Gateway : user\u0026#39;s accounts\n    Gateway --\u0026gt;\u0026gt; AccountsJourney : user\u0026#39;s accounts\n    AccountsJourney --\u0026gt;\u0026gt; User : user\u0026#39;s accounts with accountIds\nelse User is not allowed to access accounts service\n    AuthorizationService --\u0026gt;\u0026gt; Gateway : invalid token/ access controls\n    Gateway --\u0026gt;\u0026gt; AccountsJourney : unauthorized access\n    AccountsJourney --\u0026gt;\u0026gt; User : Cannot access accounts\nend\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThe sequence diagram depicts a user logging into the system and attempting to access their accounts. Initially, the user logs in through the frontend, triggering a login process handled by the login service, which upon successful authentication, issues a user token. The user then requests to load their accounts, prompting the system to validate the user token via the gateway and authorization service. If authorized, the gateway forwards the request to the accounts service, retrieving the user\u0026rsquo;s accounts, which are then returned to the user. Conversely, if unauthorized, the gateway communicates this to the accounts journey, resulting in the user being notified of the inability to access their accounts. This process ensures secure access to user accounts by verifying authentication and authorization at various stages.\u003c/p\u003e\n\u003cp\u003eThis sequence looks fine and secure. We have sufficient controls in place, we are authenticating the user, and also checking if the logged in user has right roles to access the accounts service. So we have covered both authentication and authorization correctly.\u003c/p\u003e\n\u003ch2 id=\"typical-details-screen-and-behaviour\"\u003eTypical details screen and behaviour\u003c/h2\u003e\n\u003cp\u003eNow, the user has the list of accounts, s/he select one of the linked accounts to view the account details and transactions.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003esequenceDiagram\n\nbox  FrontEnd\n    participant User\n    participant AccountsJourney\nend\nbox  Backend\n    participant Gateway\n    participant AuthorizationService\n    participant AccountsDetailsService\nend\nUser-\u0026gt;\u0026gt;AccountsJourney : Selects account for fetching details\nAccountsJourney -\u0026gt;\u0026gt; Gateway: get account details for account id\nGateway -\u0026gt;\u0026gt; AuthorizationService : is user authorized to access account details?\nAuthorizationService --\u0026gt;\u0026gt; Gateway : user is authorized\nGateway -\u0026gt;\u0026gt; AccountsDetailsService : fetch details for given account id\nAccountsDetailsService --\u0026gt;\u0026gt; Gateway : account details for the given account id\nGateway --\u0026gt;\u0026gt; AccountsJourney : details of requested account id\nAccountsJourney --\u0026gt;\u0026gt; User : account details\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis sequence diagram outlines the process of a user selecting an account and fetching its details within the system. Initially, the user interacts with the frontend, to select an account for which they want to retrieve details. Subsequently, the accounts journey sends a request to the backend via the gateway to obtain the details corresponding to the selected account ID. The gateway then queries the authorization service to verify whether the user is authorized to access the requested account details. Upon receiving confirmation of user authorization, the gateway proceeds to fetch the account details from the accounts details service. Once the account details are retrieved, they are sent back through the gateway to the accounts journey, which then forwards the details to the user. This sequence ensures that only authorized users can access account details, maintaining security and control within the system.\u003c/p\u003e\n\u003cp\u003eIn this system, we have all mechanisms of security in place. Authentication, authorization, token expiry and rest of the stuff as well. So the sequence looks secure, and generally is approved by senior managers and architects.\u003c/p\u003e\n\u003ch2 id=\"the-loophole\"\u003eThe loophole\u003c/h2\u003e\n\u003cp\u003eHowever, this approach has a very big flaw. If you have ever accessed REST APIs via a client, you are aware how easy it is to change the inputs to request body of a REST api.\u003c/p\u003e\n\u003cp\u003eIn browsers, you can easily open developer tools and then identify the APIs. For mobile applications too, you have easy network monitoring tools that allow you to identify the requests and responses going over the network.\nYou can even modify these requests easily. If we have a user, who has valid credentials, but has malicious intents can tweek the requested account ids.\u003c/p\u003e\n\u003cp\u003eSince in the given sequence, there is no way to identify if the requested account id is linked to the given user, the system will respond with account details, even if the account is not linked to the user.\u003c/p\u003e\n\u003ch2 id=\"the-solution\"\u003eThe solution\u003c/h2\u003e\n\u003cp\u003eA better approach to solve this problem is to make sure each service validates the authorization of the requested data. Sure, it is a bit of extra effort for microservice developers, but without this we will be developing insecure systems.\nFor instance the above design should be replaced with something as below :\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003esequenceDiagram\n\nbox  FrontEnd\n    participant User\n    participant AccountsJourney\nend\nbox  Backend\n    participant Gateway\n    participant AuthorizationService\n    participant AccountsDetailsService\nend\nUser-\u0026gt;\u0026gt;AccountsJourney : Selects account for fetching details\nAccountsJourney -\u0026gt;\u0026gt; Gateway: get account details for account id\nGateway -\u0026gt;\u0026gt; AuthorizationService : is user authorized to access account details?\nAuthorizationService --\u0026gt;\u0026gt; Gateway : user is authorized\nGateway -\u0026gt;\u0026gt; AccountsDetailsService : fetch details for given account id\nAccountsDetailsService -\u0026gt;\u0026gt; AccountsDetailsService : is the requested account linked to the user-token being used?\nnote right of AccountsDetailsService : This extra step provides additional security\nalt account linked to token\n    AccountsDetailsService --\u0026gt;\u0026gt; Gateway : account details for the given account id\n    Gateway --\u0026gt;\u0026gt; AccountsJourney : details of requested account id\n    AccountsJourney --\u0026gt;\u0026gt; User : account details\nelse\n    AccountsDetailsService --\u0026gt;\u0026gt; Gateway : unauthorized\n    Gateway --\u0026gt;\u0026gt; AccountsJourney : The user is unauthorized to access the requested details\n    AccountsJourney --\u0026gt;\u0026gt; User : Unauthorized notice\nend\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis sequence diagram depicts a user selecting an account and attempting to retrieve its details, with an additional step included to verify if the requested account is linked to the user token being used. After the user selects an account, the system checks authorization via the gateway and authorization service. Upon authorization confirmation, \u003cstrong\u003ethe system proceeds to verify if the requested account is associated with the user token\u003c/strong\u003e. If the account is linked, its details are fetched and returned to the user; however, if it\u0026rsquo;s not linked, indicating unauthorized access, the system notifies the user accordingly.\u003c/p\u003e\n\u003cp\u003eThis extra step ensures an additional layer of security by verifying the association between the requested account and the user\u0026rsquo;s token before granting access to sensitive account details.\u003c/p\u003e\n\u003cp\u003eHave you came across any such problem in access control mechanisms? Please share your comments below!\u003c/p\u003e\n","description":"Explore the importance of access control in app security, pitfalls in code reviews, and strategies to prevent unauthorized access. Strengthen your defenses against cyber threats today.","image":"/images/blogs/2024/feb/broken-access-control/banner.png","permalink":"http://localhost:1313/blogs/2024/feb/broken-access-control/","title":"Broken Access Control"},{"content":"\u003ch1 id=\"sim-binding\"\u003eSim Binding\u003c/h1\u003e\n\u003cp\u003eSim binding is a process requirement by RBI to provide secure mobile applications. The RBI has issued the Master Direction on Digital Payment Security Controls to ensure the security of digital payment systems. The directions apply to scheduled commercial banks, small finance banks, payments banks, and credit card issuing NBFCs. The guidelines emphasize the need for a robust governance structure and implementation of security controls for digital payment products and services.\u003c/p\u003e\n\u003cblockquote\u003e\n\u003col start=\"33\"\u003e\n\u003cli\u003eIn view of the proliferation of cyber-attacks and their potential consequences, REs should implement, except where explicitly permitted/ relaxed, multi-factor authentication for payments through electronic modes and fund transfers, including cash withdrawals from ATMs/ micro-ATMs/ business correspondents, through digital payment applications. At least one of the authentication methodologies should be generally dynamic or non-replicable. [e.g., Use of One Time Password, mobile devices (device binding and SIM), biometric/ PKI/ hardware tokens, EMV chip card (for Card Present Transactions) with server-side verification could be termed either in dynamic or non-replicable methodologies.].\u003c/p\u003e\n— \u003ccite\u003eRBI Master Direction on Digital Payment Security Controls\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/cite\u003e\u003c/li\u003e\n\u003c/ol\u003e\u003c/blockquote\u003e\n\u003cp\u003eSim binding involves linking the SIM card to the mobile application to enhance security. The compliance requirements include implementing alternatives to SMS-based OTP authentication mechanisms, re-authentication for unused devices or applications, not storing sensitive information on the device, and securing mobile applications from SQL injection vulnerabilities.\u003c/p\u003e\n\u003ch2 id=\"the-compliance-requirements\"\u003eThe compliance requirements\u003c/h2\u003e\n\u003cp\u003eCompliance regulations necessitate linking the application with physical elements that are inherently resistant to change. These physical elements can encompass the mobile device itself, a hard token, or even the SIM card. As a robust security measure, authentication must be based on multiple factors rather than relying solely on a single mechanism. By incorporating multiple factors into the authentication process, it becomes significantly more challenging to counterfeit, thereby reducing the occurrence of fraudulent activities. This multi-factor authentication approach not only bolsters security but also instills greater confidence in the integrity of the system.\u003c/p\u003e\n\u003ch2 id=\"sim-card\"\u003eSim card\u003c/h2\u003e\n\u003cp\u003eA SIM card, or Subscriber Identification Module, is a small chip that is inserted into a mobile device to identify and authenticate the user on a cellular network. It contains unique information, such as the mobile number and network provider, and allows the device to connect to the network and make calls, send messages, and access mobile data. SIM cards are used in mobile phones, tablets, and other devices that require cellular connectivity. They play a crucial role in ensuring secure communication and authentication for mobile applications, including mobile banking and mobile payments.\u003c/p\u003e\n\u003ch2 id=\"binding-sim-card\"\u003eBinding sim card\u003c/h2\u003e\n\u003cp\u003eSim cards store Personally Identifiable Information (PII) and other sensitive data, making it crucial to protect their access. Due to the sensitivity of this information, different device operating systems adopt varying approaches to expose sim card details to app developers.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eiOS:\u003c/strong\u003e Apple\u0026rsquo;s iOS operating system does not provide direct access to sim card details through its APIs. This limitation is implemented to prioritize user privacy and data security. App developers on iOS cannot retrieve sim card information programmatically, ensuring that sensitive data stored on the sim card remains protected.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAndroid and Windows:\u003c/strong\u003e On the other hand, operating systems like Android and Windows offer some level of access to sim card details through their APIs. This access allows app developers to retrieve certain information from the sim card, such as the International Mobile Subscriber Identity (IMSI) or the Integrated Circuit Card Identifier (ICCID). However, it\u0026rsquo;s important to note that the level of access and the specific details that can be retrieved may vary depending on the specific version of the operating system and the device\u0026rsquo;s hardware capabilities.\u003c/p\u003e\n\u003cp\u003eBy providing limited access to sim card details, Android and Windows enable app developers to leverage this information for certain functionalities while still maintaining a balance between user privacy and app functionality.\u003c/p\u003e\n\u003ch4 id=\"sim-registration-process\"\u003eSim registration process\u003c/h4\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003esequenceDiagram\n    box FrontEnd\n        participant User\n        participant mobileApp\n        participant simCard\n    end\n    box Backend\n        participant Service\n    end\n    User-\u0026gt;\u0026gt;mobileApp: Registers on mobile app\n    mobileApp -\u0026gt;\u0026gt; mobileApp : calculate unique App Id\n    mobileApp-\u0026gt;\u0026gt;simCard: is accessible?\n    alt sim card is accessible\n        simCard --\u0026gt;\u0026gt; mobileApp : sim details\n        mobileApp -\u0026gt;\u0026gt; Service : Register sim details with app, device and user\n        Service --\u0026gt;\u0026gt; mobileApp : Sim registered\n    else sim card is not accessible\n        simCard --\u0026gt;\u0026gt; mobileApp : error in sim binding, check alternatives\n    end\n\u003c/code\u003e\u003c/pre\u003e\u003ch5 id=\"understanding-the-process\"\u003eUnderstanding the Process:\u003c/h5\u003e\n\u003cp\u003eThe user registration process with SIM card binding involves the interaction between the front-end (user, mobile app, and SIM card) and the back-end (service). Let\u0026rsquo;s break down the steps involved:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUser Registration\u003c/strong\u003e: The user initiates the registration process by providing their details through the mobile app.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUnique App ID Generation\u003c/strong\u003e: The mobile app generates a unique App ID for the user. This ID serves as a reference for future interactions and authentication.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSIM Card Accessibility Check\u003c/strong\u003e: The mobile app checks if the SIM card is accessible on the device. This step ensures that the app can communicate with the SIM card for identification purposes.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSIM Card Details Retrieval\u003c/strong\u003e: If the SIM card is accessible, the mobile app retrieves the SIM card details, such as the International Mobile Subscriber Identity (IMSI). These details are essential for binding the SIM card to the user\u0026rsquo;s account.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSIM Card Registration\u003c/strong\u003e: The mobile app sends the SIM card details, along with the App ID and user information, to the back-end service for registration. This step establishes a connection between the user, the mobile app, and the SIM card.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRegistration Confirmation\u003c/strong\u003e: The back-end service processes the registration request and confirms the successful binding of the SIM card to the user\u0026rsquo;s account. This confirmation is sent back to the mobile app.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eError Handling\u003c/strong\u003e: In case the SIM card is not accessible or there are errors during the binding process, the mobile app notifies the user and suggests alternative solutions.\u003c/p\u003e\n\u003ch4 id=\"sim-card-validation-process\"\u003eSim card validation process\u003c/h4\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003esequenceDiagram\n    box FrontEnd\n        participant User\n        participant mobileApp\n        participant simCard\n    end\n    box Backend\n        participant Service\n    end\n    User-\u0026gt;\u0026gt;mobileApp: Opens the app\n    mobileApp -\u0026gt;\u0026gt; mobileApp : calculate unique App Id\n    mobileApp-\u0026gt;\u0026gt;simCard: is accessible?\n    alt sim card is accessible\n        simCard --\u0026gt;\u0026gt; mobileApp : sim details\n        mobileApp -\u0026gt;\u0026gt; Service : Validate sim details with already registered sim\n        alt sim details changed\n            Service --\u0026gt;\u0026gt; mobileApp : sim changed\n            mobileApp -\u0026gt;\u0026gt; mobileApp : don\u0026#39;t allow to proceed \n            mobileApp --\u0026gt;\u0026gt; User : Show alternative methods to proceed to the user.\n        else sim details match\n            Service --\u0026gt;\u0026gt; mobileApp : sim details match\n            mobileApp -\u0026gt;\u0026gt; mobileApp : continue as usual\n        end\n    else sim card is not accessible\n        simCard --\u0026gt;\u0026gt; mobileApp : error in sim binding, check alternatives\n    end\n\u003c/code\u003e\u003c/pre\u003e\u003ch5 id=\"understanding-the-process-1\"\u003eUnderstanding the Process:\u003c/h5\u003e\n\u003cp\u003eThe SIM card validation process involves interactions between the front-end (user, mobile app, and SIM card) and the back-end (service). Let\u0026rsquo;s break down the steps involved:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUser Opens the App\u003c/strong\u003e: The user opens the mobile app, initiating the authentication process.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUnique App ID Calculation\u003c/strong\u003e: The mobile app generates a unique App ID for the user, which serves as a reference for future interactions. It must be same through the life of the app, and hence same as the one used during registration process.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSIM Card Accessibility Check\u003c/strong\u003e: The mobile app checks if the SIM card is accessible on the device. This step ensures that the app can communicate with the SIM card for validation purposes.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSIM Card Details Retrieval\u003c/strong\u003e: If the SIM card is accessible, the mobile app retrieves the SIM card details, such as the International Mobile Subscriber Identity (IMSI).\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSIM Card Validation\u003c/strong\u003e: The mobile app sends the SIM card details, along with the App ID, to the back-end service for validation. The service compares the received SIM card details with the previously registered SIM card details associated with the user\u0026rsquo;s account.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eValidation Result\u003c/strong\u003e: Based on the comparison, the back-end service responds to the mobile app with the validation result.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eValidation Outcome Handling\u003c/strong\u003e: If the SIM card details have changed, indicating a potential security breach, the mobile app notifies the user and restricts further access. The user is presented with alternative methods to proceed, such as contacting customer support or initiating account recovery. If the SIM card details match, the mobile app allows the user to continue using the app as usual.\u003c/p\u003e\n\u003ch2 id=\"alternative-solutions\"\u003eAlternative Solutions\u003c/h2\u003e\n\u003cp\u003eIf sim card details are not directly accessible, there are some alternatives :\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eSNA  - Silent Network Authentication\u003c/li\u003e\n\u003cli\u003eNumber based authentication e.g. OTP\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch4 id=\"silent-network-authentication\"\u003eSilent Network Authentication\u003c/h4\u003e\n\u003cp\u003eFor a better user experience, we would like to keep user inputs minimum and would like to perform actions automatically wherever possible.\nSNA - Silent Network Authentication is such an alternative for sim binding.\nThis process is achieved by getting minimum details from the device e.g. mobile number, and then requesting the network provider to share the additional details. Since the sim card is issued by the network provider, they can validate if the sim is authentic or not.\nThe complexity here is that there are so many different sim providers, so the programmers will have to integrate with all the different sim providers. Another approach is to integrate with an aggrigator e.g. twilio. that internally integrates with different sim providers and provides the developers with a unified interface.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003esequenceDiagram\n    participant User\n    box FrontEnd\n        participant mobileApp\n    end\n    box Backend\n        participant Service\n    end\n    box Aggregator\n        participant Twilio\n    end\n    box Network provider\n        participant Airtel\n        participant Vodafone\n    end\n    User-\u0026gt;\u0026gt;mobileApp: Opens the app\n    mobileApp -\u0026gt;\u0026gt; Service : Validate mobile number\n    Service -\u0026gt;\u0026gt; Twilio : Validate Sim details\n    alt is Airtel\n        Twilio -\u0026gt;\u0026gt; Airtel : validate number with Airtel\n        Airtel --\u0026gt;\u0026gt; Twilio : Sim and other details\n    else is Vodafone\n        Twilio -\u0026gt;\u0026gt; Vodafone : validate number with vodafone\n        Vodafone --\u0026gt;\u0026gt; Twilio : Sim and other details\n    end\n    Twilio --\u0026gt;\u0026gt; Service: Sim and other details\n    Service -\u0026gt;\u0026gt; Service : compare/persist information\n    Service --\u0026gt;\u0026gt; mobileApp : is sim changed?\n    mobileApp -\u0026gt;\u0026gt; mobileApp : exit the app if sim changed\n    \n\u003c/code\u003e\u003c/pre\u003e\u003ch5 id=\"understanding-the-process-2\"\u003eUnderstanding the Process\u003c/h5\u003e\n\u003cp\u003eThe mobile number and SIM validation process involves interactions between the front-end (user and mobile app), the back-end (service), an aggregator (Twilio), and network providers (Airtel and Vodafone). Let\u0026rsquo;s break down the steps involved:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eUser Opens the App\u003c/strong\u003e: The user opens the mobile app, initiating the verification process.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eMobile Number Validation\u003c/strong\u003e: The mobile app sends the user\u0026rsquo;s mobile number to the back-end service for validation.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSIM Validation with Twilio\u003c/strong\u003e: The back-end service communicates with Twilio, an aggregator that facilitates communication with network providers.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eNetwork Provider Validation\u003c/strong\u003e: Twilio forwards the mobile number to the appropriate network provider based on the user\u0026rsquo;s network operator (e.g., Airtel or Vodafone).\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSIM and Other Details Retrieval\u003c/strong\u003e: The network provider (e.g., Airtel) validates the mobile number and SIM details associated with the user\u0026rsquo;s account. The provider sends this information back to Twilio.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eInformation Comparison and Persistence\u003c/strong\u003e: The back-end service compares the received SIM and other details with the previously stored information associated with the user\u0026rsquo;s account. If necessary, the service persists the updated information.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSIM Change Detection\u003c/strong\u003e: The back-end service determines if the SIM card has changed by comparing the received SIM details with the stored information. If a change is detected, it indicates a potential security breach.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eApp Exit on SIM Change\u003c/strong\u003e: If a SIM change is detected, the mobile app prompts the user to exit the app for security reasons. This action helps protect the user\u0026rsquo;s account and sensitive information.\u003c/p\u003e\n\u003ch4 id=\"otp-based-authentication\"\u003eOTP based authentication\u003c/h4\u003e\n\u003cp\u003eSometimes the SNA approach is not feasible due to cost and approval timelines involved. An alternative that is not sim binding, but number binding approach can be used, if the business and compliance agree to it.\u003c/p\u003e\n\u003cp\u003eIn this approach, an OTP is either sent from the service, or from the device to service, and validations are performed on both the ends (mobile and service) to determine if the SMS has been sent from the same device. In this approach, we can determine if a number\u0026rsquo;s sim is present in the device or not. While this is not fraud-proof, it reduces a lot of easily doable frauds, and increases the costs of the hackers.\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-mermaid\" data-lang=\"mermaid\"\u003esequenceDiagram\n    participant User\n    box FrontEnd\n        participant mobileApp\n    end\n    box Backend\n        participant Service\n    end\n    box SMS Service Provider\n        participant Twilio\n    end\n\n    User-\u0026gt;\u0026gt;mobileApp: Takes an action to start the Number binding\n    mobileApp -\u0026gt;\u0026gt; Service : Request to start the Number binding\n    Service -\u0026gt;\u0026gt; Service : Generate request Id, Large random alphabets as SMS content\n    Service -\u0026gt;\u0026gt; mobileApp : RequestId, SMS content\n    mobileApp -\u0026gt;\u0026gt; Twilio : SMS content on registered number, from user\u0026#39;s number (sim)\n\n    Twilio --\u0026gt;\u0026gt; Service: SMS Received\n    Service -\u0026gt;\u0026gt; Service : compare, validate and persist information\n    Service --\u0026gt;\u0026gt; mobileApp : is sim changed?\n    mobileApp -\u0026gt;\u0026gt; mobileApp : exit the app if sim changed\n    \n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eThis approach takes an alternative route for Sim binding, however since an SMS is sent everytime sim (or number) binding is tried this way, the user has to bear the costs for sending the SMS. This might not be a good user experience and hence tricks should be adapted to minimize the cost burden on the users.\u003c/p\u003e\n\u003cp\u003eAlso, since the SMS sending is done over a different channel, the developers need to adapt to techniques like implementing Callback services or polling (or Push notifications) to complete the cycle.\u003c/p\u003e\n\u003ch2 id=\"considerations\"\u003eConsiderations\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eVirtual Sim cards\nWith the availability of new types of devices supporting virtual sim cards, there can be a single sim linked with multiple devices. The complexities associated with this needs to be handled.\u003c/li\u003e\n\u003cli\u003eOlder sim cards\nWhile the operating systems may allow the access to sim details, it is dependent upon the sim itself to provide the details. The older sim cards do not have the capability to provide such an information to the operating systems, and hence even though the OS allows, the sim card becomes the bottleneck for Sim based authentications.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003e\u003ca href=\"https://www.rbi.org.in/Scripts/NotificationUser.aspx?Id=12032\"\u003eRBI Master Direction on Digital Payment Security Controls\u003c/a\u003e\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n","description":"Learn about sim binding, a process that links the SIM card to a mobile application for enhanced security. Understand the compliance requirements, sim card validation, alternative solutions like Silent Network Authentication (SNA) and OTP-based authentication, and considerations for virtual sim cards and older sim cards.","image":"/images/blogs/sim-binding/banner.png","permalink":"http://localhost:1313/blogs/sim-binding/","title":"Sim Binding"},{"content":"\u003cp\u003eI recently came across \u003ca href=\"https://github.blog/2024-01-24-how-githubs-developer-experience-team-improved-innerloop-development/\"\u003ethis article\u003c/a\u003e on the GitHub blog that discusses how GitHub\u0026rsquo;s Developer Experience (DX) team improved innerloop development.\nWhile reading the article I was reminded of this quote\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eClients do not come first. Employees come first. If you take care of your employees, they will take care of the clients.\u003c/p\u003e\n— \u003ccite\u003eRichard Branson\u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/cite\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003eAnd as a leader of a development team, I was made to think what am I doing for better experience of my developers, and what can be done better.\u003c/p\u003e\n\u003ch2 id=\"tools\"\u003eTools\u003c/h2\u003e\n\u003cp\u003eHaving right set of tools is very important to deliver a quality software. This includes hardware, software and other tools to analyze and improve the different processes.\u003c/p\u003e\n\u003ch4 id=\"hardware-tools\"\u003eHardware Tools\u003c/h4\u003e\n\u003cp\u003eA few years back I encountered a situation where I was working with a software system that required around 12 GB of RAM. The architecture of the system necessitated starting multiple basic microservices to work on even a single business functionality.\u003c/p\u003e\n\u003cp\u003eMy laptop had 16 GB of RAM, but when I started up this software system along with the IDE, Outlook, MS Teams, and a browser, my laptop started to heat up and responded very slowly. It\u0026rsquo;s worth mentioning that these were not the only software applications running on my machine.\u003c/p\u003e\n\u003cp\u003eWhile my European counterparts didn\u0026rsquo;t face this problem as their machines had 32 GB of RAM, finding such a machine in India was quite expensive and required numerous approvals.\u003c/p\u003e\n\u003cp\u003eInterestingly, when we were setting up the same system for our banking customers in Africa, we highlighted the productivity risk associated with their developers using machines provided by the bank, which had 8 GB of RAM for security purposes.\u003c/p\u003e\n\u003cp\u003eThe banking IT team came up with an innovative solution by providing cloud environments with 32 GB RAM machines for individual developers. This allowed our development work to proceed smoothly without any issues.\u003c/p\u003e\n\u003cp\u003eHowever, for our Indian team members working on an internal project with cost limitations, this solution wasn\u0026rsquo;t feasible. Despite having a small team, we couldn\u0026rsquo;t convince our investors to provide a cloud environment.\u003c/p\u003e\n\u003cp\u003eWe managed to convince our investors to acquire one additional machine with 16 GB of RAM. Since we were already working in a microservices environment, we, the development team, made necessary changes in the architecture and established conventions for each individual to work without interrupting each other and set up the common services on the extra machine, treating it as a server.\u003c/p\u003e\n\u003cp\u003eBy moving the platform services to the extra machine, we were able to free up some RAM on the development machines and significantly improve our productivity. It was fascinating to see how the same problem was solved in different styles under different circumstances.\u003c/p\u003e\n\u003cp\u003eIn addition to having the right laptop with sufficient processing power, RAM, and a good amount of hard disk space, it is essential to ensure that servers and cloud infrastructure are efficient for the project. This ensures smooth development and optimal performance.\u003c/p\u003e\n\u003cp\u003eInvesting in the right hardware tools is crucial for developers to work efficiently and deliver high-quality software. It not only improves productivity but also enhances the overall development experience.\u003c/p\u003e\n\u003ch4 id=\"software-tools\"\u003eSoftware Tools\u003c/h4\u003e\n\u003cp\u003eIn addition to the hardware tools mentioned earlier, having the right software tools is equally important for writing better software and improving our development environment. These tools not only enhance productivity but also provide essential functionalities to streamline workflows and collaborate effectively within a team. Here are some key software tools that play a crucial role in software development:\u003c/p\u003e\n\u003ch5 id=\"integrated-development-environment-ide\"\u003eIntegrated Development Environment (IDE)\u003c/h5\u003e\n\u003cp\u003eUsing the right IDE is essential as it provides a comprehensive set of features and tools that simplify coding, debugging, and testing. A good IDE eliminates the need to worry about managing the basics and provides a seamless development experience. Many of these IDEs also offer some plugins to enhance experience. If required, these plugins must be utilized.\u003c/p\u003e\n\u003ch5 id=\"version-control-system-vcs\"\u003eVersion Control System (VCS)\u003c/h5\u003e\n\u003cp\u003eA version control system is indispensable for managing source code and collaborating with a team. It helps track changes, manage history, and enables easier rollback to previous versions if needed. By using a VCS, developers can avoid the risk of losing their work and maintain a well-organized codebase.\u003c/p\u003e\n\u003ch5 id=\"communication-tools\"\u003eCommunication Tools\u003c/h5\u003e\n\u003cp\u003eEffective communication is vital for successful collaboration within a development team. Utilizing the right communication tools, such as Slack, Microsoft Teams, or other team messaging platforms, enhances real-time communication, facilitates quick decision-making, and fosters a sense of teamwork.\u003c/p\u003e\n\u003ch5 id=\"generative-ai-tools\"\u003eGenerative AI Tools\u003c/h5\u003e\n\u003cp\u003eGenerative AI tools have become increasingly popular in the software development field. These tools provide advanced capabilities, such as information safety, code generation, and intelligent suggestions. For example, tools like OpenAI\u0026rsquo;s GPT-3 can assist developers in learning new topics faster by providing relevant information, while tools like GitHub Copilot can help write efficient and standardized code by generating code snippets and suggestions.\u003c/p\u003e\n\u003ch5 id=\"task-management-tools\"\u003eTask Management Tools\u003c/h5\u003e\n\u003cp\u003eTask management tools like Jira help teams manage their work, plan sprints, and track progress. These tools enable efficient project management, facilitate collaboration, and provide insights into potential bottlenecks or blockers. Additionally, tools like Confluence or SharePoint are valuable for managing knowledge and documentation, which is particularly useful in long-running software projects where team members may change over time.\u003c/p\u003e\n\u003ch5 id=\"ms-office-tools\"\u003eMS Office Tools\u003c/h5\u003e\n\u003cp\u003eMicrosoft Office tools, particularly Excel, are powerful for analyzing and understanding data quickly. Excel\u0026rsquo;s functionalities, such as data manipulation, calculations, and visualization, make it an indispensable tool for various tasks, including data analysis and reporting. Additionally, tools like PowerPoint and Canva help in presenting ideas effectively, allowing developers to communicate their thoughts and project progress in a visually appealing manner.\u003c/p\u003e\n\u003cp\u003eBy leveraging the right software tools, developers can enhance their productivity, streamline workflows, and improve collaboration within their teams. These tools not only simplify tasks but also enable developers to focus on writing high-quality code and delivering successful software projects.\u003c/p\u003e\n\u003ch2 id=\"standards\"\u003eStandards\u003c/h2\u003e\n\u003cp\u003eStandards play a crucial role in improving processes and ensuring standard deliveries in various aspects of work. They provide guidelines, clarity, and consistency, making it easier for individuals and teams to understand what needs to be done and how to achieve it. Let\u0026rsquo;s explore some key areas where standards are important:\u003c/p\u003e\n\u003ch4 id=\"process-standards\"\u003eProcess Standards\u003c/h4\u003e\n\u003cp\u003eAdopting the principle of \u0026ldquo;Don\u0026rsquo;t make me think\u0026rdquo; can greatly improve processes. By simplifying and streamlining workflows, teams can reduce cognitive load and make tasks more intuitive and efficient. Defined processes and ways of working help establish a clear framework for individuals to understand their roles, responsibilities, and the steps involved in completing a task. This clarity promotes productivity and reduces ambiguity.\u003c/p\u003e\n\u003cp\u003eAdditionally, having comprehensive training documents and videos ensures that new team members can quickly get up to speed. These resources provide a standardized way of onboarding and enable individuals to learn the necessary skills and processes efficiently.\u003c/p\u003e\n\u003ch4 id=\"technology-standards\"\u003eTechnology Standards\u003c/h4\u003e\n\u003cp\u003eTechnology standards define the preferred technologies and tools to be used within an organization or project. These standards help maintain consistency, interoperability, and compatibility across different systems and components. They also outline quality standards and guidelines for ensuring the reliability, security, and performance of software applications.\u003c/p\u003e\n\u003cp\u003eFurthermore, technology standards may include processes for version upgrades, ensuring that software stays up to date with the latest features, security patches, and bug fixes. This helps in maintaining a stable and secure software environment.\u003c/p\u003e\n\u003ch4 id=\"coding-standards\"\u003eCoding Standards\u003c/h4\u003e\n\u003cp\u003eCoding standards encompass various aspects of software development, including naming conventions, architectural principles, API standards, and documentation practices. Adhering to coding standards ensures that code is readable, maintainable, and consistent across the codebase. It promotes collaboration and makes it easier for developers to understand and work with each other\u0026rsquo;s code.\u003c/p\u003e\n\u003cp\u003eConsistent documentation practices, such as using standardized templates, help in creating clear and structured documentation. Ready-to-use document templates for release notes, user guides, and other purposes save time and ensure that documentation follows a consistent format and style.\u003c/p\u003e\n\u003cp\u003eBy following coding standards and using standardized documentation templates, teams can improve code quality, reduce errors, and enhance the overall development process.\u003c/p\u003e\n\u003ch2 id=\"culture\"\u003eCulture\u003c/h2\u003e\n\u003cp\u003eThe culture of a team is a critical aspect for individuals to feel a sense of belonging and thrive in their work environment. A strong and positive team culture fosters collaboration, learning, innovation, and ultimately contributes to the success of the team. Let\u0026rsquo;s explore some key elements that make up a healthy team culture:\u003c/p\u003e\n\u003ch4 id=\"accommodative-culture\"\u003eAccommodative Culture\u003c/h4\u003e\n\u003cp\u003eAn accommodative team culture is one that embraces diversity, respects individual differences, and creates an inclusive environment. It encourages open-mindedness and values the unique perspectives and contributions of each team member. By fostering an accommodative culture, teams can leverage the diverse skills, experiences, and ideas of their members, leading to more creative and effective problem-solving.\u003c/p\u003e\n\u003ch4 id=\"learning-and-innovation\"\u003eLearning and Innovation\u003c/h4\u003e\n\u003cp\u003eA team culture that promotes continuous learning and innovation is crucial in today\u0026rsquo;s fast-paced and ever-evolving work environment. Encouraging a growth mindset, providing opportunities for skill development, and supporting experimentation and risk-taking can drive innovation within the team. When individuals feel empowered to learn, explore new ideas, and take calculated risks, it creates an environment that nurtures creativity and fosters innovation.\u003c/p\u003e\n\u003ch4 id=\"guidance-and-mentorship-for-newcomers\"\u003eGuidance and Mentorship for Newcomers\u003c/h4\u003e\n\u003cp\u003eWelcoming and supporting newcomers is essential for building a strong team culture. Providing guidance, mentorship, and a supportive environment for new team members helps them integrate quickly, understand team dynamics, and contribute effectively. When new members receive sufficient support and guidance, they can quickly adapt to the team\u0026rsquo;s culture, raise their performance, and bring fresh perspectives to the table.\u003c/p\u003e\n\u003ch4 id=\"minimizing-ego-clashes-and-promoting-healthy-relationships\"\u003eMinimizing Ego Clashes and Promoting Healthy Relationships\u003c/h4\u003e\n\u003cp\u003eA healthy team culture minimizes ego clashes and encourages positive relationships among team members. It fosters an environment where individuals can express their opinions, engage in constructive discussions, and resolve conflicts amicably. Respecting different viewpoints and focusing on finding common ground helps build trust, collaboration, and strong working relationships within the team.\u003c/p\u003e\n\u003ch4 id=\"work-life-balance\"\u003eWork-Life Balance\u003c/h4\u003e\n\u003cp\u003ePromoting a healthy work-life balance is crucial for the well-being of team members. A team culture that values work-life balance recognizes the importance of personal time, promotes self-care, and encourages individuals to maintain a healthy balance between work and personal life. This not only supports the overall well-being of team members but also enhances their productivity, creativity, and job satisfaction.\u003c/p\u003e\n\u003ch4 id=\"question-culture\"\u003eQuestion Culture\u003c/h4\u003e\n\u003cp\u003eA question culture is vital for fostering a learning environment and driving continuous improvement. Encouraging individuals to ask questions, seek clarification, and challenge assumptions promotes critical thinking and knowledge-sharing within the team. In a question culture, individuals feel comfortable seeking help, sharing their ideas, and engaging in meaningful discussions, which ultimately leads to better decision-making and problem-solving.\u003c/p\u003e\n\u003cdiv class=\"footnotes\" role=\"doc-endnotes\"\u003e\n\u003chr\u003e\n\u003col\u003e\n\u003cli id=\"fn:1\"\u003e\n\u003cp\u003e\u003ca href=\"https://www.youtube.com/watch?v=NPiCYoX-S_I\"\u003eRichard Branson: Put Your Staff 1st, Customers 2nd, \u0026amp; Shareholders 3rd | Inc. Magazine\u003c/a\u003e\u0026#160;\u003ca href=\"#fnref:1\" class=\"footnote-backref\" role=\"doc-backlink\"\u003e\u0026#x21a9;\u0026#xfe0e;\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/div\u003e\n","description":"Improving experience of software developers leads to improved quality of the software products. In this blog, we discuss how can we improve the experience of our software developers.","image":"/images/blogs/dev-experience/banner.png","permalink":"http://localhost:1313/blogs/dev-experience/","title":"Dev Experience"},{"content":"\u003cp\u003eWorking for a bank, we developed a highly successful platform for their retail users. It boasted modern features, robust security practices, and an exceptional user experience. However, we faced a new challenge when the bank requested us to extend the same platform for their High Net Worth Individual (HNI) users. They believed that since most of the features were similar, there was no need for two separate software systems.\u003c/p\u003e\n\u003cdiv class =\"image-container\" \u003e\n\u003cfigure style=\"text-align: center;\"\u003e\n  \u003cimg src=\"/images/blogs/multi-tenant-architecture/multi-tenant-arch-before.png\" alt=\"Converting a single tenant architecture to a multitenant one\" style=\"width: 80%; border: 2px solid #ddd; border-radius: 4px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\"\u003e\n  \u003cfigcaption style=\"font-size: 14px; color: #666; margin-top: 8px;\"\u003eFig 1: The existing architecture where another tenant is to be added\u003c/figcaption\u003e\n\u003c/figure\u003e\n\u003c/div\u003e\nWhile the idea sounds exciting, and there are many common features in the platform, it is not as simple as it sounds.\nThe reports need a segregation for the governance purposes. The features were being used at peak on different times. Some rules and regulations were different in both the cases.\nThe onboarding flow for different types of users was different. The user experience for different tenants was different. All these complexities posed difficulties for us to simply reuse our microservices for multiple tenants.\n\u003cp\u003eAs a solution architect, I took on the challenge of converting the existing single tenant architecture to a multi-tenant software architecture. To begin with, I carefully examined the similarities and differences between both systems. I then documented the potential risks and identified appropriate solutions and measures to address them effectively. And once done, we started making the changes step by step.\u003c/p\u003e\n\u003cp\u003eThe first step was to make the existing layers start supporting a tenant id.\u003c/p\u003e\n\u003ch3 id=\"step-1-introduction-of-a-tenant-id-in-the-clients\"\u003eStep 1: Introduction of a tenant ID in the clients.\u003c/h3\u003e\n\u003cp\u003eThe first step in the conversion process involved introducing a tenant ID in the clients. This step was relatively straightforward as the mobile and web applications for the two tenants were already distinct. We accomplished this by introducing a \u003ccode\u003etenant_id\u003c/code\u003e header. Each client application was responsible for determining which tenant it was serving. For example, the retail tenant was identified by the \u003ccode\u003eRETAIL\u003c/code\u003e value, while the HNI tenant was identified by the \u003ccode\u003eHNI\u003c/code\u003e value.\u003c/p\u003e\n\u003ch3 id=\"step-2-modification-of-services-to-accept-the-tenant-id-header-and-logging-confirmation\"\u003eStep 2: Modification of services to accept the tenant ID header and logging confirmation.\u003c/h3\u003e\n\u003cp\u003eIn the second step, we made modifications to the services to ensure they could accept the tenant ID header. To verify that all APIs were aware of this header, we introduced a standardized log format: \u0026ldquo;REQUEST FOR TENANT: \u0026lt;TENANT_ID\u0026gt;\u0026rdquo;.\u003c/p\u003e\n\u003cp\u003eTo confirm the successful implementation, we ran a test script and closely observed the logs. Through this process, we were able to validate that all APIs now supported the mentioned header and were properly logging the tenant ID in the desired format.\u003c/p\u003e\n\u003ch3 id=\"step-3-enhancement-of-domain-objects-to-record-tenant-ids\"\u003eStep 3: Enhancement of domain objects to record tenant IDs.\u003c/h3\u003e\n\u003cp\u003eIn the third step, we enhanced the domain objects, including Request, Response, DTOs, and Entities, to start recording the tenant IDs. The default value for the tenant was set as \u003ccode\u003eRETAIL\u003c/code\u003e, considering it was the existing (and up until this point, the only) tenant for us.\u003c/p\u003e\n\u003cp\u003eBy updating the domain objects, we ensured that the tenant ID was associated with the relevant data throughout the system, including the database. This allowed us to distinguish and manage the data specific to each tenant effectively.\u003c/p\u003e\n\u003ch3 id=\"step-4-modification-of-restclient-and-downstream-api-integration-code\"\u003eStep 4: Modification of restClient and downstream API integration code.\u003c/h3\u003e\n\u003cp\u003eIn the fourth step, we made necessary modifications to our restClient and other downstream API integration code to start sending the tenant ID header to the downstream services. This ensured that the tenant context was propagated throughout the system.\u003c/p\u003e\n\u003cp\u003eSimultaneously, other teams were also working on enabling their services to utilize the tenant ID header, making their services multi-tenant compatible. This collaborative effort ensured that all services within the system were aligned and capable of handling multi-tenant functionality.\u003c/p\u003e\n\u003ch3 id=\"step-5-enhancement-of-configurations\"\u003eStep 5: Enhancement of configurations.\u003c/h3\u003e\n\u003cp\u003eIn the fifth step, we focused on enhancing the configurations. Firstly, we segregated the configurations for the service, separating the technical configurations from the functionality-specific configurations. This allowed for better organization and management of the configurations.\u003c/p\u003e\n\u003cp\u003eNext, we enhanced the business configurations to support multiple copies, each corresponding to a specific tenant. By doing so, we ensured that the correct configuration was picked up based on the provided tenant ID header. This enabled the system to dynamically adjust its behavior and functionality based on the tenant being served.\u003c/p\u003e\n\u003cp\u003eWith these configuration enhancements, we achieved greater flexibility and adaptability in catering to the specific needs and requirements of each tenant within the multi-tenant architecture.\u003c/p\u003e\n\u003ch3 id=\"step-6-analysis-of-functional-implementation-and-code-refactoring\"\u003eStep 6: Analysis of functional implementation and code refactoring.\u003c/h3\u003e\n\u003cp\u003eIn the sixth step, we conducted a thorough analysis of the functional differences between the two tenants. This phase presented the most complex challenges in transitioning to a multi-tenant architecture. Our approach involved carefully examining the codebase and implementing the following methods:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eFor cases where the two tenants required completely different implementations, we abstracted common code into a parent class and created separate implementations for each tenant. We leveraged Spring\u0026rsquo;s dependency injection (DI) feature to dynamically instantiate the appropriate implementation based on the input headers.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWhen functionality was specific to only one tenant, we introduced custom hookpoints. These hookpoints had empty implementations by default, but we provided specific implementations for the relevant tenants.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIn some scenarios, we utilized extensions for certain DTOs and Entities. These extensions acted as wrappers around the base objects, and special tables were created to persist the additional columns required for the extensions.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eThroughout this process, we also took the opportunity to address existing technical debts. The codebase had been developed over a period of time by individuals with varying backgrounds and experience levels. We viewed this as an opportunity to refactor the existing code wherever possible, resulting in the elimination of numerous technical debts.\u003c/p\u003e\n\u003cp\u003eIn cases where methods could be reused without any impact, we left them untouched to ensure minimal disruption to the existing functionality.\u003c/p\u003e\n\u003ch3 id=\"step-7-thorough-testing-of-auditing-and-reporting-services-for-different-tenants\"\u003eStep 7: Thorough testing of auditing and reporting services for different tenants.\u003c/h3\u003e\n\u003cp\u003eIn the next step, we conducted comprehensive testing of our auditing and reporting services to ensure that accurate and appropriate reports were generated for each tenant.\u003c/p\u003e\n\u003cp\u003eDuring the testing phase, we verified that the auditing service captured the relevant data specific to each tenant, recording the necessary information for auditing purposes. We also ensured that the reporting service generated reports tailored to the requirements of each tenant, providing them with the specific insights and analytics they needed.\u003c/p\u003e\n\u003cp\u003eOnce the multi-tenant platform was fully prepared, we introduced the second tenant for beta testing. During the beta phase, the second tenant operated on the platform for a couple of months. This period allowed us to gather valuable feedback, identify any minor bugs or issues, and make enhancements to improve the overall performance and user experience.\u003c/p\u003e\n\u003cp\u003eAfter addressing the initial bugs and incorporating the necessary enhancements, we proceeded to launch the platform for both tenants. Over time, any remaining minor bugs were diligently resolved, ensuring a stable and reliable experience for both tenants.\u003c/p\u003e\n\u003cp\u003eToday, our multi-tenant platform runs strong with numerous tenants, reducing the bank\u0026rsquo;s running and maintenance costs. By leveraging a single software platform for multiple tenants, the bank achieves economies of scale, optimizing resource utilization and streamlining processes. Updates and enhancements benefit all tenants simultaneously, saving time and costs. The multi-tenant architecture offers cost efficiency, scalability, and streamlined operations, driving greater savings while providing a reliable solution for clients.\u003c/p\u003e\n","description":"Multi tenancy in a software architecture","image":"/images/blogs/multi-tenant-architecture/banner.png","permalink":"http://localhost:1313/blogs/multi-tenant-architecture/","title":"Multi Tenant Architecture"},{"content":"\u003cp\u003eA microservice is a small, independent application that is designed to perform a specific business functionality. It is a software architectural style that structures an application as a collection of loosely coupled services, each running in its own process and communicating with each other through lightweight mechanisms, such as HTTP or messaging protocols.\u003c/p\u003e\n\u003cp\u003eToday, we are going to learn how to structure an individual microservice application, and break it down into different components. We are going to use SpringBoot as a tool to design the microservice.\u003c/p\u003e\n\u003cp\u003eIn a typical API structure in Spring Boot, the responsibilities of each section are as follows:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eController\u003c/strong\u003e: The controller layer is responsible for handling incoming HTTP requests and returning the appropriate HTTP responses. It acts as an entry point for the API and is responsible for routing requests to the appropriate service methods. Controllers are typically annotated with \u003ccode\u003e\u003ccode\u003e@RestController\u003c/code\u003e\u003c/code\u003e and define the API endpoints using \u003ccode\u003e\u003ccode\u003e@RequestMapping\u003c/code\u003e\u003c/code\u003e or other mapping annotations.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eService\u003c/strong\u003e: The service layer contains the business logic of the application. It encapsulates the operations that need to be performed on the data and interacts with the repository layer to fetch or modify data. Services are typically annotated with \u003ccode\u003e\u003ccode\u003e@Service\u003c/code\u003e\u003c/code\u003e and are responsible for implementing complex business rules and validations.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eRepository\u003c/strong\u003e: The repository layer is responsible for interacting with the underlying data source, such as a database. It provides methods to perform CRUD (Create, Read, Update, Delete) operations on the data. Repositories are typically interfaces that extend the \u003ccode\u003e\u003ccode\u003eJpaRepository\u003c/code\u003e\u003c/code\u003e or other Spring Data repository interfaces. These interfaces define methods for common database operations, and Spring Data automatically generates the implementation at runtime.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eHere is a diagram that illustrates the flow of data and responsibilities between these sections:\u003c/p\u003e\n\u003cimg src=\"/images/blogs/kareena-kapoor/microservices-architecture.png\" alt=\"Image\" alt=\"A structure of a microservice, using springboot\" class=\"responsive-image\"\u003e\n\u003cp\u003eThis sequence diagram shows how a typical API request is handled. The client sends an HTTP request to the controller, which then delegates the request to the service layer. The service layer interacts with the repository to fetch or modify data from the database. The result is then passed back through the layers, and the controller returns an HTTP response to the client.\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s important to note that this is a common structure, but it can vary depending on the complexity and requirements of your application. Spring Boot provides flexibility in organizing your code and allows you to customize the structure according to your needs.\u003c/p\u003e\n\u003cp\u003eLately, I\u0026rsquo;ve noticed a recurring anti-pattern emerging in the implementations of this particular structure during my code reviews. I\u0026rsquo;ve humorously coined this anti-pattern as \u0026ldquo;Kareena Kapoor Controllers and Fluffy Services.\u0026rdquo; While it may sound amusing, it points to a deeper issue that needs to be addressed. The term \u0026ldquo;Kareena Kapoor Controllers\u0026rdquo; refers to instances where the controller layer is kept very thin, resembling a \u0026ldquo;zero figure.\u0026rdquo;\nOn the other hand, \u0026ldquo;Fluffy Services\u0026rdquo; alludes to service components that prioritize a love for food and an indulgence in unnecessary code, resulting in overweight and cumbersome services. These anti-patterns can hinder the overall maintainability and scalability of the codebase.\u003c/p\u003e\n  \u003cimg src=\"/images/blogs/kareena-kapoor/Kareena.jpeg\" alt=\"Image\" alt=\"Kareena Kapoor and her zero figure\" style=\"max-width: 40%\"\u003e\n\u003cp\u003eKareena Kapoor, a renowned Bollywood actress, has been known for her passion and dedication towards maintaining a \u0026ldquo;zero figure.\u0026rdquo; Throughout her career, she has been an advocate for fitness and healthy living, inspiring many with her disciplined approach towards her physique. Kareena\u0026rsquo;s commitment to achieving and maintaining a slim figure has been evident through her strict diet plans, rigorous workout routines, and regular yoga practice.\u003c/p\u003e\n\u003cp\u003eFluffy, whose real name is Gabriel Iglesias, is a renowned comedian celebrated for his distinctive style and larger-than-life personality. Embracing his choice to live as a larger-sized individual, Fluffy\u0026rsquo;s comedy resonates with audiences as he fearlessly incorporates his love of food and his own experiences with weight into his routines.\n\u003cimg src=\"/images/blogs/kareena-kapoor/fluffy.jpg\" alt=\"Image\" alt=\"Kareena Kapoor and her zero figure\" style=\"max-width: 40%\"\u003e\u003c/p\u003e\n\u003ch2 id=\"example-of-the-anti-pattern\"\u003eExample of the anti-pattern\u003c/h2\u003e\n  \u003cimg src=\"/images/blogs/kareena-kapoor/badcontroller.png\" alt=\"Image\" alt=\"Bad Controller\" style=\"max-width: 80%\"\u003e\n  \u003cimg src=\"/images/blogs/kareena-kapoor/badservice.png\" alt=\"Image\" alt=\"Bad Service\" style=\"max-width: 80%\"\u003e\n\u003cp\u003eIn this particular anti-pattern, developers tend to favor keeping the controllers slim, with their main responsibility being to connect with the REST API and handle incoming requests.\nAll other tasks, including the preparation of the response, are delegated to a service layer. While this approach may seem appealing, it can have several consequences that need to be considered:\u003c/p\u003e\n\u003ch3 id=\"failure-to-use-controller-as-an-orchestrator-router\"\u003eFailure to use controller as an Orchestrator (Router)\u003c/h3\u003e\n\u003cp\u003eOne of the important roles of the controller is to perform routing. By calling a single service method, we may fail to break down the business functionality into smaller tasks and underutilize the potential of the controller.\n\u003cimg src=\"/images/blogs/kareena-kapoor/controller-usage.png\" alt=\"Image\" alt=\"A better usage of controllers\" style=\"max-width: 80%\"\u003e\u003c/p\u003e\n\u003cp\u003eIn order to address this, a change that can be made is to move away from the One-Controller-One-Service approach and instead break down the business tasks into smaller, independent chunks. Each functionality should be assigned to separate services, allowing for better modularity and maintainability.\u003c/p\u003e\n\u003cp\u003eIn this revised approach, the controller\u0026rsquo;s responsibilities should include:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eValidating the Request\u003c/strong\u003e: The controller should ensure that the incoming request is valid and meets the required criteria. This involves checking the request parameters, headers, and any necessary validations to ensure the integrity of the data.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eExtracting Data and Preparing Domain Objects\u003c/strong\u003e: The controller should extract the relevant data from the request and prepare the necessary domain objects or DTOs (Data Transfer Objects) required by the services. This involves mapping the request data to the appropriate objects and ensuring that the data is in the correct format for further processing.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eInvoking Independent Services\u003c/strong\u003e: Instead of calling a single service method, the controller should invoke multiple independent services, each responsible for a specific business functionality. This allows for better separation of concerns and promotes reusability of services across different controllers or applications.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eRouting Between Service Methods\u003c/strong\u003e: The controller should handle the routing between different service methods based on the business logic and requirements. This involves invoking the appropriate service methods in the correct sequence and passing the necessary data between them.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003ePreparing the Response Object and Handling Success/Failure Responses\u003c/strong\u003e: After the services have completed their tasks, the controller is responsible for preparing the response object that will be sent back to the API caller. This includes constructing the response object, setting appropriate status codes, headers, and any additional metadata. The controller should handle both successful responses and failure scenarios, such as handling exceptions, error handling, and returning appropriate error messages or status codes.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"failing-single-responsibility\"\u003eFailing Single responsibility\u003c/h3\u003e\n\u003cp\u003eIn addition to the previous points, there is another crucial aspect to consider when discussing the anti-pattern of Fluffy services. By following this pattern, we inadvertently place excessive pressure on a single service method.\u003c/p\u003e\n\u003cp\u003eBy doing so, we violate the \u0026ldquo;S\u0026rdquo; (Single Responsibility Principle) of the SOLID principles. Combining multiple tasks within a single method not only hampers the maintainability and readability of the code, but it also significantly impacts the reusability of the service method.\u003c/p\u003e\n\u003cp\u003eWhen a service method takes on multiple responsibilities, it becomes tightly coupled to the specific business functionality it serves. This lack of separation of concerns limits its potential for reuse in other parts of the application or in different applications altogether. It also makes the code more fragile and difficult to modify, as any changes to one task may inadvertently impact other tasks within the same method.\u003c/p\u003e\n\u003cp\u003eTo address this issue, it is essential to adhere to the principles of SOLID, particularly the Single Responsibility Principle. By breaking down the tasks within a service method into smaller, independent methods, we can achieve better modularity and improve the reusability of the code. Each method should focus on a single task, making it more maintainable, testable, and adaptable to future changes.\u003c/p\u003e\n\u003cp\u003eBy ensuring that each service method has a clear and distinct responsibility, we can enhance the overall structure of the application, promote code reuse, and facilitate better collaboration among developers. Embracing the SOLID principles enables us to build scalable and maintainable software systems that can evolve with changing requirements.\u003c/p\u003e\n\u003ch3 id=\"tight-coupling-across-the-layers\"\u003eTight coupling across the layers\u003c/h3\u003e\n\u003cp\u003eIn the context of the mentioned anti-pattern architecture, there is a common flaw that arises when the request object is passed down to services and sometimes even to the repository. This approach increases coupling between the layers and can lead to issues in the long run.\u003c/p\u003e\n\u003cp\u003eIdeally, as we transition from one layer to another, the domain model should undergo a transformation. Each layer should have its own specific domain model that it operates with. By passing the request object directly through the layers, we violate this principle and introduce unnecessary coupling.\u003c/p\u003e\n\u003cp\u003eWhen the request object is propagated throughout the layers, it creates a tight coupling between the presentation layer, service layer, and data access layer. Any changes or modifications to the request object can have a cascading effect, requiring modifications in multiple layers. This not only makes the codebase more complex and error-prone but also hinders the flexibility and maintainability of the system.\u003c/p\u003e\n\u003cp\u003eTo address this issue, it is recommended to introduce separate domain models for each layer. The request object received by the controller should be transformed into a domain model that is specific to the service layer. This allows each layer to have its own representation of the data, tailored to its specific needs and responsibilities. The domain model can then be further transformed into a data model specific to the repository layer for data access.\u003c/p\u003e\n\u003cimg src=\"/images/blogs/kareena-kapoor/microservices-architecture-domain.png\" alt=\"Image\" alt=\"A structure of a microservice, using springboot\" class=\"responsive-image\"\u003e\n\u003cp\u003eIn the context of the discussed architecture, it is crucial for the controller to have awareness of the request and response structure of the API, as it serves as a common aspect for clients. However, it is equally important for the services to remain unaware of the specifics of REST requests and responses. In fact, services should not even assume that the requests are originating from a REST API. This design approach allows for future flexibility, as the same service may be invoked from a batch process or a non-REST-based application.\u003c/p\u003e\n\u003cp\u003eBy decoupling the services from REST objects, we ensure that they can be reused seamlessly in different environments without the need for workarounds or \u0026ldquo;Jugad.\u0026rdquo; If services become dependent on REST objects, it would require creating fake request objects to reuse them in non-REST environments, which introduces unnecessary complexity and compromises the maintainability of the codebase.\u003c/p\u003e\n\u003cp\u003eInstead, the controller should act as a mediator between the clients and the services, translating the incoming requests into a format that the services can understand. The controller should extract the necessary data from the request and pass it to the services using domain objects or DTOs (Data Transfer Objects) that are specific to the services\u0026rsquo; domain model. This way, the services remain agnostic to the underlying communication protocol or technology.\u003c/p\u003e\n\u003ch3 id=\"reduced-readability\"\u003eReduced readability\u003c/h3\u003e\n\u003cp\u003eHaving large service methods significantly impacts code readability, making it difficult to understand the different tasks being performed within them. This lack of clarity increases the chances of bugs being present in the code, which may go unnoticed during code reviews.\u003c/p\u003e\n\u003cp\u003eFurthermore, maintaining and modifying long methods becomes increasingly challenging as the codebase evolves over time. Making changes to a lengthy method can be cumbersome and error-prone, as it requires a deep understanding of the entire method\u0026rsquo;s functionality and potential side effects.\u003c/p\u003e\n\u003cp\u003eBy breaking down these large service methods into smaller, more focused methods, we can improve code readability and comprehension. Each method should have a clear and specific responsibility, making it easier to understand and reason about the code. This not only enhances readability but also reduces the likelihood of introducing bugs and improves the maintainability of the codebase.\u003c/p\u003e\n\u003cp\u003eAdditionally, modularizing the code in this manner enables better code organization and promotes the practice of separating concerns. Each method can be individually tested, making it easier to identify and fix issues during the development process.\u003c/p\u003e\n\u003ch3 id=\"reduced-testability\"\u003eReduced testability\u003c/h3\u003e\n\u003cp\u003eWhen a method becomes overloaded with too many items, it adversely affects its testability. Having a large number of items within a method makes it challenging to isolate and test specific functionalities or scenarios effectively.\u003c/p\u003e\n\u003cp\u003eWith an overly complex method, writing comprehensive unit tests becomes difficult. It becomes cumbersome to set up the necessary test data, define the expected behavior, and cover all possible code paths within the method. This lack of testability can result in inadequate test coverage, leaving potential bugs undetected.\u003c/p\u003e\n\u003cp\u003eFurthermore, maintaining and updating tests for a method with many items becomes a time-consuming task. Any modifications to the method\u0026rsquo;s functionality may require extensive modifications to the corresponding tests, increasing the risk of introducing errors or overlooking critical test scenarios.\u003c/p\u003e\n\u003cp\u003eTo improve testability, it is essential to follow the principle of single responsibility and break down complex methods into smaller, more focused units. Each method should have a clear and specific purpose, making it easier to write targeted tests that cover specific functionalities.\u003c/p\u003e\n\u003cp\u003eBy breaking down the code into smaller units, it becomes simpler to set up test scenarios, define expected outcomes, and ensure comprehensive test coverage. This promotes better code quality, reduces the likelihood of bugs, and enhances the overall maintainability of the codebase.\u003c/p\u003e\n\u003cp\u003eIn summary, just like in our physical health, extremes of being too thin or too fat are not healthy for code either. Similarly, in code, having methods that are either too thin or too fat can lead to issues. For a healthy codebase, it is important to strive for methods that are of fair size.\u003c/p\u003e\n\u003cp\u003eMethods that are too thin, with minimal logic and functionality, can result in scattered code and reduced readability. They may also lead to an excessive number of method calls, impacting performance. On the other hand, methods that are too fat, with an overwhelming amount of code and multiple responsibilities, become difficult to understand, maintain, and test.\u003c/p\u003e\n\u003cp\u003eBy aiming for methods of fair size, we achieve a balance between readability, maintainability, and testability. Fair-sized methods are focused and encapsulate a single responsibility, making them easier to comprehend and troubleshoot. They promote code reusability, as well as the separation of concerns, which enhances modularity and scalability.\u003c/p\u003e\n\u003cp\u003eFair-sized methods also facilitate effective testing. With a clear understanding of the method\u0026rsquo;s functionality, it becomes easier to define test cases and ensure comprehensive coverage. Additionally, maintaining and modifying fair-sized methods is more manageable, as they are less prone to hidden bugs and allow for targeted modifications without affecting unrelated parts of the codebase.\u003c/p\u003e\n\u003cp\u003eIn conclusion, striving for fair-sized methods contributes to a healthier codebase. It promotes readability, maintainability, and testability, enabling developers to efficiently understand, modify, and test the code. By finding the right balance, we can achieve a codebase that is not too thin or too fat, but rather healthy and robust.\u003c/p\u003e\n","description":"Learn about the 'Kareena Kapoor Controllers and Fluffy Services' anti-pattern and its impact on code maintainability and scalability. Understand the importance of breaking down business functionality, adhering to the Single Responsibility Principle, and avoiding tight coupling between layers. Discover how reducing method size improves code readability, maintainability, and testability. Gain insights into the consequences of having too many items in a method and the benefits of adopting a modular approach. Enhance your understanding of best practices for creating a healthy and robust codebase.","image":"/images/blogs/kareena-kapoor/banner.png","permalink":"http://localhost:1313/blogs/kareena-kapoor-controllers/","title":"Kareena Kapoor Controllers and the Fluffy Services"},{"content":"\u003ch2 id=\"trigger-for-this-blog\"\u003eTrigger for this blog\u003c/h2\u003e\n\u003cp\u003eI was pair programming during an interview, where the candidate had shared his screen and I was working side by side with him, trying to understand the solution he was presenting.\u003c/p\u003e\n\u003cp\u003ePicture this: his computer screen flashed a message about his Windows license being expired. I couldn\u0026rsquo;t help but ask, and what I heard surprised me. He proudly admitted to using a \u0026ldquo;not-so-legal\u0026rdquo; version of Windows because he wanted to stick it to Microsoft for their high prices, especially when there\u0026rsquo;s a free alternative like Ubuntu available.\nI did not take a screenshot, but it looked something like this\u003cbr\u003e\n\u003cimg src=\"/images/blogs/cost-of-software/windows.png\" alt=\"windows license message\" class=\"responsive-image\"\u003e\u003c/p\u003e\n\u003cp\u003eWhile I didn\u0026rsquo;t quite agree with his rebel approach, it got me thinking about the world of free software. We often don\u0026rsquo;t realize that even though it\u0026rsquo;s \u0026ldquo;free\u0026rdquo; for us to use, it still costs a lot to make and maintain.\u003c/p\u003e\n\u003cp\u003eBehind the scenes, there\u0026rsquo;s a whole lot of work and money that goes into making software. Skilled folks spend hours building it, and there\u0026rsquo;s ongoing work to fix bugs, make updates, and help users when things go wrong.\u003c/p\u003e\n\u003cp\u003eThen there\u0026rsquo;s the tech stuff—servers, cloud services, and all the gear needed to keep the software running smoothly. That stuff costs money too, even if the software itself doesn\u0026rsquo;t.\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s not forget the unsung heroes—the folks who volunteer their time and skills to improve these programs. Their work is priceless, even though it often goes unnoticed.\u003c/p\u003e\n\u003cp\u003eAnd there\u0026rsquo;s more—legal things like licenses, making sure everything\u0026rsquo;s legit, and following the rules. That\u0026rsquo;s another part of the cost.\u003c/p\u003e\n\u003ch2 id=\"different-types-of-costs-involved\"\u003eDifferent types of costs involved\u003c/h2\u003e\n\u003cp\u003eThe cost of software development can be categorized into following phases :\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eBefore Development: Laying the Foundation\u003c/li\u003e\n\u003cli\u003eDuring development\u003c/li\u003e\n\u003cli\u003eExecution costs\u003c/li\u003e\n\u003cli\u003eMaintenance costs\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"before-development\"\u003eBefore development\u003c/h3\u003e\n\u003cp\u003eIt\u0026rsquo;s not like a person wakes up on a day, and starts writing code.Before any coding begins, there\u0026rsquo;s a lot of groundwork to be done. A lot of thinking goes before deciding if we need a software or not. We need to understand if desinging a new software solution will be cost effective and worth all the efforts put in. Let\u0026rsquo;s take a closer look at the different phases and the expenses that come along.  Here are a few of important steps:\u003c/p\u003e\n\u003ch4 id=\"research-and-feasibility-studies\"\u003eResearch and feasibility studies\u003c/h4\u003e\n\u003cp\u003eResearch and feasibility studies play a vital role in software development by conducting market analysis and assessing the viability and potential return on investment of a project. Through thorough research, organizations can identify the target audience, understand market trends, and evaluate the demand for the proposed software solution. Cost-benefit analysis helps estimate development and maintenance costs, while assessing potential revenue streams and cost savings. Evaluating technical feasibility ensures that the project aligns with available resources and technology. Additionally, considering legal and regulatory requirements ensures compliance and mitigates risks. By conducting these studies, organizations can make informed decisions about the viability and potential success of a software project.\u003c/p\u003e\n\u003cimg src=\"/images/blogs/cost-of-software/business-research.png\" alt=\"Image\" alt=\"Business research is the most important activity for any software development process to begin\" class=\"responsive-image-bounded\"\u003e\n\u003ch4 id=\"business-analysis\"\u003eBusiness Analysis\u003c/h4\u003e\n\u003cp\u003eBusiness analysts observe the operations and existing processes, and understand if a software is going to help. Business Analysts define the business use cases for and against having a software system automating the existing processes.\nThey define the scope of software solution.\u003c/p\u003e\n\u003ch4 id=\"ux-designs\"\u003eUX designs\u003c/h4\u003e\n\u003cp\u003eTo save money, UX designers start by creating simple wireframe designs. These are like rough sketches that show how the final software will look and function. Stakeholders can experiment with these wireframes, making sure they meet their needs. Once everyone is happy, more detailed designs are created to give a realistic feel for the final software.\u003c/p\u003e\n\u003ch4 id=\"solutions-and-alternates\"\u003eSolutions and Alternates\u003c/h4\u003e\n\u003cimg src=\"/images/blogs/cost-of-software/solutions-and-alternates.png\" alt=\"Image\" alt=\"Designing a solution to the problems is one of the most important aspect for maintainability\" class=\"responsive-image-bounded\"\u003e\n\u003cp\u003eAfter the UX designs are approved, a solution architect steps in. They analyze different options and compare costs, efforts, and how well each solution fits the project. The architect decides on the technologies, frameworks, and quality standards to be used, setting the stage for development.\u003c/p\u003e\n\u003ch4 id=\"platform\"\u003ePlatform\u003c/h4\u003e\n\u003cp\u003eDevelopers need a platform to work on, a place to store their code, test it, and build the final software. This platform also manages access and collaboration among team members. The DevOps team takes care of setting up this platform, making sure everything runs smoothly.\u003c/p\u003e\n\u003ch4 id=\"tools-and-technologies\"\u003eTools and Technologies\u003c/h4\u003e\n\u003cp\u003eThe different steps mentioned earlier require licenses for different tools to create and store decisions.\ne.g. Figma for storing UX designs, Confluence for storing scope and documents and many more tools. Don\u0026rsquo;t forget the hardware (or cloud) costs for developing the platform. Operating systems, CICD pipelines setup, and other licenses have to be acquired at this stage.\u003c/p\u003e\n\u003ch3 id=\"during-development\"\u003eDuring development\u003c/h3\u003e\n\u003ch4 id=\"software-engineering\"\u003eSoftware Engineering\u003c/h4\u003e\n\u003cp\u003eObviously, we need software engineers to build a software. Frontend engineers who develop user facing applications (Mobile / Web or other channels), Backend engineers, the work is not directly visible, but they prepare all the required information for frontend applications by creating the APIs to be consumed. The data engineers refine and improve the data that is consumed within the application.\u003c/p\u003e\n\u003ch4 id=\"quality-assurance\"\u003eQuality assurance\u003c/h4\u003e\n\u003cp\u003eQAs prevent any mishaps to happen once the software is released. They check and validate the quality of the software to check if it meets the requirements.\nDifferent types of quality checks include : Functional testing, unit testing, integration testing, performance testing, acceptance testing, security testing etc.\u003c/p\u003e\n\u003ch4 id=\"project-management\"\u003eProject Management\u003c/h4\u003e\n\u003cp\u003eWhen there are so many different people working together we need a team to manage all the people and the product being developed. There are different roles e.g. product owners, Project Managers (or Scrum masters depending upon the way of working) to manage all the people.\u003c/p\u003e\n\u003ch4 id=\"tools-and-technologies-1\"\u003eTools and technologies\u003c/h4\u003e\n\u003cp\u003eSimilar to previous phase, many tools are required in the development phase that also incurr the costs. The IDEs for software enginners, Jira to keep a track for the issues, communication tools e.g. MS Teams for the team to communicate with each other.\u003c/p\u003e\n\u003ch3 id=\"after-development\"\u003eAfter development\u003c/h3\u003e\n\u003ch4 id=\"version-updates\"\u003eVersion Updates\u003c/h4\u003e\n\u003cp\u003eRegular maintenance is crucial for software even after its development phase. The continuous discovery of new vulnerabilities in software necessitates the need for regular updates. By updating dependencies, we can effectively mitigate the potential risks posed by these newly discovered issues in the code. Thus, maintaining and updating the software ensures its security and stability in the face of evolving threats.\u003c/p\u003e\n\u003ch4 id=\"feature-enhancement\"\u003eFeature enhancement\u003c/h4\u003e\n\u003cp\u003eAs we begin utilizing the software, it is common to identify the need for new features or modifications to existing ones. In such cases, redevelopment becomes necessary to incorporate these changes effectively. Whether it involves adding new functionalities or altering existing ones, the redevelopment process ensures that the software aligns with evolving requirements and user expectations. By undertaking these redevelopment efforts, we can enhance the software\u0026rsquo;s capabilities, improve user experience, and keep up with the dynamic nature of the business environment.\u003c/p\u003e\n\u003ch4 id=\"platform-1\"\u003ePlatform\u003c/h4\u003e\n\u003cp\u003eTo successfully run any web-based software, it is essential to maintain a comprehensive platform. This platform encompasses all the necessary components and infrastructure required for the software to function optimally. Some key aspects of maintaining a full-fledged platform include:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHardware and Networking\u003c/strong\u003e: Adequate hardware resources, such as servers, storage, and networking equipment, need to be provisioned and maintained to support the software\u0026rsquo;s operations. This involves ensuring proper hardware configuration, capacity planning, and monitoring to handle the software\u0026rsquo;s workload efficiently.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eOperating System and Software Dependencies\u003c/strong\u003e: The platform must have a stable and up-to-date operating system that is compatible with the software. Additionally, any required software dependencies, such as libraries, frameworks, or runtime environments, should be installed, configured, and regularly updated to ensure compatibility and security.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eDatabase Management\u003c/strong\u003e: If the software relies on a database, it is crucial to maintain the database platform. This includes database installation, configuration, performance optimization, backup and recovery procedures, and ongoing monitoring to ensure data integrity and availability.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eSecurity Measures\u003c/strong\u003e: The platform should implement robust security measures to protect the software and its data. This involves implementing firewalls, intrusion detection systems, access controls, encryption, and regular security updates to mitigate potential vulnerabilities and safeguard against unauthorized access or data breaches.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eMonitoring and Logging\u003c/strong\u003e: Continuous monitoring of the platform is essential to identify and address any performance issues, errors, or anomalies. Logging mechanisms should be in place to capture relevant system and application logs for troubleshooting and auditing purposes.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eScalability and High Availability\u003c/strong\u003e: The platform should be designed to handle the software\u0026rsquo;s scalability requirements, allowing it to accommodate growing user bases and increasing workloads. Implementing redundancy, load balancing, and failover mechanisms ensures high availability and minimizes downtime.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eBackup and Disaster Recovery\u003c/strong\u003e: Regular backups of the software and its associated data should be performed to protect against data loss or system failures. A well-defined disaster recovery plan should be in place to ensure the software can be quickly restored in the event of a catastrophic failure.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eBy maintaining a full-fledged platform, organizations can ensure the smooth and reliable operation of their web-based software, providing users with a stable and secure experience.\u003c/p\u003e\n\u003ch2 id=\"why-free-and-open-source-software\"\u003eWhy Free and open source software\u003c/h2\u003e\n\u003cp\u003eOrganizations often face a fascinating dilemma: why offer free software when there are costs involved? Take Ubuntu, Google, Hotmail, or even tools like ChatGPT, Google Bard, and Microsoft Copilot as examples. The reasons behind this seemingly counterintuitive approach are captivating.\u003c/p\u003e\n\u003cp\u003eBy offering free software, organizations can penetrate the market and capture a vast user base. This serves as a foundation for future conversions to paid versions or enticing users with premium features. Additionally, organizations embrace open-source software to foster collaboration and innovation within the community. They invite developers from all walks of life to contribute their expertise, resulting in continuous improvement and wider adoption.\u003c/p\u003e\n\u003cp\u003eFree software also serves as a gateway to valuable user data. Organizations gather insights into user behavior, preferences, and trends, fueling product refinement, targeted advertising, and the development of new offerings. While the software itself may be free, organizations find alternative revenue streams. They introduce premium versions, complementary products, or clever advertising models to monetize their offerings.\u003c/p\u003e\n\u003cp\u003eProviding something valuable for free creates a bond between organizations and users. By offering tools or services at no cost, organizations establish themselves as industry leaders, building trust and loyalty among users who appreciate the value they receive. This sets organizations apart from the crowd, giving them a competitive edge and positioning them as trailblazers within their respective industries.\u003c/p\u003e\n\u003cp\u003eDespite the costs related to development, maintenance, infrastructure, and support, organizations navigate this complex landscape and find innovative ways to sustain their business in the long run. The provision of free software not only benefits users but also allows organizations to thrive and make a significant impact in the digital world.\u003c/p\u003e\n\u003cp\u003eWhen it comes to social media platforms, the puzzle of why they are offered for free becomes clearer when considering several key factors. Advertising revenue plays a significant role, as platforms generate income by providing targeted advertising opportunities to reach a broad audience. User data collection is another crucial aspect, as platforms gather vast amounts of data to understand their audience better and deliver personalized advertising experiences.\u003c/p\u003e\n\u003cp\u003eMany social media platforms also offer additional services and features tailored for businesses, which often come with paid options. These services, along with partnerships with businesses, contribute to the revenue generation of social media platforms. Some platforms employ freemium models, offering a basic set of features for free while charging for premium or advanced features. Additionally, in-app purchases or virtual goods within games or applications hosted on social media platforms generate revenue through a percentage of these transactions.\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s important to note that although social media platforms are free for users, they are not without costs. Users indirectly \u0026ldquo;pay\u0026rdquo; for the service by providing their personal data, which is used for targeted advertising. The availability of free social media platforms allows for widespread adoption, user engagement, and network effects, which, in turn, attract advertisers and drive revenue.\u003c/p\u003e\n\u003cp\u003eIn conclusion, there are many costs involved to develop and maintain a software, however many organizations give free and open source software because there are benefits to them.\nThis does not mean that developing software is easy and we should not belittle the software developers, just because some free alternatives are available.\u003c/p\u003e\n","description":"Discover the costs of developing free software, beyond monetary investments. Explore freemium models, user data value, and benefits of contributing to free software.","image":"/images/blogs/cost-of-software/header.png","permalink":"http://localhost:1313/blogs/cost-of-software/","title":"Cost of developing a software"},{"content":"\u003ch2 id=\"once-upon-a-time\"\u003eOnce Upon a time\u003c/h2\u003e\n\u003cp\u003ein Sriganganagar, a legend was born\u003c/p\u003e\n","description":"Once upon a time","image":"/images/blogs/cost-of-software/header.png","permalink":"http://localhost:1313/anecdotes/anecdote1/","title":"My Stories"},{"content":"\u003ch1 id=\"objective\"\u003eObjective\u003c/h1\u003e\n\u003cp\u003eTo design and implement a self-hosted CAPTCHA service that is secure, user-friendly, scalable, and compliant with relevant regulations, ensuring robust protection against automated bots while providing a seamless experience for legitimate users.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRequirements and Scope for a Self-Hosted CAPTCHA Service\u003c/strong\u003e\u003c/p\u003e\n\u003cdetails style=\"margin: 10px\"\u003e\n    \u003csummary\u003e\n        \u003cspan style=\"display:inline;padding: 20px; font-weight: bold\"\u003e\n        Functional Requirements\n        \u003c/span\u003e\n    \u003c/summary\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eRequirement ID\u003c/th\u003e\n          \u003cth\u003eDescription\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eFR-001\u003c/td\u003e\n          \u003ctd\u003eSupport text-based CAPTCHA where users identify distorted text or solve a simple question.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eFR-002\u003c/td\u003e\n          \u003ctd\u003eSupport image-based CAPTCHA where users select specific objects or patterns in images (e.g., “Select all the traffic lights”).\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eFR-003\u003c/td\u003e\n          \u003ctd\u003eProvide an audio CAPTCHA alternative for visually impaired users.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eFR-004\u003c/td\u003e\n          \u003ctd\u003eImplement logical CAPTCHA with simple logical or arithmetic puzzles (e.g., “What is 5 + 3?”).\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/details\u003e\n \u003cdetails style=\"margin: 10px\"\u003e\n \u003csummary\u003e\n \u003cspan style=\"display:inline;padding: 20px; font-weight: bold\"\u003e\n User Interaction\n \u003c/span\u003e\n \u003c/summary\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eRequirement ID\u003c/th\u003e\n          \u003cth\u003eDescription\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eFR-005\u003c/td\u003e\n          \u003ctd\u003eProvide options for audio CAPTCHAs and high-contrast visual modes to ensure accessibility.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eFR-006\u003c/td\u003e\n          \u003ctd\u003eSupport localization for different languages and regions.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eFR-007\u003c/td\u003e\n          \u003ctd\u003eEnsure CAPTCHAs are responsive and easy to interact with on mobile devices.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eFR-008\u003c/td\u003e\n          \u003ctd\u003eDesign CAPTCHAs to minimize disruption to the user experience, such as implementing invisible or behavior-based CAPTCHAs for legitimate users.\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n \u003c/details\u003e\n\u003cdetails style=\"margin: 10px\"\u003e\n\u003csummary\u003e\n\u003cspan style=\"display:inline;padding: 20px; font-weight: bold\"\u003e\nSecurity Features\u003c/span\u003e\n\u003c/summary\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eRequirement ID\u003c/th\u003e\n          \u003cth\u003eDescription\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eFR-009\u003c/td\u003e\n          \u003ctd\u003eRandomize CAPTCHA challenges to prevent replay attacks and ensure unpredictability.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eFR-010\u003c/td\u003e\n          \u003ctd\u003eInclude mechanisms to identify and block bots based on suspicious activity.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eFR-011\u003c/td\u003e\n          \u003ctd\u003eBind CAPTCHA challenges to specific user sessions to prevent reuse.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eFR-012\u003c/td\u003e\n          \u003ctd\u003eImplement thresholds to limit the frequency of CAPTCHA requests from a single IP address.\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/details\u003e\n\u003cdetails style=\"margin: 10px\"\u003e\n\u003csummary\u003e\n\u003cspan style=\"display:inline;padding: 20px; font-weight: bold\"\u003e\nIntegration\n\u003c/span\u003e\n\u003c/summary\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eRequirement ID\u003c/th\u003e\n          \u003cth\u003eDescription\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eFR-013\u003c/td\u003e\n          \u003ctd\u003eProvide RESTful APIs for easy integration with various platforms and applications.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eFR-014\u003c/td\u003e\n          \u003ctd\u003eOffer a lightweight JavaScript library for embedding CAPTCHAs on websites.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eFR-015\u003c/td\u003e\n          \u003ctd\u003eAllow customization of CAPTCHA appearance and difficulty based on application requirements.\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/details\u003e\n\u003cdetails style=\"margin: 10px\"\u003e\n\u003csummary\u003e\n\u003cspan style=\"display:inline;padding: 20px; font-weight: bold\"\u003e\nManagement and Monitoring\n\u003c/span\u003e\n\u003c/summary\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eRequirement ID\u003c/th\u003e\n          \u003cth\u003eDescription\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eFR-016\u003c/td\u003e\n          \u003ctd\u003eProvide an admin dashboard to manage settings, view analytics, and monitor CAPTCHA usage.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eFR-017\u003c/td\u003e\n          \u003ctd\u003eMaintain logs of CAPTCHA activity for troubleshooting and security audits.\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/details\u003e\n\u003cdetails style=\"margin: 10px\"\u003e\n\u003csummary\u003e\n\u003cspan style=\"display:inline;padding: 20px; font-weight: bold\"\u003e\nNon-Functional Requirements\n\u003c/span\u003e\n\u003c/summary\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eRequirement ID\u003c/th\u003e\n          \u003cth\u003eDescription\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eNFR-001\u003c/td\u003e\n          \u003ctd\u003eEnsure CAPTCHA challenges load within 200ms to minimize user wait times.\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eNFR-002\u003c/td\u003e\n          \u003ctd\u003eDesign the service to handle high traffic volumes without degradation in performance.\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/details\u003e\n\u003chr\u003e\n\u003ch3 id=\"context\"\u003e\u003cstrong\u003eContext\u003c/strong\u003e\u003c/h3\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cimg \n    id=\"Context-diagram\"\n    src=\"http://localhost:1313/images/solutions/self-hosted-captcha/c4/1.context-diagram-Context_diagram_for_Captcha_Service.png\" \n    alt=\"Context Diagram for Captcha solution\" \n    title=\"Context Diagram for Captcha solution\" \n    class=\"responsive zoomable\" \n    style=\"ZgotmplZ\" \n    loading=\"lazy\" \n    width=\"600\" \n    height=\"400\" \n    data-light=\"http://localhost:1313/images/solutions/self-hosted-captcha/c4/1.context-diagram-Context_diagram_for_Captcha_Service.png\"\n    data-dark=\"http://localhost:1313/images/solutions/self-hosted-captcha/c4/1.context-diagram-Context_diagram_for_Captcha_Service-dark.png\"\u003e\n\n\n\u003cdiv id=\"image-overlay\" class=\"hidden\"\u003e\n    \u003cdiv id=\"overlay-content\"\u003e\n        \u003cimg id=\"overlay-image\" src=\"\"\u003e\n        \u003cbutton id=\"close-overlay\"\u003e\u0026times;\u003c/button\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\n\n\u003cscript\u003e\n   document.addEventListener('theme-changed-event', function (event) {\n       const image = document.getElementById(\"Context-diagram\");\n       const selectedTheme = event.detail.theme;\n       image.src = selectedTheme === 'dark' ? image.dataset.dark : image.dataset.light;\n   });\n\n   document.addEventListener('DOMContentLoaded', function () {\n       const image = document.getElementById(\"Context-diagram\");\n       const isDarkMode = document.body.classList.contains(\"dark\");\n       image.src = isDarkMode ? image.dataset.dark : image.dataset.light;\n   });\n\n   \n   document.addEventListener('DOMContentLoaded', function () {\n       const image = document.getElementById(\"Context-diagram\");\n       const overlay = document.getElementById(\"image-overlay\");\n       const overlayImage = document.getElementById(\"overlay-image\");\n       const closeButton = document.getElementById(\"close-overlay\");\n\n       let isDragging = false;\n       let offsetX, offsetY;\n\n       \n       image.addEventListener(\"click\", function () {\n           overlayImage.src = image.src;\n           overlay.classList.remove(\"hidden\");\n           document.body.style.overflow = \"hidden\"; \n       });\n\n       \n       overlay.addEventListener(\"click\", function (event) {\n           if (event.target === overlay) {\n               closeOverlay();\n           }\n       });\n\n       \n       closeButton.addEventListener(\"click\", function () {\n           closeOverlay();\n       });\n\n       \n       document.addEventListener(\"keydown\", function (event) {\n           if (event.key === \"Escape\") {\n               closeOverlay();\n           }\n       });\n\n       \n       function closeOverlay() {\n           overlay.classList.add(\"hidden\");\n           document.body.style.overflow = \"auto\"; \n       }\n\n       \n       overlayImage.addEventListener(\"mousedown\", function (event) {\n           isDragging = true;\n           offsetX = event.clientX - overlayImage.getBoundingClientRect().left;\n           offsetY = event.clientY - overlayImage.getBoundingClientRect().top;\n           overlayImage.style.cursor = \"grabbing\";\n           event.preventDefault();\n       });\n\n       document.addEventListener(\"mousemove\", function (event) {\n           if (isDragging) {\n               overlayImage.style.position = \"absolute\";\n               overlayImage.style.left = (event.clientX - offsetX) + \"px\";\n               overlayImage.style.top = (event.clientY - offsetY) + \"px\";\n           }\n       });\n\n       document.addEventListener(\"mouseup\", function () {\n           isDragging = false;\n           overlayImage.style.cursor = \"grab\";\n       });\n   });\n\u003c/script\u003e\n\n\n\u003cstyle\u003e\n     \n    #image-overlay {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: rgba(0, 0, 0, 0.8);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 9999;\n        opacity: 0;\n        visibility: hidden;\n        transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;\n    }\n\n     \n    #image-overlay:not(.hidden) {\n        opacity: 1;\n        visibility: visible;\n    }\n\n     \n    #overlay-content {\n        position: relative;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n     \n    #overlay-image {\n        max-width: 70% !important;\n        max-height: 70% !important;\n        border-radius: 8px;\n        box-shadow: 0px 4px 10px rgba(255, 255, 255, 0.2);\n        transition: transform 0.2s ease-in-out;\n        cursor: grab;\n        position: relative;\n    }\n\n     \n    #close-overlay {\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        background: rgba(255, 255, 255, 0.9);\n        border: none;\n        font-size: 28px;\n        font-weight: bold;\n        color: black;\n        padding: 5px 12px;\n        cursor: pointer;\n        border-radius: 50%;\n        transition: background 0.3s ease-in-out;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    #close-overlay:hover {\n        background: rgba(255, 255, 255, 1);\n    }\n\n     \n    #overlay-content {\n        position: relative;\n    }\n\n    #close-overlay {\n        right: -15px;\n        top: -15px;\n        width: 30px;\n        height: 30px;\n        line-height: 20px;\n        text-align: center;\n    }\n\n     \n    .hidden {\n        display: none;\n    }\n\u003c/style\u003e\n\n\u003cp\u003eThe captcha system is designed to differentiate the users between the humans and the automated robots.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eRobot\u003c/strong\u003e :\nA robot is an automated system that mimicks the behaviour of a human. It has not so good intentions. There are a few assumptions about this robot :\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eIt is an automated script e.g. selenium or other tool\u003c/li\u003e\n\u003cli\u003eIt requires specific types of plugins\u003c/li\u003e\n\u003cli\u003eIt tries to fill up the form using some acquired information\u003c/li\u003e\n\u003cli\u003eIt tries to fill up as many details as possible\u003c/li\u003e\n\u003cli\u003eIt doesn\u0026rsquo;t \u0026ldquo;See\u0026rdquo; the view the way humans do, instead views it as the html code.\u003c/li\u003e\n\u003cli\u003eThe mouse movement and typing speed of a robot is generally consistent\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003eUser\u003c/strong\u003e : A human user of the application, who has good intentions.\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eA user is prone to human errors.\u003c/li\u003e\n\u003cli\u003eA user is less consistent in behaviour.\u003c/li\u003e\n\u003cli\u003eA user is generally slower than a bot.\u003c/li\u003e\n\u003cli\u003eA user views the application from eyes or screen-readers.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003eAdmin\u003c/strong\u003e : A human with advanced authorization to manage and govern how the captcha functionality will behave.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eClient Applications\u003c/strong\u003e : Client Applications or User Applications are the human facing applications that are prone to bot attacks. These services contain public information and we want to stop the navigation if a bot tries to access this application.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eAdmin Application\u003c/strong\u003e : This is a protected application, not accessible to common public. The admin users landup on this portal to manage the configurations for captcha.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eCaptcha Service\u003c/strong\u003e : This is the main microservice to manage the captcha behaviour.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eOther Services\u003c/strong\u003e : Other microservices that may want to utilize captcha creation and validation.\u003c/p\u003e\n\u003ch3 id=\"admin-app-client-container\"\u003e\u003cstrong\u003eAdmin app Client Container\u003c/strong\u003e\u003c/h3\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cimg \n    id=\"Admin-container-diagram\"\n    src=\"http://localhost:1313/images/solutions/self-hosted-captcha/c4/2.1.container-admin-application-Admin_Client_application_Container.png\" \n    alt=\"Admin Client application Container\" \n    title=\"Admin Client application Container for Captcha solution\" \n    class=\"responsive zoomable\" \n    style=\"ZgotmplZ\" \n    loading=\"lazy\" \n    width=\"600\" \n    height=\"400\" \n    data-light=\"http://localhost:1313/images/solutions/self-hosted-captcha/c4/2.1.container-admin-application-Admin_Client_application_Container.png\"\n    data-dark=\"http://localhost:1313/images/solutions/self-hosted-captcha/c4/2.1.container-admin-application-Admin_Client_application_Container-dark.png\"\u003e\n\n\n\u003cdiv id=\"image-overlay\" class=\"hidden\"\u003e\n    \u003cdiv id=\"overlay-content\"\u003e\n        \u003cimg id=\"overlay-image\" src=\"\"\u003e\n        \u003cbutton id=\"close-overlay\"\u003e\u0026times;\u003c/button\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\n\n\u003cscript\u003e\n   document.addEventListener('theme-changed-event', function (event) {\n       const image = document.getElementById(\"Admin-container-diagram\");\n       const selectedTheme = event.detail.theme;\n       image.src = selectedTheme === 'dark' ? image.dataset.dark : image.dataset.light;\n   });\n\n   document.addEventListener('DOMContentLoaded', function () {\n       const image = document.getElementById(\"Admin-container-diagram\");\n       const isDarkMode = document.body.classList.contains(\"dark\");\n       image.src = isDarkMode ? image.dataset.dark : image.dataset.light;\n   });\n\n   \n   document.addEventListener('DOMContentLoaded', function () {\n       const image = document.getElementById(\"Admin-container-diagram\");\n       const overlay = document.getElementById(\"image-overlay\");\n       const overlayImage = document.getElementById(\"overlay-image\");\n       const closeButton = document.getElementById(\"close-overlay\");\n\n       let isDragging = false;\n       let offsetX, offsetY;\n\n       \n       image.addEventListener(\"click\", function () {\n           overlayImage.src = image.src;\n           overlay.classList.remove(\"hidden\");\n           document.body.style.overflow = \"hidden\"; \n       });\n\n       \n       overlay.addEventListener(\"click\", function (event) {\n           if (event.target === overlay) {\n               closeOverlay();\n           }\n       });\n\n       \n       closeButton.addEventListener(\"click\", function () {\n           closeOverlay();\n       });\n\n       \n       document.addEventListener(\"keydown\", function (event) {\n           if (event.key === \"Escape\") {\n               closeOverlay();\n           }\n       });\n\n       \n       function closeOverlay() {\n           overlay.classList.add(\"hidden\");\n           document.body.style.overflow = \"auto\"; \n       }\n\n       \n       overlayImage.addEventListener(\"mousedown\", function (event) {\n           isDragging = true;\n           offsetX = event.clientX - overlayImage.getBoundingClientRect().left;\n           offsetY = event.clientY - overlayImage.getBoundingClientRect().top;\n           overlayImage.style.cursor = \"grabbing\";\n           event.preventDefault();\n       });\n\n       document.addEventListener(\"mousemove\", function (event) {\n           if (isDragging) {\n               overlayImage.style.position = \"absolute\";\n               overlayImage.style.left = (event.clientX - offsetX) + \"px\";\n               overlayImage.style.top = (event.clientY - offsetY) + \"px\";\n           }\n       });\n\n       document.addEventListener(\"mouseup\", function () {\n           isDragging = false;\n           overlayImage.style.cursor = \"grab\";\n       });\n   });\n\u003c/script\u003e\n\n\n\u003cstyle\u003e\n     \n    #image-overlay {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: rgba(0, 0, 0, 0.8);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 9999;\n        opacity: 0;\n        visibility: hidden;\n        transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;\n    }\n\n     \n    #image-overlay:not(.hidden) {\n        opacity: 1;\n        visibility: visible;\n    }\n\n     \n    #overlay-content {\n        position: relative;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n     \n    #overlay-image {\n        max-width: 70% !important;\n        max-height: 70% !important;\n        border-radius: 8px;\n        box-shadow: 0px 4px 10px rgba(255, 255, 255, 0.2);\n        transition: transform 0.2s ease-in-out;\n        cursor: grab;\n        position: relative;\n    }\n\n     \n    #close-overlay {\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        background: rgba(255, 255, 255, 0.9);\n        border: none;\n        font-size: 28px;\n        font-weight: bold;\n        color: black;\n        padding: 5px 12px;\n        cursor: pointer;\n        border-radius: 50%;\n        transition: background 0.3s ease-in-out;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    #close-overlay:hover {\n        background: rgba(255, 255, 255, 1);\n    }\n\n     \n    #overlay-content {\n        position: relative;\n    }\n\n    #close-overlay {\n        right: -15px;\n        top: -15px;\n        width: 30px;\n        height: 30px;\n        line-height: 20px;\n        text-align: center;\n    }\n\n     \n    .hidden {\n        display: none;\n    }\n\u003c/style\u003e\n\n\u003ch3 id=\"user-app-client-application\"\u003e\u003cstrong\u003eUser app client application\u003c/strong\u003e\u003c/h3\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cimg \n    id=\"User-App-container-diagram\"\n    src=\"http://localhost:1313/images/solutions/self-hosted-captcha/c4/2.2.container-client-application-User_Client_application_Container.png\" \n    alt=\"User Client application Container\" \n    title=\"User Client application Container for Captcha solution\" \n    class=\"responsive zoomable\" \n    style=\"ZgotmplZ\" \n    loading=\"lazy\" \n    width=\"600\" \n    height=\"400\" \n    data-light=\"http://localhost:1313/images/solutions/self-hosted-captcha/c4/2.2.container-client-application-User_Client_application_Container.png\"\n    data-dark=\"http://localhost:1313/images/solutions/self-hosted-captcha/c4/2.2.container-client-application-User_Client_application_Container-dark.png\"\u003e\n\n\n\u003cdiv id=\"image-overlay\" class=\"hidden\"\u003e\n    \u003cdiv id=\"overlay-content\"\u003e\n        \u003cimg id=\"overlay-image\" src=\"\"\u003e\n        \u003cbutton id=\"close-overlay\"\u003e\u0026times;\u003c/button\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\n\n\u003cscript\u003e\n   document.addEventListener('theme-changed-event', function (event) {\n       const image = document.getElementById(\"User-App-container-diagram\");\n       const selectedTheme = event.detail.theme;\n       image.src = selectedTheme === 'dark' ? image.dataset.dark : image.dataset.light;\n   });\n\n   document.addEventListener('DOMContentLoaded', function () {\n       const image = document.getElementById(\"User-App-container-diagram\");\n       const isDarkMode = document.body.classList.contains(\"dark\");\n       image.src = isDarkMode ? image.dataset.dark : image.dataset.light;\n   });\n\n   \n   document.addEventListener('DOMContentLoaded', function () {\n       const image = document.getElementById(\"User-App-container-diagram\");\n       const overlay = document.getElementById(\"image-overlay\");\n       const overlayImage = document.getElementById(\"overlay-image\");\n       const closeButton = document.getElementById(\"close-overlay\");\n\n       let isDragging = false;\n       let offsetX, offsetY;\n\n       \n       image.addEventListener(\"click\", function () {\n           overlayImage.src = image.src;\n           overlay.classList.remove(\"hidden\");\n           document.body.style.overflow = \"hidden\"; \n       });\n\n       \n       overlay.addEventListener(\"click\", function (event) {\n           if (event.target === overlay) {\n               closeOverlay();\n           }\n       });\n\n       \n       closeButton.addEventListener(\"click\", function () {\n           closeOverlay();\n       });\n\n       \n       document.addEventListener(\"keydown\", function (event) {\n           if (event.key === \"Escape\") {\n               closeOverlay();\n           }\n       });\n\n       \n       function closeOverlay() {\n           overlay.classList.add(\"hidden\");\n           document.body.style.overflow = \"auto\"; \n       }\n\n       \n       overlayImage.addEventListener(\"mousedown\", function (event) {\n           isDragging = true;\n           offsetX = event.clientX - overlayImage.getBoundingClientRect().left;\n           offsetY = event.clientY - overlayImage.getBoundingClientRect().top;\n           overlayImage.style.cursor = \"grabbing\";\n           event.preventDefault();\n       });\n\n       document.addEventListener(\"mousemove\", function (event) {\n           if (isDragging) {\n               overlayImage.style.position = \"absolute\";\n               overlayImage.style.left = (event.clientX - offsetX) + \"px\";\n               overlayImage.style.top = (event.clientY - offsetY) + \"px\";\n           }\n       });\n\n       document.addEventListener(\"mouseup\", function () {\n           isDragging = false;\n           overlayImage.style.cursor = \"grab\";\n       });\n   });\n\u003c/script\u003e\n\n\n\u003cstyle\u003e\n     \n    #image-overlay {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: rgba(0, 0, 0, 0.8);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 9999;\n        opacity: 0;\n        visibility: hidden;\n        transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;\n    }\n\n     \n    #image-overlay:not(.hidden) {\n        opacity: 1;\n        visibility: visible;\n    }\n\n     \n    #overlay-content {\n        position: relative;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n     \n    #overlay-image {\n        max-width: 70% !important;\n        max-height: 70% !important;\n        border-radius: 8px;\n        box-shadow: 0px 4px 10px rgba(255, 255, 255, 0.2);\n        transition: transform 0.2s ease-in-out;\n        cursor: grab;\n        position: relative;\n    }\n\n     \n    #close-overlay {\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        background: rgba(255, 255, 255, 0.9);\n        border: none;\n        font-size: 28px;\n        font-weight: bold;\n        color: black;\n        padding: 5px 12px;\n        cursor: pointer;\n        border-radius: 50%;\n        transition: background 0.3s ease-in-out;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    #close-overlay:hover {\n        background: rgba(255, 255, 255, 1);\n    }\n\n     \n    #overlay-content {\n        position: relative;\n    }\n\n    #close-overlay {\n        right: -15px;\n        top: -15px;\n        width: 30px;\n        height: 30px;\n        line-height: 20px;\n        text-align: center;\n    }\n\n     \n    .hidden {\n        display: none;\n    }\n\u003c/style\u003e\n\n\u003ch3 id=\"captcha-microservice\"\u003e\u003cstrong\u003eCaptcha Microservice\u003c/strong\u003e\u003c/h3\u003e\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003cimg \n    id=\"captcha-ms-diagram\"\n    src=\"http://localhost:1313/images/solutions/self-hosted-captcha/c4/2.3.container-captcha-service-Captcha_Service_Container.png\" \n    alt=\"Captcha Microservice Container\" \n    title=\"Captcha Microservice Container\" \n    class=\"responsive zoomable\" \n    style=\"ZgotmplZ\" \n    loading=\"lazy\" \n    width=\"600\" \n    height=\"400\" \n    data-light=\"http://localhost:1313/images/solutions/self-hosted-captcha/c4/2.3.container-captcha-service-Captcha_Service_Container.png\"\n    data-dark=\"http://localhost:1313/images/solutions/self-hosted-captcha/c4/2.3.container-captcha-service-Captcha_Service_Container-dark.png\"\u003e\n\n\n\u003cdiv id=\"image-overlay\" class=\"hidden\"\u003e\n    \u003cdiv id=\"overlay-content\"\u003e\n        \u003cimg id=\"overlay-image\" src=\"\"\u003e\n        \u003cbutton id=\"close-overlay\"\u003e\u0026times;\u003c/button\u003e\n    \u003c/div\u003e\n\u003c/div\u003e\n\n\n\u003cscript\u003e\n   document.addEventListener('theme-changed-event', function (event) {\n       const image = document.getElementById(\"captcha-ms-diagram\");\n       const selectedTheme = event.detail.theme;\n       image.src = selectedTheme === 'dark' ? image.dataset.dark : image.dataset.light;\n   });\n\n   document.addEventListener('DOMContentLoaded', function () {\n       const image = document.getElementById(\"captcha-ms-diagram\");\n       const isDarkMode = document.body.classList.contains(\"dark\");\n       image.src = isDarkMode ? image.dataset.dark : image.dataset.light;\n   });\n\n   \n   document.addEventListener('DOMContentLoaded', function () {\n       const image = document.getElementById(\"captcha-ms-diagram\");\n       const overlay = document.getElementById(\"image-overlay\");\n       const overlayImage = document.getElementById(\"overlay-image\");\n       const closeButton = document.getElementById(\"close-overlay\");\n\n       let isDragging = false;\n       let offsetX, offsetY;\n\n       \n       image.addEventListener(\"click\", function () {\n           overlayImage.src = image.src;\n           overlay.classList.remove(\"hidden\");\n           document.body.style.overflow = \"hidden\"; \n       });\n\n       \n       overlay.addEventListener(\"click\", function (event) {\n           if (event.target === overlay) {\n               closeOverlay();\n           }\n       });\n\n       \n       closeButton.addEventListener(\"click\", function () {\n           closeOverlay();\n       });\n\n       \n       document.addEventListener(\"keydown\", function (event) {\n           if (event.key === \"Escape\") {\n               closeOverlay();\n           }\n       });\n\n       \n       function closeOverlay() {\n           overlay.classList.add(\"hidden\");\n           document.body.style.overflow = \"auto\"; \n       }\n\n       \n       overlayImage.addEventListener(\"mousedown\", function (event) {\n           isDragging = true;\n           offsetX = event.clientX - overlayImage.getBoundingClientRect().left;\n           offsetY = event.clientY - overlayImage.getBoundingClientRect().top;\n           overlayImage.style.cursor = \"grabbing\";\n           event.preventDefault();\n       });\n\n       document.addEventListener(\"mousemove\", function (event) {\n           if (isDragging) {\n               overlayImage.style.position = \"absolute\";\n               overlayImage.style.left = (event.clientX - offsetX) + \"px\";\n               overlayImage.style.top = (event.clientY - offsetY) + \"px\";\n           }\n       });\n\n       document.addEventListener(\"mouseup\", function () {\n           isDragging = false;\n           overlayImage.style.cursor = \"grab\";\n       });\n   });\n\u003c/script\u003e\n\n\n\u003cstyle\u003e\n     \n    #image-overlay {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: rgba(0, 0, 0, 0.8);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        z-index: 9999;\n        opacity: 0;\n        visibility: hidden;\n        transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;\n    }\n\n     \n    #image-overlay:not(.hidden) {\n        opacity: 1;\n        visibility: visible;\n    }\n\n     \n    #overlay-content {\n        position: relative;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n     \n    #overlay-image {\n        max-width: 70% !important;\n        max-height: 70% !important;\n        border-radius: 8px;\n        box-shadow: 0px 4px 10px rgba(255, 255, 255, 0.2);\n        transition: transform 0.2s ease-in-out;\n        cursor: grab;\n        position: relative;\n    }\n\n     \n    #close-overlay {\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        background: rgba(255, 255, 255, 0.9);\n        border: none;\n        font-size: 28px;\n        font-weight: bold;\n        color: black;\n        padding: 5px 12px;\n        cursor: pointer;\n        border-radius: 50%;\n        transition: background 0.3s ease-in-out;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    #close-overlay:hover {\n        background: rgba(255, 255, 255, 1);\n    }\n\n     \n    #overlay-content {\n        position: relative;\n    }\n\n    #close-overlay {\n        right: -15px;\n        top: -15px;\n        width: 30px;\n        height: 30px;\n        line-height: 20px;\n        text-align: center;\n    }\n\n     \n    .hidden {\n        display: none;\n    }\n\u003c/style\u003e\n\n","description":"Discover the costs of developing free software, beyond monetary investments. Explore freemium models, user data value, and benefits of contributing to free software.","image":"/images/solutions/self-hosted-captcha/self-hosted-captcha.png","permalink":"http://localhost:1313/solutions/self-hosted-captcha/self-hosted-captcha/","title":"Self Hosted Captcha"},{"content":"\u003ch1 id=\"learning-by-gamification\"\u003eLearning by Gamification\u003c/h1\u003e\n\u003cp\u003eIf you have ever taught a child who is just starting school, you may have noticed that concepts that seem simple to you can be quite complex for them. This is due to their limited understanding and lack of prior knowledge. Additionally, children often have short attention spans and can easily be distracted by their surroundings, making it even more challenging to teach them new concepts.\u003c/p\u003e\n\u003cp\u003eIn order to better understand how to teach these concepts effectively, I reached out to a school teacher named Mrs. Rasika. She graciously invited me to observe one of her classes, and the experience made me nostalgic for my own school days. During this day, I witnessed Mrs. Rasika using creative and engaging methods to teach different subjects.\u003c/p\u003e\n\u003cp\u003eFor example, in the Hindi class, the students learned the alphabet ह (pronounced as \u0026ldquo;ha\u0026rdquo;) by observing a dancing elephant (हाथी). This visual representation helped the children to associate the shape of the letter with its corresponding sound, and it\u0026rsquo;s usage in words.\u003c/p\u003e\n\u003cp\u003eThe teacher came dressed as an elephant and danced with the kids.\u003c/p\u003e\n\u003cimg src=\"/images/blogs/gamification/hathi.png\" alt=\"Image\" alt=\"An image of an elephant dancing, while explaining how is it written in devnagri\" class=\"responsive-image-bounded\" style=\"max-height: 200px;\"\u003e\n\u003cp\u003eIn the English class, the teacher told a story about a pet dog, which not only entertained the students but also helped them to understand and remember new vocabulary words in context.\u003c/p\u003e\n\u003cimg src=\"/images/blogs/gamification/maths.png\" alt=\"Image\" alt=\"A kid playing with blocks in maths class\" class=\"responsive-image-bounded\" style=\"max-height: 200px;\"\u003e\n\u003cp\u003eIn the math class, instead of simply studying from textbooks, the students engaged in hands-on activities. They played with different blocks and toys, which not only made the learning experience more enjoyable but also helped them grasp mathematical concepts through practical application. Additionally, the class had a competitive element, with teams competing for scores. One way to earn points was by correctly answering addition problems, which motivated the students to pay attention and actively participate in the learning process.\u003c/p\u003e\n\u003cp\u003eInspired by Mrs. Rasika\u0026rsquo;s teaching methods, I decided to try a similar approach with my own child. I used the game of cricket to teach him the multiplication table of 4. Each time he hit a boundary, he had to calculate the runs, which required him to multiply the number of runs per boundary by the number of boundaries hit. This interactive and enjoyable activity not only made learning more fun for my child but also helped him practice and remember the multiplication facts.\u003c/p\u003e\n\u003cp\u003eBy incorporating elements of play, storytelling, and hands-on activities into the learning process, both Mrs. Rasika and myself were able to make complex concepts more accessible and engaging for the children. This approach not only captures their attention but also encourages active participation and deeper understanding of the subject matter.\u003c/p\u003e\n\u003ch1 id=\"gamification-as-adults\"\u003eGamification as adults\u003c/h1\u003e\n\u003cp\u003eYou know, one thing that I\u0026rsquo;ve come to realize is that as adults, we often mistakenly believe that we have everything figured out and that we\u0026rsquo;ve outgrown the challenges of learning difficult concepts. But the truth is, we still get bored, struggle with attention span, and crave love and affection, just like kids do.\u003c/p\u003e\n\u003cp\u003eRecently, I had a dental appointment that reminded me of this truth. As the dentist used various drilling machines and large syringes in my mouth, I couldn\u0026rsquo;t help but feel fear and pain. It was a daunting experience, and my discomfort was clearly written all over my face. But then, something unexpected happened.\u003c/p\u003e\n\u003cimg src=\"/images/blogs/gamification/dentist.png\" alt=\"Image\" alt=\"An horrifying image of a dentist using tools on his patients\" class=\"responsive-image-bounded\" style=\"max-height: 200px;\"\u003e\n\u003cp\u003eDuring my dental appointment, I could feel the fear and discomfort as the dentist used various tools and instruments in my mouth. It was not a pleasant experience, to say the least. However, my dentist, being perceptive to my unease, took a different approach to help ease my anxiety.\u003c/p\u003e\n\u003cp\u003eIn a voice that resembled the way I talk to my own child, she spoke to me with calmness and patience. She acknowledged that the upcoming step might cause some pain, but she reassured me that I was a strong person who could handle it. Her words weren\u0026rsquo;t meant to belittle or make light of my fears; instead, they were genuine and empathetic.\u003c/p\u003e\n\u003cp\u003eWhat struck me the most was when she referred to the anesthetic injection as \u0026ldquo;The magic medicine to remove the pain.\u0026rdquo; By using such a playful and imaginative term, she transformed the injection from something intimidating into a more approachable concept. It was as if she was giving me a secret power to overcome the discomfort.\u003c/p\u003e\n\u003cp\u003eIn that moment, I realized that I wasn\u0026rsquo;t alone in feeling afraid. Even as adults, we can still experience fear and anxiety in unfamiliar or uncomfortable situations. The dentist\u0026rsquo;s choice of words and her empathetic approach created a connection between us. It made me feel understood and supported, which helped alleviate some of my apprehension.\u003c/p\u003e\n\u003cp\u003eGamification is a powerful tool used by businesses to captivate customers and drive desired actions. DuoLingo, a language learning application, is a prime example of how gamification can be effectively employed to engage users.\u003c/p\u003e\n\u003cp\u003ePersonally, I have developed a fondness for DuoLingo while learning Dutch. Recently, I achieved an impressive streak of 400 consecutive days of learning. This accomplishment has sparked my curiosity to explore how DuoLingo utilizes gamification to keep its customers engaged and motivated.\u003c/p\u003e\n\u003cp\u003eLet\u0026rsquo;s delve into the strategies DuoLingo employs to create an immersive and captivating experience for its users through gamification.\u003c/p\u003e\n\u003ch2 id=\"the-animated-characters\"\u003eThe Animated Characters\u003c/h2\u003e\n\u003cp\u003eDuoLingo enhances its gamified experience through the use of animated characters. These characters, such as Lily and others mentioned on \u003ca href=\"https://duoplanet.com/duolingo-character-names/\"\u003ehttps://duoplanet.com/duolingo-character-names/\u003c/a\u003e, bring a touch of personality to the exercises and notifications. I find it delightful when Lily appears in my notifications and playfully tells me, \u0026ldquo;I don\u0026rsquo;t care if you want to maintain your streak or not\u0026rdquo; with a playful emoticon. It\u0026rsquo;s a clever way of reminding me to continue learning while adding a humorous twist.\n\u003cimg src=\"/images/blogs/gamification/lily.png\" alt=\"Image\" alt=\"Lily's sarcasm\" class=\"responsive-image-bounded\"\u003e\nAdditionally, the course track on DuoLingo is designed to resemble a path. With each successfully completed exercise, users progress along this path, reaching new milestones. This visual representation of progress gives a sense of accomplishment and advancement, making the learning journey feel more tangible and rewarding.\u003c/p\u003e\n\u003ch2 id=\"streaks-and-daily-goals\"\u003eStreaks and Daily Goals\u003c/h2\u003e\n\u003cp\u003eStreaks are a valuable tool for measuring the number of consecutive days we have completed a task. They play a significant role in building habits. While streaks can be used to track daily progress, it is also essential to consider the frequency of performing a task per week to establish a consistent habit.\u003c/p\u003e\n\u003cp\u003eIn the case of DuoLingo, streaks are implemented as a gamification element to encourage users to maintain a regular learning habit. When I initially achieved a streak of 30 days, I was rewarded with a sense of accomplishment and received an award. It was a fun and motivating experience. Now, with a streak of 400 days, the stakes feel higher. Skipping a day would mean losing all the hard work and effort invested in reaching this milestone.\u003c/p\u003e\n\u003cimg src=\"/images/blogs/gamification/streak.jpeg\" alt=\"Image\" alt=\"Streak\" class=\"responsive-image-bounded\" style=\"max-height: 350px;\"\u003e\n\u003cp\u003eDuoLingo leverages streaks and daily goals to incentivize users to log in and complete lessons every day. By maintaining a streak, users build momentum and motivation to continue learning and progressing in their language learning journey. The longer the streak, the more determined and motivated users become to maintain their progress.\u003c/p\u003e\n\u003cp\u003eThe fear of breaking a streak can be a powerful motivator to stay consistent and dedicated to the learning process. DuoLingo understands this and uses streaks as a way to engage and encourage users to make language learning a daily habit.\u003c/p\u003e\n\u003cp\u003eBy implementing streaks and providing rewards for maintaining them, DuoLingo effectively fosters a sense of achievement and motivation among its users. It creates a positive feedback loop that helps individuals stay committed to their language learning goals\u003c/p\u003e\n\u003ch2 id=\"streak-freezes\"\u003eStreak Freezes\u003c/h2\u003e\n\u003cp\u003eBesides learning languages on DuoLingo, I also enjoy playing chess on chess.com. Similar to DuoLingo, chess.com displays streaks for daily puzzles, and I make an effort to keep my streak going there as well. Currently, I stand at around 5 consecutive days of puzzles on chess.com.\u003c/p\u003e\n\u003cp\u003eHowever, there was one particular day when I found myself overwhelmed with work and feeling exhausted. I simply didn\u0026rsquo;t have the energy or mental capacity to manage my streaks, so I decided to prioritize rest and sleep. Unfortunately, this led to the loss of my streak on chess.com. On the bright side, my streak on DuoLingo was maintained thanks to the streak freeze feature they offer.\u003c/p\u003e\n\u003cimg src=\"/images/blogs/gamification/calendar.png\" alt=\"Image\" alt=\"Streak Freeze Calendar\" class=\"responsive-image-bounded\" style=\"max-height: 350px;\"\u003e\n\u003cimg src=\"/images/blogs/gamification/chess-calendar.png\" alt=\"Image\" alt=\"Streak Freeze Calendar Chess.com\" class=\"responsive-image-bounded\" style=\"max-height: 350px;\"\u003e\n\u003cp\u003eStreak freezes are limited opportunities where you can still receive credit for maintaining your streak, even if you don\u0026rsquo;t complete the required tasks. It can be a relief to have this option available, as it allows for some flexibility when life gets busy or circumstances prevent us from engaging in our regular activities. However, it\u0026rsquo;s important to be mindful of the potential trap that comes with streak freezes. The stakes of loosing a streak on chess.com is only ~5 days, while on duolingo - it is 400+ days.\u003c/p\u003e\n\u003cp\u003eWhile streak freezes provide a way to keep your streak alive, it\u0026rsquo;s worth noting that the higher the number of consecutive days, the greater the pressure to maintain it. The desire to preserve a long streak can create a sense of obligation and anxiety, as we feel compelled to avoid breaking it. It\u0026rsquo;s important to find a healthy balance and not let the pressure of streaks overshadow the enjoyment and personal growth that come from these activities.\u003c/p\u003e\n\u003ch2 id=\"gems\"\u003eGems\u003c/h2\u003e\n\u003cp\u003eGems, in the context of DuoLingo, serve as rewards for various accomplishments and actions. They can be earned by completing exercises, participating in friend quests, and other positive interactions within the app. These gems provide a sense of achievement and satisfaction, as they represent tangible rewards for our efforts.\n\u003cimg src=\"/images/blogs/gamification/gems.png\" alt=\"Image\" alt=\"Gems\" class=\"responsive-image-bounded\" style=\"max-height: 350px;\"\u003e\u003c/p\u003e\n\u003cp\u003eWhile I personally don\u0026rsquo;t recall using the gems for any specific purpose within the app, their presence is still significant for engagement. The act of receiving something, even if it\u0026rsquo;s not directly utilized, adds an element of excitement and motivation to the learning experience. It\u0026rsquo;s a way for DuoLingo to acknowledge and appreciate our progress and contributions.\u003c/p\u003e\n\u003ch2 id=\"friend-quests\"\u003eFriend Quests\u003c/h2\u003e\n\u003cp\u003eFriend quests in DuoLingo offer a unique opportunity to connect with other users and work towards a shared goal. By participating in these quests, not only are you helping DuoLingo grow, but you also engage with a diverse community of learners.\u003c/p\u003e\n\u003cimg src=\"/images/blogs/gamification/friend-quest.png\" alt=\"Image\" alt=\"Friend Quests\" class=\"responsive-image-bounded\" style=\"max-height: 350px;\"\u003e\n\u003cp\u003eFriend quests involve collaborating with other users to collectively complete a specific number of exercises within a given time frame. This collaborative aspect adds a sense of camaraderie and teamwork to the language learning experience. It allows you to connect with different individuals who share a common interest in learning languages.\u003c/p\u003e\n\u003cp\u003eEngaging in friend quests not only benefits DuoLingo as a platform but also provides a chance to learn from others and gain new perspectives. It creates a supportive environment where you can exchange tips, motivate each other, and celebrate collective achievements. The shared goal of completing a certain number of exercises within a specified time adds a sense of excitement and purpose to the learning process.\nDuolingo smartly make use of my efforts to bring users back to it\u0026rsquo;s platform, when I call or whatsapp my friend in friend quest, to put efforts and complete tasks otherwise we both will lose.\u003c/p\u003e\n\u003cp\u003eBy participating in friend quests, you not only contribute to the growth of DuoLingo but also expand your network and connect with like-minded individuals. Together, you can encourage each other, share experiences, and work towards achieving language learning milestones.\u003c/p\u003e\n\u003ch2 id=\"xp-and-leaderboards\"\u003eXP and Leaderboards\u003c/h2\u003e\n\u003cp\u003eDuoLingo introduces an experience points (XP) system, where users earn points for completing lessons and exercises. These points contribute to leveling up, creating a sense of achievement and progression. With each level gained, users unlock new content and challenges, providing a sense of accomplishment and advancement in their language learning journey.\u003c/p\u003e\n\u003cp\u003eDuoLingo incorporates social elements by allowing users to connect with friends and participate in leaderboards. Users can see how they rank compared to their friends, fostering friendly competition and a sense of community. This social interaction adds an extra layer of motivation and accountability, as users strive to outperform their peers.\u003c/p\u003e\n\u003cimg src=\"/images/blogs/gamification/leaderboard.png\" alt=\"Image\" alt=\"Leaderboard\" class=\"responsive-image-bounded\" style=\"max-height: 350px;\"\u003e\n\u003cp\u003eAs an application developer, I use duolingo as an inspiration for gamification apps. I am constantly seeking ways to create an enriching experience for my users.\u003c/p\u003e\n\u003cp\u003eIncorporating gamification tools into my application is a powerful strategy to enhance user engagement and satisfaction. By implementing streaks and daily goals, rewards and achievements, social interaction and collaboration, progress tracking and visualization, as well as personalization and customization, I can create an application that not only meets users\u0026rsquo; needs but also keeps them motivated and excited to interact with it. With these gamification elements in place, I can foster a sense of progress, recognition, community, and personalization, making the user experience more enjoyable and meaningful. By leveraging gamification, I can create an application that users love and want to return to, driving long-term usage and loyalty. So, as I embark on this development journey, I am excited to build an application that incorporates these gamification tools, ensuring an engaging and rewarding experience for my users.\u003c/p\u003e\n","description":"Discover the power of gamification in education and language learning with DuoLingo. Explore streaks, rewards, social interaction, and leaderboards that make the learning journey engaging and motivating. Learn how to incorporate gamification techniques into your own applications to enhance user engagement and create a rewarding experience.","image":"/images/blogs/gamification/banner.png","permalink":"http://localhost:1313/blogs/gamification/","title":"Gamification - Make it interesting"},{"content":"\u003cp\u003eSituated between Ahmedabad and Gandhinagar, along the Sabarmati river, GIFT City (Gujarat International Finance Tec-City) emerges as India\u0026rsquo;s beacon of global business excellence. The city\u0026rsquo;s futuristic infrastructure, coupled with its strategic location, sets the stage for a transformative business environment.\u003c/p\u003e\n\u003cdiv class=\"map-container\"\u003e\n\u003ciframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d58688.8183877461!2d72.63974276055461!3d23.16833320432678!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x395e8019d43730db%3A0x7044e9a2cb290ed!2sGujarat%20International%20Finance%20Tec-City%2C%20Gujarat%20382355!5e0!3m2!1sen!2sin!4v1703757182932!5m2!1sen!2sin\" width=\"100%\"  style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"\u003e\u003c/iframe\u003e\n\u003c/div\u003e\nWithin the boundaries of GIFT City, banks are pioneering the concept of IFSC Banking Units (IBUs). These units, akin to offshore branches within the IFSC zone, play a pivotal role in shaping India's global financial connectivity.\n\u003ch2 id=\"empowering-global-business\"\u003eEmpowering Global Business\u003c/h2\u003e\n\u003ch3 id=\"for-foreign-companies\"\u003eFor Foreign Companies:\u003c/h3\u003e\n\u003ch4 id=\"access-to-indian-rupee-market\"\u003eAccess to Indian Rupee Market\u003c/h4\u003e\n\u003cp\u003eIFSC Banking Units (IBUs) in GIFT City make it simpler for businesses to use Indian rupees. Normally, dealing with Indian money involves lots of rules and complicated steps. But with IBUs, companies can work with Indian rupees without facing those complicated rules.\u003c/p\u003e\n\u003ch5 id=\"supportive-regulations\"\u003eSupportive regulations\u003c/h5\u003e\n\u003cp\u003eTraditionally, navigating the Indian financial market involved strict regulations, complex procedures, and significant bureaucratic hurdles. However, IBUs in GiftCity offer a streamlined alternative. They provide a simplified route, allowing businesses to engage directly in Indian rupee-based transactions without being encumbered by the intricacies of the traditional regulatory landscape. They are governed by a flexible regulations as defined by \u003ca href=\"https://www.ifsca.gov.in/\"\u003eIFSCA\u003c/a\u003e.\u003c/p\u003e\n\u003ch5 id=\"efficiency-and-convenience\"\u003eEfficiency and Convenience:\u003c/h5\u003e\n\u003cp\u003eBy leveraging GiftCity Banking Services, foreign companies gain efficiency and convenience in their dealings involving the Indian rupee. They can conduct various financial activities, such as trade, investments, and fundraising, with greater ease and speed, all within the secure and regulated environment of GIFT City. Many such services include\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eEnabling Fundraising Opportunities\u003c/li\u003e\n\u003cli\u003eEnhanced Financial Flexibility:\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch5 id=\"competitive-edge\"\u003eCompetitive Edge:\u003c/h5\u003e\n\u003cp\u003eIFSC Banking Units (IBUs) in GIFT City serve as a catalyst for businesses to gain a competitive edge. These units strategically utilize the tax benefits and streamlined regulatory processes offered within the IFSC to fortify their positions in the competitive landscape.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eTax Incentives\u003c/li\u003e\n\u003cli\u003estreamlined regulations\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"for-indian-companies\"\u003eFor Indian Companies:\u003c/h3\u003e\n\u003ch4 id=\"diversified-funding\"\u003eDiversified Funding\u003c/h4\u003e\n\u003cp\u003eIFSC Banking Units (IBUs) in GIFT City offer businesses the opportunity for diversified funding. Through these units, companies can access funds in different currencies and tap into global capital markets, widening their financial resources.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eInternational Funding Options\u003c/li\u003e\n\u003cli\u003eExploring Global Capital Markets\u003c/li\u003e\n\u003cli\u003eEnhanced Financial Flexibility\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"hedging-solutions\"\u003eHedging Solutions\u003c/h4\u003e\n\u003cp\u003eIFSC Banking Units (IBUs) in GIFT City facilitate effective hedging solutions for businesses. These solutions enable companies to handle currency risks efficiently and enhance the optimization of their international transactions.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMitigating Currency Risks\u003c/li\u003e\n\u003cli\u003eOptimizing International Transactions\u003c/li\u003e\n\u003cli\u003eEnsuring Stability in Transactions\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"international-expansion\"\u003eInternational Expansion\u003c/h4\u003e\n\u003cp\u003eIFSC Banking Units (IBUs) in GIFT City serve as a strategic springboard for businesses aiming at international expansion. These units provide a smooth pathway for companies to enter new markets effortlessly and efficiently.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eStrategic Launchpad\u003c/li\u003e\n\u003cli\u003eReduced Entry Barriers\u003c/li\u003e\n\u003cli\u003eEnabling Market Penetration\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"service-offerings-of-banking-ibus-in-gift-city\"\u003eService Offerings of banking IBUs in GIFT City\u003c/h2\u003e\n\u003ch3 id=\"for-foreign-companies-1\"\u003eFor Foreign Companies:\u003c/h3\u003e\n\u003cp\u003eBanks facilitate cross-border trade for foreign companies by offering loans, guarantees, and specialized trade finance tools. These services streamline international transactions, fostering smoother trade operations.\u003c/p\u003e\n\u003ch4 id=\"foreign-currency-lending\"\u003eForeign Currency Lending\u003c/h4\u003e\n\u003cp\u003eForeign companies operating through GiftCity Branches can access loans and credit facilities in different foreign currencies. This service supports Indian companies seeking to expand globally, offering financial support in varied currencies.\u003c/p\u003e\n\u003ch4 id=\"structured-finance\"\u003eStructured Finance\u003c/h4\u003e\n\u003cp\u003eGiftCity Branches of the banks provide personalized financial solutions across various industries. Tailored to meet diverse sector needs, these bespoke financial solutions empower businesses to navigate complex financial requirements effectively.\u003c/p\u003e\n\u003ch3 id=\"for-indian-companies-1\"\u003eFor Indian Companies:\u003c/h3\u003e\n\u003ch4 id=\"foreign-currency-borrowing\"\u003eForeign Currency Borrowing\u003c/h4\u003e\n\u003cp\u003eGiftCity IBUs offer Indian companies the opportunity to borrow funds in foreign currencies from global markets. This service allows them to access international funds for various business needs.\u003c/p\u003e\n\u003ch4 id=\"global-payment-solutions\"\u003eGlobal Payment Solutions\u003c/h4\u003e\n\u003cp\u003eGiftCity IBUs facilitate seamless cross-border payments and settlements in multiple currencies for Indian companies. These solutions simplify financial transactions, making international payments more efficient.\u003c/p\u003e\n\u003ch2 id=\"legal-and-regulatory-framework-ifscas-role\"\u003eLegal and Regulatory Framework: IFSCA\u0026rsquo;s Role\u003c/h2\u003e\n\u003cp\u003eGIFT City operates within a unique legal and regulatory framework that enables IBUs to efficiently facilitate international financial transactions. The International Financial Services Centre Authority (IFSCA) plays a pivotal role in supervising the IFSC ecosystem, ensuring a flexible and accommodating regulatory environment.\u003c/p\u003e\n\u003ch3 id=\"distinctive-regulatory-environment\"\u003eDistinctive Regulatory Environment\u003c/h3\u003e\n\u003cp\u003eGIFT City functions under a set of regulations designed to support and enhance international financial activities. These regulations, overseen by IFSCA, are tailored to streamline processes and promote innovation within the financial sector.\u003c/p\u003e\n\u003ch3 id=\"ifscas-regulatory-oversight\"\u003eIFSCA\u0026rsquo;s Regulatory Oversight\u003c/h3\u003e\n\u003cp\u003eIFSCA\u0026rsquo;s governance extends across various aspects of the IFSC ecosystem. It ensures a conducive environment by offering a regulatory framework that encourages adaptability and innovation while upholding the integrity of financial transactions.\u003c/p\u003e\n\u003ch2 id=\"impact-and-future-prospects\"\u003eImpact and Future Prospects\u003c/h2\u003e\n\u003cp\u003eAs major Indian and international banks set up IBUs in GIFT City, the city emerges as a pivotal player in global finance. Its capacity to draw foreign investments, fortify India\u0026rsquo;s financial sector, and generate substantial business prospects indicates a promising future.\u003c/p\u003e\n\u003ch3 id=\"becoming-a-global-financial-hub\"\u003eBecoming a Global Financial Hub\u003c/h3\u003e\n\u003cp\u003eWith the establishment of IBUs by renowned banks, GIFT City solidifies its position as a global financial hub. This growth signifies its potential to serve as a nucleus for international financial activities within India.\u003c/p\u003e\n\u003ch3 id=\"attracting-foreign-investments\"\u003eAttracting Foreign Investments\u003c/h3\u003e\n\u003cp\u003eThe presence of IBUs in GIFT City acts as a magnet for foreign investments. It elevates India\u0026rsquo;s standing in the global financial arena, attracting substantial investments and fostering economic growth.\u003c/p\u003e\n\u003ch3 id=\"enabling-business-opportunities\"\u003eEnabling Business Opportunities\u003c/h3\u003e\n\u003cp\u003eThe establishment of IBUs paves the way for abundant business opportunities. It enhances India\u0026rsquo;s stature as a favorable destination for financial services, offering a conducive environment for diverse business ventures.\u003c/p\u003e\n\u003ch2 id=\"notable-banks-in-gift-city\"\u003eNotable Banks in GIFT City\u003c/h2\u003e\n\u003cp\u003eHere are some prominent banks that have established IFSC Banking Units (IBUs) in GIFT City:\u003c/p\u003e\n\u003cp\u003eIndian Banks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAxis Bank\u003c/li\u003e\n\u003cli\u003eBank of Baroda\u003c/li\u003e\n\u003cli\u003eFederal Bank\u003c/li\u003e\n\u003cli\u003eHDFC Bank\u003c/li\u003e\n\u003cli\u003eICICI Bank\u003c/li\u003e\n\u003cli\u003eIDBI Bank\u003c/li\u003e\n\u003cli\u003eKotak Mahindra Bank\u003c/li\u003e\n\u003cli\u003eState Bank of India\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eForeign Banks:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eBank of America\u003c/li\u003e\n\u003cli\u003eBarclays Bank\u003c/li\u003e\n\u003cli\u003eBNP Paribas\u003c/li\u003e\n\u003cli\u003eCitibank\u003c/li\u003e\n\u003cli\u003eCredit Suisse\u003c/li\u003e\n\u003cli\u003eDBS Bank\u003c/li\u003e\n\u003cli\u003eDeutsche Bank\u003c/li\u003e\n\u003cli\u003eGoldman Sachs\u003c/li\u003e\n\u003cli\u003eHSBC\u003c/li\u003e\n\u003cli\u003eJPMorgan Chase\u003c/li\u003e\n\u003cli\u003eStandard Chartered Bank\u003c/li\u003e\n\u003c/ul\u003e\n","description":"GIFT City is poised to revolutionize the business landscape in India. With its focus on global standards, strategic location, and targeted sectors, the city offers a unique opportunity for companies to establish their presence and thrive. By providing a comprehensive range of infrastructure, incentives, and support services, GIFT City is paving the way for India to become a global leader in the financial and IT services sectors.","image":"/images/blogs/gift-city/banner.png","permalink":"http://localhost:1313/blogs/gift-city/","title":"GIFT City- India's Gateway to Global Business Excellence"},{"content":"\u003cp\u003eIn any software development project, logging plays a vital role in understanding and troubleshooting the behavior of applications. Imagine you are working on a web application that consists of multiple components, such as a frontend server, backend server, and a database. Each of these components generates logs that provide valuable insights into their operations. For example, the frontend server logs can reveal user interactions, while the backend server logs can show the processing of requests and responses. These logs act as a valuable source of information for developers and support teams to diagnose issues, track performance, and monitor the overall health of the system.\u003c/p\u003e\n\u003cp\u003eIn a distributed system, like a mobile app or a microservices-based architecture, logging becomes even more critical. Consider a scenario where you have a mobile app that communicates with various microservices. Each microservice generates its own set of logs, capturing details about its specific operations. These logs help in understanding the flow of data, identifying any bottlenecks, and detecting errors or anomalies.\u003c/p\u003e\n\u003cp\u003eTo handle the complexity of logging in distributed systems, an effective logging architecture is required.\u003c/p\u003e\n\u003cp\u003eAn effective logging architecture consists of\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eLog collection\u003c/li\u003e\n\u003cli\u003eLog Storage\u003c/li\u003e\n\u003cli\u003eHealth Analytics\u003c/li\u003e\n\u003c/ol\u003e\n\u003cimg src=\"/images/blogs/logging-architecture/unified-log-management.png\" alt=\"Image\" alt=\"An architecture depicting the logging architecture\" class=\"responsive-image-bounded\"\u003e\n\u003ch3 id=\"log-collection\"\u003eLog Collection\u003c/h3\u003e\n\u003cp\u003eThe first step in designing a logging architecture is to identify the various sources of logs within your system. Regardless of the nature of your architecture, whether it\u0026rsquo;s a monolithic application, a microservices-based system, or a combination of different technologies, each component will generate its own set of logs. These logs are crucial for understanding the behavior and performance of the system.It is the responsibility of the application developers to implement logging mechanisms that produce logs in a consistent and structured format. Structured logs are easier to analyze, search, and extract relevant information from. They typically follow a predefined format, such as key-value pairs or structured data formats like JSON or XML.\u003c/p\u003e\n\u003ch4 id=\"structured-logging\"\u003eStructured Logging\u003c/h4\u003e\n\u003cp\u003eStructured logging is a powerful technique that captures log messages in a structured format, such as key-value pairs or structured data formats like JSON or XML. This approach improves log readability, making it easier to extract relevant information and perform targeted searches. With structured logs, developers can quickly troubleshoot and debug issues by directly accessing specific fields or values. The structured format also enables efficient log analysis, aggregation, and visualization, empowering proactive monitoring and performance analysis. Additionally, structured logging promotes interoperability and integration with other log management systems, data pipelines, and analysis tools, facilitating centralized log management and cross-system analysis. By adopting structured logging, developers and operations teams can harness the full potential of log data to gain valuable insights into the behavior and performance of their applications.\u003c/p\u003e\n\u003ch4 id=\"log-agents\"\u003eLog Agents\u003c/h4\u003e\n\u003cp\u003eA log agent is a software component responsible for capturing and structuring logs within an application or system. It is typically integrated into the codebase of the application or runs as a separate process alongside the application. The primary role of a log agent is to intercept log messages generated by the application and transform them into a structured format suitable for further processing and analysis.\u003c/p\u003e\n\u003cp\u003eLog agents play a crucial role during log collection by ensuring that logs are captured accurately and efficiently. They offer several benefits:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eLog Formatting\u003c/strong\u003e Log agents handle the formatting of log messages, ensuring they adhere to a predefined structure or format. This could involve adding timestamps, log levels, source information, or any other relevant metadata to the log entries. By enforcing a consistent format, log agents make it easier to parse and analyze logs downstream.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eLog Enrichment\u003c/strong\u003e Log agents can enrich log entries with additional contextual information. For example, they may add details about the user, session, or request being processed. This enrichment provides valuable context for log analysis and troubleshooting, enabling better insights into system behavior.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eFiltering and Sampling\u003c/strong\u003e Log agents often provide the ability to filter or sample log messages based on specific criteria. This allows for the selective collection of logs, reducing the volume of data transmitted and stored. For instance, log agents may filter out low-priority or verbose log messages to focus on critical events or errors.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eBuffering and Batch Processing\u003c/strong\u003e To optimize log collection and transmission, log agents may employ buffering techniques. They can accumulate log messages in memory or disk buffers and send them in batches to the log storage or shipping component. This reduces network overhead and improves efficiency, especially in high-throughput scenarios.\nSome examples of log agents include : LogBack, FluentD (Java) and Slog (Golang) etc.\u003c/p\u003e\n\u003ch4 id=\"log-shippers\"\u003eLog Shippers\u003c/h4\u003e\n\u003cp\u003eLog shippers are essential components in a logging architecture as they collect logs from various sources and transport them to a centralized location for further processing. They ensure efficient log collection and delivery by employing techniques such as buffering, compression, and encryption. Log shippers buffer logs to optimize transmission, reducing network overhead and enabling batched delivery. Compression reduces log size, improving transmission efficiency, while encryption safeguards sensitive log data during transit. Additionally, log shippers handle reliability and fault tolerance by retrying failed deliveries and recovering from errors. Overall, log shippers play a vital role in ensuring that logs are effectively gathered from diverse sources and reliably transported to the next stage of the logging pipeline.\nSome examples of log shippers include FluentBit, FluentD, LogStash etc.\u003c/p\u003e\n\u003ch2 id=\"log-storage\"\u003eLog Storage\u003c/h2\u003e\n\u003cp\u003eLog storage is a critical component in a logging architecture as it handles the persistent storage of standardized logs received from log transformers. Before storage, logs are typically tagged and partitioned based on criteria such as time, source, or log level. This tagging and partitioning enable efficient retrieval and querying of logs.\u003c/p\u003e\n\u003cp\u003eLogs can be stored in various storage systems based on their retention requirements and access patterns. Common options include:\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eFile Systems\u003c/strong\u003e Logs can be stored as plain text files in a file system. This approach is simple and straightforward, making it easy to access and analyze logs. However, it may lack advanced querying capabilities and scalability for large log volumes.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eDatabases\u003c/strong\u003e Relational or NoSQL databases can be used to store logs. Databases provide structured storage, allowing for efficient querying and indexing of logs. They offer powerful search capabilities and can handle large log volumes. However, database setups may require careful planning and maintenance to ensure performance and scalability.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eCloud-Based Storage\u003c/strong\u003e Cloud storage services, such as Amazon S3 or Google Cloud Storage, offer scalable and durable storage options for logs. They provide high availability, redundancy, and easy integration with other cloud services. Cloud storage is suitable for distributed systems and can handle large log volumes effectively.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSpecialized Log Management Platforms\u003c/strong\u003e There are dedicated log management platforms like Elasticsearch, Splunk, or Graylog that provide advanced log storage and analysis capabilities. These platforms offer features like indexing, search, visualization, and alerting, making it easier to monitor and analyze logs in real-time.\u003c/p\u003e\n\u003cp\u003eThe choice of log storage system depends on factors such as scalability, performance requirements, data retention policies, and the need for advanced querying and analysis capabilities. It is important to consider the specific needs of the logging architecture and select a storage solution that aligns with those requirements.\u003c/p\u003e\n\u003cpicture\u003e\n  \u003c!-- Mobile image source --\u003e\n  \u003csource media=\"(max-width: 480px)\" srcset=\"/images/blogs/logging-architecture/log-arch-mobile.gif\" alt=\"An architecture depicting the logging architecture\" class=\"responsive-image\"/\u003e\n  \u003c!-- Web image source --\u003e\n  \u003csource media=\"(min-width: 481px)\" srcset=\"/images/blogs/logging-architecture/log-arch-web.gif\" alt=\"An architecture depicting the logging architecture\" class=\"responsive-image\"/\u003e\n   \u003cimg src=\"/images/blogs/logging-architecture/log-arch-web.gif\" alt=\"Image\" alt=\"An architecture depicting the logging architecture\" class=\"responsive-image\"\u003e\n\u003c/picture\u003e\n\u003ch2 id=\"health-analytics\"\u003eHealth Analytics\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eLog Monitoring\u003c/strong\u003e After logs are stored, log monitoring systems continuously observe the logs for anomalies, errors, patterns, and other critical events. These monitoring tools analyze the logs in real-time, enabling prompt detection of issues. For example, they can identify errors, exceptions, performance degradation, security threats, or any other abnormalities that may indicate problems within the system. When such issues are identified, the log monitoring systems alert the support team, providing them with the necessary information to investigate and resolve the problems.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eSupport and Auto Recovery\u003c/strong\u003e Upon receiving alerts from the log monitoring systems, the support team promptly engages in investigating the logs to identify the root cause of the issues. By analyzing the log data, they can gain insights into the sequence of events leading up to the problem, helping them understand the context and potential impact. Based on their findings, the support team can take appropriate actions to resolve the issues, such as applying fixes, restarting services, or escalating to the relevant stakeholders.\u003c/p\u003e\n\u003cp\u003eIn some cases, auto recovery systems can play a role in resolving problems automatically. These systems leverage the insights gained from the logs and predefined recovery mechanisms to restore the system to a healthy state without manual intervention. For example, if a critical service fails, an auto recovery system can automatically restart the service or switch to a backup instance. By leveraging the information captured in the logs and following predefined recovery procedures, auto recovery systems help minimize downtime and ensure system availability.\u003c/p\u003e\n\u003cp\u003eThe combination of log monitoring, support team involvement, and auto recovery mechanisms forms a robust approach to issue resolution. Log monitoring acts as an early warning system, enabling proactive detection of problems. The support team, armed with log data, can efficiently investigate and address issues, while auto recovery systems provide automated recovery options when feasible. Together, these components contribute to maintaining system health, minimizing downtime, and ensuring a smooth user experience.\u003c/p\u003e\n\u003cp\u003eIn conclusion, a well-designed logging architecture is essential for effective software development and system monitoring. By implementing the key components discussed - log collection, structured logging, log agents, log shippers, log storage, and log monitoring/support - organizations can gain valuable insights into the behavior and performance of their applications. Structured logging ensures logs are easily readable and analyzable, while log agents and shippers facilitate efficient log collection and delivery. Log storage systems store logs in a structured manner, enabling easy retrieval and analysis. Log monitoring systems continuously monitor logs for anomalies and critical events, allowing prompt detection of issues. With the support of a dedicated team and automated recovery mechanisms, organizations can investigate and resolve problems efficiently, ensuring the overall health and reliability of their systems.\u003c/p\u003e\n\u003cp\u003eBy adopting a comprehensive logging architecture, organizations can leverage the power of log data to troubleshoot issues, optimize performance, and enhance the user experience. The insights gained from logs enable proactive monitoring, efficient issue resolution, and continuous improvement of software systems. With the ability to capture, analyze, and act upon log data effectively, organizations can ensure the smooth operation of their applications and provide a seamless experience to their users. Logging is not just a technical necessity but a valuable tool for enhancing the reliability, performance, and overall success of software development projects.\u003c/p\u003e\n","description":"Optimize your software development projects with an effective logging architecture. Understand the behavior, troubleshoot issues, and monitor system health with valuable log insights. Learn about log collection, structured logging, log agents, log shippers, log storage, and log monitoring. Enhance performance, resolve issues promptly, and ensure a seamless user experience. Discover the power of log data for proactive monitoring and continuous improvement. Elevate the reliability and success of your software systems with a comprehensive logging architecture.","image":"/images/blogs/logging-architecture/logging-architecture-explained-well.png","permalink":"http://localhost:1313/blogs/logging-architecture/","title":"Understanding the logging architecture"},{"content":"\u003cp\u003econtent\nWith the rise of conversational and generative AI systems like ChatGPT, Bard etc., the way of working is being disrupted. To not be afraid of AI snatching jobs, we must embrace AI and adpot it in our ways of working to deliver better and faster.\u003c/p\u003e\n\u003cp\u003eTo use AI as an assistant and getting work done by it, we need to be able to communicate our needs to it. When we ask the AI to do something for us, the requests are known as prompts.\u003c/p\u003e\n\u003cp\u003eprompt engineering is the art and science of designing the prompts to be able to communicate with AI effectively.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIncluding details in query\u003c/li\u003e\n\u003cli\u003eAsk the model to adopt a persona\u003c/li\u003e\n\u003cli\u003eSpecify steps to complete a task\u003c/li\u003e\n\u003cli\u003eProvide examples\u003c/li\u003e\n\u003cli\u003eSpecify parameters (e.g. desired length) of the result\u003c/li\u003e\n\u003cli\u003eSanitize inputs\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"including-details-in-query\"\u003eIncluding details in query\u003c/h2\u003e\n\u003cp\u003eI wanted to create a training program for a group of software engineers. In my understanding, it was obvious what I wanted. and hence I asked the following query to ChatGPT :\u003c/p\u003e\n\u003cimg src=\"/images/blogs/prompt-engineering/training-program-less-details.png\" alt=\"An example where I provided less details while talking to chatgpt\" class=\"responsive-image-400\" style=\"max-height:400p\"\u003e\n\u003cp\u003eThe chatGPT started to answer me by creating a training program for improving health. While it is a good to keep, I was actually not looking for it.\nHence, I had to refine the prompt by adding more details. And it resulted in something beautiful.\u003c/p\u003e\n\u003cp\u003eProviding more details help the A.I. assistent to understand the requirements better, and provide results closer to your needs.\u003c/p\u003e\n\u003cimg src=\"/images/blogs/prompt-engineering/training-program-more-details.png\" alt=\"An example where I provided more details while talking to chatgpt\" class=\"responsive-image-400\" style=\"max-height:400p\"\u003e\n\u003ch2 id=\"ask-the-model-to-adopt-a-persona\"\u003eAsk the model to adopt a persona\u003c/h2\u003e\n\u003cp\u003eA persona is like a stereotype that we can define that helps in defining the language and knowledge understanding of a person. A.I systems are smart enough to understand different perspectives and can tailer their responses as per the defined persona.\u003c/p\u003e\n\u003cp\u003eI asked chatGPT to take up a persona of a CEO to address the employees by explaining the impacts of covid, and then in second prompt I asked it to assume a persona of a father of 5 year old.\n\u003cimg src=\"/images/blogs/prompt-engineering/persona-ceo.png\" alt=\"An example where I asked chatGPT to take up persona of a CEO\" class=\"responsive-image-400 width50\"/\u003e\n\u003cimg src=\"/images/blogs/prompt-engineering/persona-father.png\" alt=\"An example where I asked chatGPT to take up persona of a CEO\" class=\"responsive-image-400 width50\" /\u003e\u003c/p\u003e\n\u003cp\u003eIn both the cases, the topic is same - covid-19. However the choice of words, examples, tone changed as per the persona and audience.\u003c/p\u003e\n\u003ch2 id=\"specify-steps-to-complete-a-task\"\u003eSpecify steps to complete a task\u003c/h2\u003e\n\u003cp\u003eConsider your assistent as a trainee. Someone who has all the resources, but is not able to deliver until the taks is broken down into simpler tasks.\nI was designing an angular component, and asked ChatGPT to design the component for me.\u003c/p\u003e\n\u003cimg src=\"/images/blogs/prompt-engineering/step-1.png\" alt=\"An example where I asked chatGPT to create an angular compoent (step 1)\" class=\"responsive-image-400 width50\"/\u003e\n\u003cp\u003eThe generated component was a beautiful angular component that gave me a good starter item to begin with.\nHowever pretty soon, (after replacing the example API) I realized that I need a loader .\nThe API which was being invoked tool longer to respond and the user had no information that the API is loading the data.\u003c/p\u003e\n\u003cp\u003eHence, I asked the AI to take a step further and add a loader.\u003c/p\u003e\n\u003cp\u003eBy providing small incremental steps I was able to reach to a stage that fitted my requirements.\nBy providing a step by step instruction, I was able to test the results, and provide feedback. Thus creating something that was specific to my needs.\u003c/p\u003e\n\u003cimg src=\"/images/blogs/prompt-engineering/step-2.png\" alt=\"An example where I asked chatGPT to add a loader to already created component (step 2)\" class=\"responsive-image-400 width50\"/\u003e\n\u003ch2 id=\"provide-examples\"\u003eProvide Examples.\u003c/h2\u003e\n\u003cp\u003eSometimes, when we are not able to explain our requirements in words, we give examples to humans to express ourselves better. Examples help in understanding the requirements. AI is no different. AI can understand and make infrences from provided examples.\u003c/p\u003e\n\u003cp\u003eI use mermaid for generating my diagrams. And since mermaid is text based, it works pretty well with generative AI tools. However in my experinece, the by default AI tends to generate mermaid tools for graphs/flowchart.\u003c/p\u003e\n\u003cimg src=\"/images/blogs/prompt-engineering/flowchart.png\" alt=\"An example where I asked chatGPT to create a mermaid diagram and it created a flowchart\" class=\"responsive-image-400 width50\"/\u003e\n\u003cimg src=\"/mmd/tech/arch.png\" alt=\"The created flowchart diagram\" class=\"responsive-image-400 width50\"/\u003e\n\u003cp\u003eBut in reality I was looking for a C4 diagram. And hence I gave the examples to ChatGPT of what I was looking for. (I picked up the example directly from mermaid documentation). The results were amazing :\u003c/p\u003e\n\u003cimg src=\"/images/blogs/prompt-engineering/c4.png\" alt=\"An example where I asked chatGPT to create a mermaid diagram and it created a flowchart\" class=\"responsive-image-400 width50\"/\u003e\n\u003cimg src=\"/mmd/tech/arch2.png\" alt=\"The created flowchart diagram\" class=\"responsive-image-400 width50\"/\u003e\n\u003cp\u003ePS : ChatGPT responded with a minor error, that was easily fixed manually. The name of the diagram should be C4Context, and not C4_Context. Anyhow this was not the final diagram, there were multiple iterations after this one.\u003c/p\u003e\n\u003ch2 id=\"specify-parameters\"\u003eSpecify parameters\u003c/h2\u003e\n\u003cp\u003eSometimes we are bound by different criteria. e.g. to create a tweet we are bound by 280 character limits. We can specify such parameters for ChatGPT to accomodate our expectations.\u003c/p\u003e\n\u003cimg src=\"/images/blogs/prompt-engineering/limit-default.png\" alt=\"An example where I asked chatGPT to write a poem without defining limits\" class=\"responsive-image-400 width50\"/\u003e\n\u003cimg src=\"/images/blogs/prompt-engineering/limit-280.png\" alt=\"An example where I asked chatGPT to write a poem by defining limi\" class=\"responsive-image-400 width50\"/\u003e\n\u003ch2 id=\"sanitize-inputs\"\u003eSanitize inputs\u003c/h2\u003e\n\u003cp\u003eIf you are using the free version of AI tools, you may be giving all the information up for training of the model. It means, that any prompt or information that you provided can be used to train the AI engine running the application. If other users have similar queries, the data provided by you can be used to answer their questions. This can potentially leek the information that you share.\nAs a user, you must control and sanitize the information that you are sharing with such systems in order to prevent any leakage of private and sensitive information.\u003c/p\u003e\n\u003cimg src=\"/images/blogs/prompt-engineering/sanitized.png\" alt=\"An example where I sanitized my inputs to get a response from ChatGPT\" class=\"responsive-image-400 width50\"/\u003e\n\u003c!--\n[Open AI](https://platform.openai.com/docs/guides/prompt-engineering)\n[Google Prompt Engineering Course](https://developers.google.com/machine-learning/resources/prompt-eng)\n--\u003e","description":"Discover the power of prompt engineering in this comprehensive blog, delving into query details, persona adoption, task completion steps, real-world examples, parameter specifications, and input sanitization. Learn how these aspects shape AI outcomes for optimal results. Dive in to enhance your understanding!","image":"/images/blogs/prompt-engineering/The Art and Science of Prompt Engineering.png","permalink":"http://localhost:1313/blogs/prompt-engineering/","title":"The Art and Science of Prompt Engineering"},{"content":"\u003ch1 id=\"embracing-global-diversity-insights-from-a-world-of-experiences\"\u003eEmbracing Global Diversity: Insights from a World of Experiences\u003c/h1\u003e\n\u003cp\u003eAt the onset of my career, the allure of working \u0026ldquo;On-Site\u0026rdquo; was a shared aspiration among my peers and me. The prospect of immersing ourselves in diverse cultures, collaborating closely with customers, and gaining insights into varied business operations was enticing. On-site assignments promised not just professional growth but also a glimpse into a world previously beyond our reach.\u003c/p\u003e\n\u003cp\u003eHowever, transitioning from core product development to customer-facing roles was a hurdle. Yet, the door to global experiences swung open when I joined Xebia as a trainer. Suddenly, I found myself traversing continents, training teams in countries spanning Netherlands, Mauritius, Bahrain, Qatar, the Philippines, Thailand, and more.\u003c/p\u003e\n\u003cp\u003eThe rich tapestry of cultures, traditions, and ways of life encountered during these journeys has been transformative. Working with customers worldwide and teams across India, the U.S.A, Canada, Africa, Australia, the Middle East, Europe, and East Asia has been nothing short of a global odyssey.\u003c/p\u003e\n\u003cp\u003eDiving into diverse cultures isn\u0026rsquo;t merely eye-opening; it\u0026rsquo;s a journey into understanding the evolution of traditions. Amidst the apparent differences, a profound realization emerges – at our core, we\u0026rsquo;re strikingly similar.\u003c/p\u003e\n\u003cp\u003eSome incidents left indelible impressions. Witnessing the repressed third genders in India living full lives as bus operators and bankers in other countries shattered preconceptions. Dependency on electricity, often taken for granted, hit home during a power cut in Europe, where people were marooned inside malls.\u003c/p\u003e\n\u003cp\u003eSurprising encounters redefined perceptions. Language bridged divides more effectively than political relations. The paradox of conversing in English with a fellow Indian due to language barriers, while bonding effortlessly with a Pakistani in our native tongues, left bystanders baffled.\u003c/p\u003e\n\u003cp\u003eTravel dispelled myths of opulence in foreign lands. The stark reality of shared human challenges globally shattered misconceptions of marble roads and golden houses.\u003c/p\u003e\n\u003cp\u003eFood, a cultural cornerstone, reflected unique palettes worldwide. Variations in taste transformed perceptions of even familiar cuisines like Indian food, revealing its diverse avatars across continents.\u003c/p\u003e\n\u003cp\u003eNavigating these diverse experiences unveiled distinct advantages. Understanding global traditions, a deeper grasp of human psychology, cultivating empathy, and a constant drive for self-improvement emerged as invaluable outcomes.\u003c/p\u003e\n\u003cp\u003eYet, challenges linger. Communicating without a common language poses obstacles, leading to misunderstandings that can escalate into conflicts. Cultural and linguistic differences sometimes breed unintended rudeness, complicating interactions and discussions.\u003c/p\u003e\n\u003cp\u003eDespite these challenges, the lessons from this global journey resonate. Each encounter with diversity enriches perspectives, fostering an understanding that transcends borders. Embracing global diversity isn\u0026rsquo;t just about celebrating differences; it\u0026rsquo;s about finding common ground amid the beautiful mosaic of cultures.\u003c/p\u003e\n\u003cp\u003eIn retrospect, these experiences underscore the essence of embracing diversity – a journey that\u0026rsquo;s as enlightening as it is enriching.\u003c/p\u003e\n\u003ch2 id=\"a-deeper-dive-into-global-diversity\"\u003eA Deeper Dive into Global Diversity\u003c/h2\u003e\n\u003cp\u003eBeyond the surface-level encounters lies a deeper understanding of the significance and impact of embracing global diversity.\u003c/p\u003e\n\u003ch3 id=\"understanding-the-essence-of-cultural-diversity\"\u003eUnderstanding the Essence of Cultural Diversity\u003c/h3\u003e\n\u003cp\u003eThe global experiences I\u0026rsquo;ve encountered serve as a testament to the richness of cultural diversity. It\u0026rsquo;s not merely about observing different customs or rituals; it\u0026rsquo;s about comprehending the historical, social, and psychological underpinnings that shape these diverse cultures. This deeper understanding fosters a profound appreciation for the complexities and intricacies of human societies across the globe.\u003c/p\u003e\n\u003ch3 id=\"the-role-of-empathy-in-cross-cultural-interactions\"\u003eThe Role of Empathy in Cross-Cultural Interactions\u003c/h3\u003e\n\u003cp\u003eEmpathy becomes a guiding light when navigating the labyrinth of diverse cultural norms. It\u0026rsquo;s not just about acknowledging differences; it\u0026rsquo;s about stepping into the shoes of others, understanding their perspectives, and embracing their worldview. Cultivating empathy enables meaningful connections, fostering a sense of shared humanity that transcends geographical boundaries.\u003c/p\u003e\n\u003ch3 id=\"harnessing-diversity-for-innovation-and-growth\"\u003eHarnessing Diversity for Innovation and Growth\u003c/h3\u003e\n\u003cp\u003eThe synergy derived from diverse perspectives fuels innovation and growth. Each cultural lens offers a unique viewpoint, challenging conventional thinking and stimulating creativity. Embracing these diverse ideas nurtures a culture of innovation, driving organizations and societies towards greater success and resilience in an ever-evolving global landscape.\u003c/p\u003e\n\u003ch3 id=\"bridging-divides-for-a-harmonious-world\"\u003eBridging Divides for a Harmonious World\u003c/h3\u003e\n\u003cp\u003eEmbracing global diversity isn\u0026rsquo;t merely a professional endeavor; it\u0026rsquo;s a step towards fostering a more harmonious world. By bridging cultural divides, nurturing mutual respect, and celebrating differences, we pave the way for a world where diversity is not just tolerated but cherished and celebrated.\u003c/p\u003e\n\u003ch2 id=\"conclusion-embracing-the-tapestry-of-humanity\"\u003eConclusion: Embracing the Tapestry of Humanity\u003c/h2\u003e\n\u003cp\u003eIn essence, the journey through global diversity is a pilgrimage through the tapestry of humanity itself. Each thread, unique in its color and texture, contributes to the breathtaking mosaic of cultures. Embracing these differences not only enriches our lives but also strengthens the bonds that weave us all together – the shared experience of being human.\u003c/p\u003e\n\u003cp\u003eThe realization that despite our diverse backgrounds, aspirations, and traditions, we share a common desire for understanding, respect, and unity is the true essence of embracing global diversity.\u003c/p\u003e\n","description":"At the onset of my career, the allure of working \"On-Site\" was a shared aspiration among my peers and me. The prospect of immersing ourselves in diverse cultures, collaborating closely with customers, and gaining insights into varied business operations was enticing. On-site assignments promised not just professional growth but also a glimpse into a world previously beyond our reach.","image":"/images/blogs/working-with-global-teams/banner.png","permalink":"http://localhost:1313/blogs/working-with-global-teams/","title":"Embracing Global Diversity"},{"content":"\u003cp\u003eSometime back, I created \u003ca href=\"https://www.linkedin.com/posts/mohit-kanwar-7668a211_passwordless-authentication-activity-6926093155184320512-Nnhu?utm_source=share\u0026amp;utm_medium=member_desktop\"\u003ethis post\u003c/a\u003e on linked-in on explainig how passwords are not a good fit for authentication. In continuation to that, I would like to talk about FIDO Alliance.\nIn the ever-evolving landscape of cybersecurity, the traditional method of password-based authentication has long been at the forefront of both convenience and vulnerability.\u003cbr\u003e\nEnter FIDO, an innovative and transformative technology that revolutionizes the way we verify identity and secure access to digital systems.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eFIDO\u003c/strong\u003e, short for \u003cem\u003eFast Identity Online\u003c/em\u003e, represents a paradigm shift in authentication methods, offering a more secure, seamless, and user-centric approach to safeguarding our digital lives. This groundbreaking technology is reshaping the landscape of digital security, promising to retire the age-old reliance on passwords and granting users a new frontier of secure authentication methods.\u003c/p\u003e\n\u003cp\u003eIn this comprehensive exploration, we embark on a journey through the intricate world of FIDO-based authentication. We\u0026rsquo;ll delve deep into its mechanisms, understand its underlying principles, and explore how it reshapes our perception of authentication. Join us as we uncover the principles, advantages, and applications of FIDO authentication, paving the way for a more secure and user-friendly digital future.\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://fidoalliance.org/what-is-fido/\"\u003eFIDO Alliance\u003c/a\u003e, is an open industry consortium striving to create a more secure and user-friendly authentication standard for online access. It aims to address the vulnerabilities and limitations of traditional password-based authentication by introducing simpler, stronger, and more reliable alternatives.\u003c/p\u003e\n\u003cp\u003eThe FIDO Alliance, founded in 2012, is a collaborative effort among leading technology companies, including Microsoft, Google, PayPal, Visa, and others. Its primary objective is to develop and promote open authentication standards that reduce reliance on passwords, enhance security, and improve user experiences across various online services and devices.\u003c/p\u003e\n\u003ch3 id=\"fido-standards\"\u003eFIDO Standards:\u003c/h3\u003e\n\u003ch4 id=\"fido-u2f-universal-2nd-factor\"\u003eFIDO U2F (Universal 2nd Factor)\u003c/h4\u003e\n\u003cp\u003eFIDO U2F was one of the initial standards introduced by the FIDO Alliance. It offers a two-factor authentication (2FA) solution that strengthens login security by adding a physical security key or device alongside passwords. Users can insert a USB or NFC-based key or use biometric authentication for a more robust and convenient login process.\u003c/p\u003e\n\u003ch4 id=\"fido2\"\u003eFIDO2\u003c/h4\u003e\n\u003cp\u003eFIDO2 is a set of standards developed by the FIDO Alliance, comprising the Web Authentication (WebAuthn) and Client-to-Authenticator Protocol (CTAP). FIDO2 eliminates the need for passwords entirely by enabling passwordless authentication methods across devices and platforms. WebAuthn, specifically, allows web services to offer secure login experiences without passwords, using biometrics, security keys, or other authentication methods supported by the user\u0026rsquo;s device.\u003c/p\u003e\n\u003ch4 id=\"webauthn\"\u003eWebAuthn\u003c/h4\u003e\n\u003cp\u003eWebAuthn, a crucial component of FIDO2, is a web standard that enables strong and passwordless authentication for web applications. It allows users to authenticate without passwords by utilizing biometrics, security keys, or other trusted devices registered with the user\u0026rsquo;s account. WebAuthn enhances security and user convenience by eliminating the risks associated with passwords.\u003c/p\u003e\n\u003cp\u003eThese FIDO standards collectively aim to revolutionize the way users authenticate their identities online, enhancing security, simplifying access, and reducing reliance on easily compromised passwords. Through hardware-backed authentication and standardized protocols, FIDO is driving a more secure and user-friendly future for online authentication.\u003c/p\u003e\n\u003cp\u003eChoosing FIDO for passwordless authentication stems from recognizing the limitations and vulnerabilities of traditional password-based approaches. Passwords, while commonly used, come with a host of drawbacks that compromise security and user experience.\u003c/p\u003e\n\u003ch3 id=\"drawbacks-of-traditional-password-based-authentication\"\u003eDrawbacks of Traditional Password-Based Authentication:\u003c/h3\u003e\n\u003ch4 id=\"security-vulnerabilities\"\u003eSecurity Vulnerabilities:\u003c/h4\u003e\n\u003cp\u003ePasswords are susceptible to various security threats like phishing, brute-force attacks, and password database breaches. Users often employ weak or reused passwords, making them easy targets for cybercriminals seeking unauthorized access.\u003c/p\u003e\n\u003ch4 id=\"user-friction\"\u003eUser Friction:\u003c/h4\u003e\n\u003cp\u003eRemembering multiple complex passwords is burdensome. This often leads users to adopt simple or easily guessable passwords, undermining security. Frequent password resets can add to user frustration.\u003c/p\u003e\n\u003ch4 id=\"lack-of-scalability\"\u003eLack of Scalability:\u003c/h4\u003e\n\u003cp\u003eTraditional password systems struggle with scalability and complexity when managing user credentials across multiple applications and devices. Centralized password storage poses a significant risk if breached.\u003c/p\u003e\n\u003ch3 id=\"advantages-of-fido-for-passwordless-authentication\"\u003eAdvantages of FIDO for Passwordless Authentication:\u003c/h3\u003e\n\u003ch4 id=\"enhanced-security\"\u003eEnhanced Security:\u003c/h4\u003e\n\u003cp\u003eFIDO introduces robust authentication mechanisms such as hardware-backed security keys and biometrics. This hardware-based authentication significantly reduces the risks associated with phishing and credential theft, ensuring a higher level of security.\u003c/p\u003e\n\u003ch4 id=\"user-convenience\"\u003eUser Convenience:\u003c/h4\u003e\n\u003cp\u003eWith FIDO, users experience a more streamlined and user-friendly authentication process. They can access online services without the hassle of remembering passwords, relying instead on biometrics or hardware keys.\u003c/p\u003e\n\u003ch4 id=\"privacy-protection\"\u003ePrivacy Protection:\u003c/h4\u003e\n\u003cp\u003eFIDO standards prioritize user privacy by employing cryptographic protocols that don’t expose sensitive data. This ensures that user authentication information remains secure, reducing the risk of unauthorized access or tracking.\u003c/p\u003e\n\u003ch4 id=\"interoperability-and-standardization\"\u003eInteroperability and Standardization:\u003c/h4\u003e\n\u003cp\u003eFIDO Alliance’s standards, like FIDO2 and WebAuthn, are industry-recognized and widely supported. This standardization ensures compatibility across devices and platforms, offering a seamless user experience.\u003c/p\u003e\n\u003cp\u003eBy overcoming the limitations of traditional password-based authentication, FIDO not only enhances security but also delivers a more convenient and privacy-centric approach. Its adoption represents a crucial step towards a more secure and user-centric authentication paradigm.\u003c/p\u003e\n\u003cp\u003eFIDO (Fast Identity Online) revolutionizes authentication by employing strong cryptographic principles, eliminating the need for passwords. Its functionality revolves around three primary components: authenticators, clients, and servers.\u003c/p\u003e\n\u003ch3 id=\"components-in-fido-authentication\"\u003eComponents in FIDO Authentication\u003c/h3\u003e\n\u003ch4 id=\"authenticators\"\u003eAuthenticators\u003c/h4\u003e\n\u003cp\u003eThese are the devices responsible for user authentication. Authenticators can be hardware-based (like USB security keys) or built into devices (biometric sensors or TPMs). They securely store user credentials and generate cryptographic keys used in the authentication process.\u003c/p\u003e\n\u003ch4 id=\"clients\"\u003eClients\u003c/h4\u003e\n\u003cp\u003eThe client represents the user\u0026rsquo;s device or browser where authentication occurs. It interacts with the authenticator and the server during the authentication process. Web browsers, native mobile apps, or desktop applications can act as FIDO clients.\u003c/p\u003e\n\u003ch4 id=\"servers\"\u003eServers\u003c/h4\u003e\n\u003cp\u003eServers manage user authentication. They interact with the client and the authenticator to verify user identities. The server validates authentication requests, confirming the user\u0026rsquo;s identity without receiving sensitive information like passwords.\n\u003cimg src=\"/images/blogs/fido/fido-components.png\" alt=\"The different FIDO components\" class=\"responsive-image\"\u003e\u003c/p\u003e\n\u003ch3 id=\"fido-authentication-flow\"\u003eFIDO Authentication Flow\u003c/h3\u003e\n\u003ch4 id=\"fido2-and-webauthn\"\u003eFIDO2 and WebAuthn\u003c/h4\u003e\n\u003ch5 id=\"registration\"\u003eRegistration\u003c/h5\u003e\n\u003cimg src=\"/images/blogs/fido/fido-registration.png\" alt=\"Fido registration process explained\" class=\"responsive-image\"\u003e\nThe client generates a new key pair and requests the authenticator to create credentials for the user.\nThe authenticator creates the credentials and returns a public key to the client.\n\u003cp\u003eThe client sends the public key and additional registration data to the server.\nThe server verifies the data and registers the user, associating the public key with the user\u0026rsquo;s account.\u003c/p\u003e\n\u003ch5 id=\"authentication\"\u003eAuthentication\u003c/h5\u003e\n\u003cp\u003eWhen authentication is required, the client requests authentication from the authenticator.\nThe authenticator verifies the user\u0026rsquo;s identity using stored credentials and generates an authentication assertion.\nThe client sends the authentication assertion to the server.\nThe server validates the assertion using the stored public key associated with the user\u0026rsquo;s account.\n\u003cimg src=\"/images/blogs/fido/fido-authentication.png\" alt=\"Fido authentication process explained\" class=\"responsive-image\"\u003e\u003c/p\u003e\n\u003ch4 id=\"technical-process\"\u003eTechnical Process\u003c/h4\u003e\n\u003ch5 id=\"cryptographic-operations\"\u003eCryptographic Operations\u003c/h5\u003e\n\u003cp\u003eFIDO employs asymmetric cryptographic operations using public and private keys to create secure authentication credentials.\nPublic keys are used to verify signatures while private keys are securely stored on the authenticator.\u003c/p\u003e\n\u003ch5 id=\"secure-authentication\"\u003eSecure Authentication\u003c/h5\u003e\n\u003cp\u003eFIDO\u0026rsquo;s reliance on hardware-backed security and biometrics ensures a higher level of security compared to traditional password-based systems.\nCredentials are bound to specific devices or biometric attributes, reducing the risk of phishing or unauthorized access.\nBy leveraging robust cryptographic principles and hardware-backed security, FIDO2 and WebAuthn redefine authentication, offering a more secure and user-friendly alternative to traditional password-based systems.\u003c/p\u003e\n\u003ch3 id=\"implementing-fido-authentication-in-applications-involves-a-few-key-steps\"\u003eImplementing FIDO authentication in applications involves a few key steps\u003c/h3\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eChoose FIDO2 or WebAuthn Libraries:\nSelect a library or SDK that supports FIDO2 or WebAuthn. Libraries like WebAuthn.io, WebAuthn.me, or authenticator libraries provided by hardware manufacturers (e.g., Yubico, Google Titan) facilitate integration.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eServer-Side Implementation:\u003cbr\u003e\n2.1  Registration Process:\nGenerate a challenge: Create a unique challenge to verify the registration process.\nSend the challenge to the client: Send the challenge and other registration data to the client.\nUpon receiving registration data, store the public key associated with the user\u0026rsquo;s account.\u003c/p\u003e\n\u003cp\u003e2.2 Authentication Process:\nGenerate authentication challenge: Create an authentication challenge for the user.\nSend challenge to client: Pass the challenge to the client for authentication.\nValidate assertion: Upon receiving the assertion, validate it using the stored public key associated with the user\u0026rsquo;s account.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eClient-Side Implementation:\u003cbr\u003e\n3.1 Registration:\nGet credentials: Retrieve the credentials from the authenticator.\nCreate a public key credential: Use the received credentials to create a public key credential.\nSend registration data: Send the public key credential and other data to the server for registration.\u003c/p\u003e\n\u003cp\u003e3.2 Authentication:\nGet assertion: Retrieve the assertion from the authenticator.\nCreate assertion: Use the received assertion to create an authentication assertion.\nSend authentication data: Send the authentication assertion to the server for validation.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eIntegration into Application:\nEmbed FIDO authentication into the login flow of your application.\nEnsure compatibility: Ensure that the application supports FIDO2 or WebAuthn protocols and can interact with authenticators securely.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eImplementing FIDO authentication requires handling cryptographic operations, ensuring secure communication between the server and client, and integrating the authentication flow seamlessly into your application\u0026rsquo;s login process. The specifics might vary based on the chosen libraries or SDKs and the platform used for application development.\u003c/p\u003e\n\u003ch3 id=\"benefits-of-using-fido\"\u003eBenefits of using FIDO\u003c/h3\u003e\n\u003cp\u003eFIDO offers a range of benefits that significantly improve security and enhance the user experience:\u003c/p\u003e\n\u003ch3 id=\"improved-security\"\u003eImproved Security\u003c/h3\u003e\n\u003ch4 id=\"addressing-password-vulnerabilities\"\u003eAddressing Password Vulnerabilities\u003c/h4\u003e\n\u003cp\u003eTraditional passwords are susceptible to various security risks like phishing, brute-force attacks, and password database breaches. FIDO addresses these vulnerabilities by:\u003c/p\u003e\n\u003ch4 id=\"eliminating-passwords\"\u003eEliminating Passwords\u003c/h4\u003e\n\u003cp\u003eFIDO-based authentication replaces passwords with cryptographic keys stored securely on devices or hardware tokens.\u003c/p\u003e\n\u003ch4 id=\"phishing-resistance\"\u003ePhishing Resistance\u003c/h4\u003e\n\u003cp\u003eFIDO utilizes public-private key pairs that differ for each service, thwarting phishing attempts where credentials are typically stolen.\u003c/p\u003e\n\u003ch3 id=\"strong-authentication\"\u003eStrong Authentication\u003c/h3\u003e\n\u003ch4 id=\"multi-factor-authentication-mfa\"\u003eMulti-Factor Authentication (MFA)\u003c/h4\u003e\n\u003cp\u003eFIDO often operates as an MFA method, providing an additional layer of security. It combines something the user has (a device or token) with something they know (a PIN or biometric data).\u003c/p\u003e\n\u003ch4 id=\"biometric-integration\"\u003eBiometric Integration\u003c/h4\u003e\n\u003cp\u003eFIDO leverages biometric data like fingerprints or facial recognition, ensuring strong authentication while maintaining convenience.\u003c/p\u003e\n\u003ch3 id=\"enhanced-user-experience\"\u003eEnhanced User Experience\u003c/h3\u003e\n\u003ch4 id=\"convenience-and-ease-of-use\"\u003eConvenience and Ease of Use\u003c/h4\u003e\n\u003cp\u003eUsers are freed from the burden of remembering complex passwords. Authentication becomes a simple, seamless process, usually involving a biometric scan or a hardware token.\u003c/p\u003e\n\u003ch4 id=\"reduced-friction\"\u003eReduced Friction\u003c/h4\u003e\n\u003cp\u003eFIDO minimizes user effort by eliminating the need to repeatedly enter passwords or PINs, streamlining the login experience across various devices and services.\u003c/p\u003e\n\u003ch3 id=\"cross-platform-compatibility\"\u003eCross-Platform Compatibility\u003c/h3\u003e\n\u003ch4 id=\"interoperability\"\u003eInteroperability\u003c/h4\u003e\n\u003cp\u003eFIDO standards (FIDO2 and WebAuthn) are supported across multiple browsers, operating systems, and devices, ensuring consistent authentication experiences irrespective of the platform.\u003c/p\u003e\n\u003cp\u003eBy mitigating common password-related risks and providing a smoother, more user-friendly authentication process, FIDO significantly enhances both the security and usability aspects of digital identity management.\u003c/p\u003e\n\u003ch3 id=\"fido-adoption-across-industries\"\u003eFIDO Adoption Across Industries\u003c/h3\u003e\n\u003ch4 id=\"financial-services\"\u003eFinancial Services\u003c/h4\u003e\n\u003ch5 id=\"online-banking\"\u003eOnline Banking\u003c/h5\u003e\n\u003cp\u003eBanks and financial institutions leverage FIDO to secure customer accounts, providing secure authentication without passwords.\u003c/p\u003e\n\u003ch5 id=\"payments\"\u003ePayments\u003c/h5\u003e\n\u003cp\u003eFIDO is used in payment processing, enhancing security in digital transactions, especially in e-commerce and mobile payments.\u003c/p\u003e\n\u003ch4 id=\"technology-and-enterprise\"\u003eTechnology and Enterprise\u003c/h4\u003e\n\u003ch5 id=\"enterprise-authentication\"\u003eEnterprise Authentication\u003c/h5\u003e\n\u003cp\u003eMany organizations deploy FIDO for employee access to networks, systems, and sensitive data.\u003c/p\u003e\n\u003ch5 id=\"cloud-services\"\u003eCloud Services\u003c/h5\u003e\n\u003cp\u003eFIDO is integrated into cloud services for secure access and identity verification.\u003c/p\u003e\n\u003ch4 id=\"healthcare-and-government\"\u003eHealthcare and Government\u003c/h4\u003e\n\u003ch5 id=\"healthcare-data-security\"\u003eHealthcare Data Security\u003c/h5\u003e\n\u003cp\u003eFIDO ensures secure access to patient records and sensitive medical data.\u003c/p\u003e\n\u003ch5 id=\"government-services\"\u003eGovernment Services\u003c/h5\u003e\n\u003cp\u003eFIDO-based authentication secures citizen access to government portals and services.\u003c/p\u003e\n\u003ch3 id=\"successful-use-cases\"\u003eSuccessful Use Cases\u003c/h3\u003e\n\u003ch4 id=\"google\"\u003eGoogle:\u003c/h4\u003e\n\u003ch5 id=\"android-devices\"\u003eAndroid Devices:\u003c/h5\u003e\n\u003cp\u003eGoogle integrated FIDO2 into Android, allowing users to log in to services via fingerprint or screen unlock code across apps and websites.\u003c/p\u003e\n\u003ch4 id=\"microsoft\"\u003eMicrosoft:\u003c/h4\u003e\n\u003ch5 id=\"azure-active-directory\"\u003eAzure Active Directory\u003c/h5\u003e\n\u003cp\u003eMicrosoft supports FIDO2 for Azure AD, enabling secure authentication for enterprise users.\u003c/p\u003e\n\u003ch4 id=\"e-commerce-platforms\"\u003eE-Commerce Platforms:\u003c/h4\u003e\n\u003ch5 id=\"online-retail\"\u003eOnline Retail\u003c/h5\u003e\n\u003cp\u003eMajor e-commerce platforms integrate FIDO for secure and seamless customer logins during checkout processes.\u003c/p\u003e\n\u003ch4 id=\"social-media-and-web-services\"\u003eSocial Media and Web Services\u003c/h4\u003e\n\u003ch5 id=\"twitter-and-facebook\"\u003eTwitter and Facebook\u003c/h5\u003e\n\u003cp\u003eAdoption of FIDO2 and WebAuthn for user authentication, enhancing security and user experience.\u003c/p\u003e\n\u003cp\u003eThese use cases showcase how FIDO authentication is gaining momentum across various sectors, emphasizing its versatility and effectiveness in securing user identities and sensitive data across diverse applications.\u003c/p\u003e\n\u003ch2 id=\"challenges-and-considerations-in-fido-adoption\"\u003eChallenges and Considerations in FIDO Adoption:\u003c/h2\u003e\n\u003ch3 id=\"adoption-challenges\"\u003eAdoption Challenges:\u003c/h3\u003e\n\u003ch4 id=\"legacy-systems\"\u003eLegacy Systems\u003c/h4\u003e\n\u003cp\u003eIntegrating FIDO authentication into existing systems might be complex, especially in legacy environments.\u003c/p\u003e\n\u003ch4 id=\"user-familiarity\"\u003eUser Familiarity\u003c/h4\u003e\n\u003cp\u003eEducating users about FIDO and transitioning them from traditional passwords could pose initial adoption challenges.\u003c/p\u003e\n\u003ch3 id=\"security-concerns\"\u003eSecurity Concerns:\u003c/h3\u003e\n\u003ch4 id=\"device-dependency\"\u003eDevice Dependency\u003c/h4\u003e\n\u003cp\u003eRelying on authenticator devices might raise concerns if users lose or don\u0026rsquo;t have access to these devices.\u003c/p\u003e\n\u003ch4 id=\"phishing-risks\"\u003ePhishing Risks\u003c/h4\u003e\n\u003cp\u003eAlthough FIDO reduces phishing risks, user interaction is still involved, and attackers might attempt to deceive users into authenticating on rogue websites.\u003c/p\u003e\n\u003ch3 id=\"implementation-considerations\"\u003eImplementation Considerations:\u003c/h3\u003e\n\u003ch4 id=\"regulatory-compliance\"\u003eRegulatory Compliance\u003c/h4\u003e\n\u003cp\u003eAdhering to industry-specific regulations while implementing FIDO is essential, especially in finance and healthcare.\u003c/p\u003e\n\u003ch4 id=\"authentication-flows\"\u003eAuthentication Flows\u003c/h4\u003e\n\u003cp\u003eDesigning seamless and intuitive authentication flows that accommodate different authenticator types and user scenarios.\u003c/p\u003e\n\u003ch3 id=\"user-privacy\"\u003eUser Privacy:\u003c/h3\u003e\n\u003ch4 id=\"data-protection\"\u003eData Protection\u003c/h4\u003e\n\u003cp\u003eEnsuring user data protection and privacy when storing biometric information or unique identifiers used for authentication.\u003c/p\u003e\n\u003ch4 id=\"consent-management\"\u003eConsent Management\u003c/h4\u003e\n\u003cp\u003eObtaining and managing user consent for storing and utilizing biometric or personal data.\nAddressing these challenges involves meticulous planning, user education, and a well-structured implementation strategy. It\u0026rsquo;s crucial to balance security enhancements with user convenience and to proactively manage potential pitfalls during the adoption of FIDO authentication systems.\u003c/p\u003e\n\u003cp\u003eAdvancing Security and User Experience with FIDO\nFIDO authentication represents a monumental shift from traditional password-based security methods, offering a potent combination of heightened security and enhanced user convenience. By eliminating the vulnerabilities inherent in passwords, FIDO significantly strengthens the authentication landscape.\u003c/p\u003e\n\u003cp\u003eSecurity Advantages: FIDO mitigates password-related risks such as phishing, credential stuffing, and brute-force attacks. Its reliance on cryptographic authentication and biometric factors ensures a robust defense against various cyber threats.\u003c/p\u003e\n\u003cp\u003eUser-Centric Approach: FIDO\u0026rsquo;s emphasis on user experience is a game-changer. It simplifies authentication processes, reducing friction for users while bolstering security measures. The ease of use, coupled with increased security, creates a seamless and efficient authentication experience.\u003c/p\u003e\n\u003cp\u003eThe Future of Authentication: As industries and users recognize the limitations of traditional passwords, FIDO stands as the beacon for a passwordless future. Its standards, like FIDO U2F, FIDO2, and WebAuthn, provide a roadmap for a secure, convenient, and standardized authentication method.\u003c/p\u003e\n\u003cp\u003eIn essence, FIDO isn\u0026rsquo;t merely an alternative authentication mechanism; it\u0026rsquo;s a transformative force reshaping how we approach digital security. Embracing FIDO isn\u0026rsquo;t just a choice; it\u0026rsquo;s a strategic step towards fortifying digital identities and ensuring a safer online ecosystem for businesses and users alike.\u003c/p\u003e\n","description":"FIDO, short for Fast Identity Online, represents a paradigm shift in authentication methods, offering a more secure, seamless, and user-centric approach to safeguarding our digital lives. This groundbreaking technology is reshaping the landscape of digital security, promising to retire the age-old reliance on passwords and granting users a new frontier of secure authentication methods. In this comprehensive exploration, we embark on a journey through the intricate world of FIDO-based authentication. We'll delve deep into its mechanisms, understand its underlying principles, and explore how it reshapes our perception of authentication. Join us as we uncover the principles, advantages, and applications of FIDO authentication, paving the way for a more secure and user-friendly digital future.","image":"/images/blogs/fido/fido.png","permalink":"http://localhost:1313/blogs/fido/","title":"Embracing Passwordless Authentication with FIDO"},{"content":"\u003ch2 id=\"unveiling-the-elegance-of-api-design\"\u003eUnveiling the Elegance of API Design\u003c/h2\u003e\n\u003cp\u003eIn the intricate world of software architecture, API design emerges as a symphony, a composition that can either elevate a system to greatness or introduce complexities that echo through time. Joshua Bloch\u0026rsquo;s insights, shared in the iconic talk \u0026lsquo;\u003ca href=\"https://www.youtube.com/watch?v=aAb7hSCtvGw\u0026amp;t=8s\"\u003eHow to Design a Good API and Why it Matters\u003c/a\u003e,\u0026rsquo; in the year 2007, still serves as guiding principles for architects and developers seeking to sculpt APIs that stand the test of time.\u003c/p\u003e\n\u003ch2 id=\"mastering-the-art-of-designing-apis\"\u003eMastering the art of designing APIs\u003c/h2\u003e\n\u003cp\u003eApplication Programming Interface (API) is a mechanism using which the programming world interacts with your application. APIs are the instructions that clients send to the system in order to get some work done.\nThe APIs can be invoked via the same module, or within the system, or infact the public APIs are exposed to the world to interact with. The larger the audinece of the API, the more difficult it is to change them at a later stage. And hence it becomes very important to get the APIs right in the first attempt. And this is indeed a very difficult task.\u003c/p\u003e\n\u003cp\u003eArchitects and developers alike play the role of API design.\u003c/p\u003e\n\u003cp\u003eAPIs stand as the foundational pillars of software mastery. Their design can either propel a system toward excellence or introduce complexities that resonate throughout its lifecycle.\u003c/p\u003e\n\u003cp\u003ePublic APIs, much like diamonds, endure. Crafted with precision, they shape the software landscape for years, making it imperative to consider their longevity during the design phase. A system\u0026rsquo;s quality is determined by the quality of it\u0026rsquo;s public APIs.\u003c/p\u003e\n\u003ch2 id=\"the-good-api\"\u003eThe Good API\u003c/h2\u003e\n\u003cp\u003eAPI is a tool for programmers to develop systems on top of the APIs. Some characteristics of a good API are\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eMemorable\u003c/li\u003e\n\u003cli\u003eEasy to use\u003c/li\u003e\n\u003cli\u003eDifficult to misuse\u003c/li\u003e\n\u003cli\u003eBuilt for users\u003c/li\u003e\n\u003cli\u003eEnforcing better design\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eA good API should be easy to understand and remember. Even without reading the documentation, the API should reflect exactly what it is doing.\u003c/p\u003e\n\u003cp\u003eA good API should be simple to use, and difficult to misuse.\u003c/p\u003e\n\u003cp\u003eAn API is also like a blog, it should be designed according to the audience. i.e. the people with the context of the domain should be able to easily use the API.\u003c/p\u003e\n\u003cp\u003eIn the orchestration of APIs, simplicity emerges as the guiding light. Designs should be intuitive yet robust, enabling seamless integration for developers with minimal cognitive load.\u003c/p\u003e\n\u003ch2 id=\"process-of-developing-a-good-api\"\u003eProcess of developing a good API\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eUnderstand requirements\u003c/li\u003e\n\u003cli\u003eUnderstand the real need of the customers (whys)\u003c/li\u003e\n\u003cli\u003eStart with small spec\u003c/li\u003e\n\u003cli\u003eDiscuss and update the spec with multiple stakeholders\u003c/li\u003e\n\u003cli\u003eCreate simple early APIs to test and experiment\u003c/li\u003e\n\u003cli\u003eStart implementing it early to get early feedback\u003c/li\u003e\n\u003cli\u003eDocument right, provide good examples on usage\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"service-providers-interface-spi\"\u003eService Providers Interface (SPI)\u003c/h2\u003e\n\u003cp\u003eSPI stands for \u003cem\u003eService Provider Interface\u003c/em\u003e. It is a design pattern used in software development to enable the extension or replacement of components within a system without modifying its core.\u003c/p\u003e\n\u003cp\u003eThe SPI pattern defines a set of interfaces, and the actual implementations of these interfaces are provided by service providers.\u003c/p\u003e\n\u003cp\u003eThis allows for a flexible and modular architecture where different implementations of a service can be plugged in without affecting the rest of the system.\nJoshua refers to \u003ca href=\"https://dl.acm.org/doi/pdf/10.1145/211782.211785\"\u003eThe rules of three\u003c/a\u003e as specified by Will Tracz, and explains if we want to create a reusable API, we must try out atleast three implementations of it. When we create at least three different implementations, it helps in designing our APIs (SPI in this case) robust and strong enough to be resued in multiple other scenarios that we might not have thought of.\u003c/p\u003e\n\u003ch2 id=\"maintain-realistic-expectations\"\u003eMaintain realistic Expectations\u003c/h2\u003e\n\u003cp\u003eIn the dynamic landscape of API development, it\u0026rsquo;s crucial to approach the process with pragmatic expectations. Here are key principles to guide your mindset:\u003c/p\u003e\n\u003cp\u003eMost APIs Are Over-Constrained; Limit Them:\u003c/p\u003e\n\u003cp\u003eIt\u0026rsquo;s common for APIs to be burdened with unnecessary constraints, often stemming from an attempt to foresee every possible use case. However, this can lead to unnecessary complexity. Instead, focus on essential features and avoid over-constraining the API. Keep it streamlined and aligned with the core purpose.\nYou Cannot Make Everyone Happy, and You Don\u0026rsquo;t Have To:\u003c/p\u003e\n\u003cp\u003eRecognize that it\u0026rsquo;s impossible to cater to every individual preference or requirement. APIs serve diverse users with varied needs, and attempting to please everyone can result in an overly complex and compromised design. Instead, prioritize clarity, simplicity, and meeting the primary use cases.\nExpect to Make Mistakes; APIs Evolve Over Time:\u003c/p\u003e\n\u003cp\u003eEmbrace the iterative nature of API development. Mistakes and oversights are inevitable, but they present valuable learning opportunities. APIs are not static entities; they evolve based on feedback, changing requirements, and emerging technologies. Expecting and embracing evolution allows for continuous improvement and resilience in the face of evolving demands.\nMaintaining realistic expectations fosters adaptability and resilience in the API development journey. By acknowledging constraints, accepting diverse user needs, and embracing the evolution of APIs, developers set the stage for sustainable and effective API architectures.\u003c/p\u003e\n\u003ch2 id=\"apis-should-do-one-thing-and-do-it-well\"\u003eAPIs should do one thing, and do it well\u003c/h2\u003e\n\u003cp\u003eGoing back to the \u0026lsquo;S\u0026rsquo; of SOLID principles, one APIs should be taking up a single responsibility. An API that does only one thing, can make the usage easier, and by chosing the correct name for the API, the users can know exactly what the API delivers.\u003c/p\u003e\n\u003ch2 id=\"define-standards-and-follow-them\"\u003eDefine standards (and follow them)\u003c/h2\u003e\n\u003cp\u003eAPI for a larger system are developed by a team of software architects and developers. People come from different background and expertese. Defining standards to be followed in a system allows the system to meet a certain level of quality.\u003c/p\u003e\n\u003cp\u003eHaving standards clearly understood by the team reduces the time in understanding the requirements and development of the APIs\u003c/p\u003e\n\u003ch2 id=\"when-in-doubt---leave-it-out\"\u003eWhen in doubt - Leave it out\u003c/h2\u003e\n\u003cp\u003eThe most important point that Joshua wants to highlight is that an API can be modified later to add more functionality. But once a functionality is added to an API, it cannot be removed. So if you have a slight doubt if a functionality is fit in the API, most probably it is not. So leave it out. If at a later stage you believe that the functionality is important, the API can be evolved easily.\u003c/p\u003e\n\u003cp\u003eWhen can adding a functionality in an API is harmful? Whenever we add a functionality in an API it is available for all the clients of the API. It means, the functionality is enforced upon the users. We must evaluate thoroughly if adding a  functionality can negatively impact any of the users of the API. We should not break the defined functionalities in order to honor an optional or good to have feature.\u003c/p\u003e\n\u003ch2 id=\"exceptions\"\u003eExceptions\u003c/h2\u003e\n\u003cp\u003eAll APIs are subject to some exceptional behaviour. The exceptional scenarios of the APIs should be well defined, but must not leak the implementation details to the clients.\u003c/p\u003e\n\u003ch2 id=\"names-do-matter\"\u003eNames do matter\u003c/h2\u003e\n\u003cp\u003eIn the intricate dance of API design, the names chosen for functions, classes, and methods play a pivotal role. They serve as the interface\u0026rsquo;s expressive vocabulary, communicating intentions, and functionality to developers. Well-thought-out names make the API self-explanatory, reducing the cognitive load for users and making the code more readable and maintainable.\u003c/p\u003e\n\u003cp\u003eChoosing appropriate and intuitive names is not just a matter of semantics; it\u0026rsquo;s an art that influences how developers interact with the API. A carefully crafted name encapsulates the essence of the functionality, contributing to the overall elegance and usability of the API. In the symphony of code, the right names orchestrate a harmonious experience for developers.\u003c/p\u003e\n\u003ch2 id=\"documentation-matter\"\u003eDocumentation Matter\u003c/h2\u003e\n\u003cp\u003eDocumentation is the lantern that illuminates the path for developers navigating the landscape of an API. Beyond mere comments or descriptions, comprehensive and well-structured documentation is a beacon that guides users through the intricacies of the interface. It goes beyond the \u0026lsquo;what\u0026rsquo; and delves into the \u0026lsquo;how\u0026rsquo; and \u0026lsquo;why,\u0026rsquo; providing insights, examples, and best practices.\u003c/p\u003e\n\u003cp\u003eA robust API deserves documentation that acts as a companion, easing the learning curve and empowering developers to make the most of its capabilities. Well-documented APIs are more likely to be adopted seamlessly, fostering a positive developer experience. In the collaborative symphony of coding, documentation stands as a key score, ensuring that every participant can contribute harmoniously to the performance.\u003c/p\u003e\n\u003ch2 id=\"consider-performance-consequences-of-api-design-decisions\"\u003eConsider performance consequences of API design decisions\u003c/h2\u003e\n\u003cp\u003eEfficient API design goes beyond functionality; it extends to performance considerations. Neglecting the performance impacts of design decisions can lead to suboptimal system behavior. Here\u0026rsquo;s why and how to ensure your API design is performance-conscious:\u003c/p\u003e\n\u003cp\u003ePerformance Impacts by Surrounding Systems:\nRecognize that an API operates within an ecosystem, and its design can influence the performance of surrounding systems. Consider factors like the impact on memory usage, CPU load, and interactions with the garbage collector. Strive for a design that not only meets functional requirements but also minimizes adverse effects on the overall system performance.\u003c/p\u003e\n\u003ch2 id=\"fail-fast\"\u003eFail Fast\u003c/h2\u003e\n\u003cp\u003eIn the realm of API development, the principle of failing fast emerges as a crucial strategy. Failing fast involves identifying errors or issues as early as possible in the development process. Here\u0026rsquo;s why and how to embrace this principle:\u003c/p\u003e\n\u003cp\u003eEarly Validation and User Notification:\u003c/p\u003e\n\u003cp\u003eIncorporate robust validation mechanisms into your API. Detect issues, such as incorrect inputs or violations of constraints, at the earliest stage possible, preferably during compile time. By doing so, developers receive prompt feedback about potential problems, enabling faster debugging and resolution.\nDebugging Efficiency:\u003c/p\u003e\n\u003cp\u003eFailing fast enhances the efficiency of the debugging process. When errors are detected early, developers can pinpoint the root causes more rapidly. This proactive approach reduces the time and effort spent on troubleshooting, contributing to a more streamlined development workflow.\nCompile-Time Validation:\u003c/p\u003e\n\u003cp\u003eLeverage compile-time validation to catch errors before runtime. This approach shifts error identification to an earlier stage in the development lifecycle, reducing the likelihood of issues reaching production. Compile-time validation promotes code correctness and enhances the overall reliability of the API.\u003c/p\u003e\n","description":"Delve into the artistry of API design within the intricate realm of software architecture. This guide navigates through the essential principles shared by Joshua Bloch, encapsulating timeless insights that architects and developers utilize in sculpting enduring and effective APIs. Mastering API design is about crafting robust, intuitive, and lasting interfaces that resonate through the software lifecycle.","image":"/images/blogs/crafting-api-magic/crafting-api-magic.png","permalink":"http://localhost:1313/blogs/crafting-api-magic/","title":"Unveiling the Art and Essentials of API Design"},{"content":"\u003ch1 id=\"the-technology-of-modern-banks-innovations-shaping-the-financial-landscape\"\u003eThe Technology of Modern Banks: Innovations Shaping the Financial Landscape\u003c/h1\u003e\n\u003cp\u003eThe banking industry, a traditionally conservative sector, has witnessed a radical transformation driven by technological advancements. In the digital age, modern banks have become more than just places to store money; they are dynamic hubs of financial innovation. In this article, we delve deep into the technologies that are reshaping the modern banking landscape.\u003c/p\u003e\n\u003ch2 id=\"the-digital-banking-revolution\"\u003eThe Digital Banking Revolution\u003c/h2\u003e\n\u003ch3 id=\"online-banking-where-convenience-meets-innovation\"\u003eOnline Banking: Where Convenience Meets Innovation\u003c/h3\u003e\n\u003cp\u003eThe evolution of the internet has given rise to modern online banking, enabling customers to access their accounts through web and mobile applications. However, it doesn\u0026rsquo;t stop there. Modern online banking has expanded to include the convenience of making transactions via wearables, such as smartwatches and glasses. Moreover, advances in language engineering have resulted in the development of home speakers like Alexa, allowing customers to interact with conversational bots to make payments. It\u0026rsquo;s now as simple as saying, \u0026ldquo;Alexa, pay my rent,\u0026rdquo; and the rent is paid, making banking a seamless part of daily life.\u003c/p\u003e\n\u003ch3 id=\"mobile-payments-your-wallet-in-your-pocket\"\u003eMobile Payments: Your Wallet in Your Pocket\u003c/h3\u003e\n\u003cp\u003eIn today\u0026rsquo;s world, mobile devices have become an integral part of our lives. People may occasionally forget their wallets at home, but forgetting their mobile phones is a rare occurrence. Modern smartphones come equipped with NFC (Near Field Communication) technology, allowing users to make payments with a simple tap of their phone. This technology is propelling many countries toward becoming cashless or, at the very least, less reliant on physical currency. Digital wallets are making peer-to-peer transactions easier and reducing the need for physical cash, simplifying payment processes and reducing the burden of printing and managing physical notes.\u003c/p\u003e\n\u003ch2 id=\"core-banking-systems\"\u003eCore Banking Systems\u003c/h2\u003e\n\u003ch3 id=\"core-banking-software-the-engine-of-banking-operations\"\u003eCore Banking Software: The Engine of Banking Operations\u003c/h3\u003e\n\u003cp\u003eAt the core of modern banks is their core banking software. These systems facilitate real-time transaction processing, ensuring that customer transactions are completed swiftly and accurately. What makes these systems truly innovative is their modular design, which enhances flexibility and scalability. Banks can adapt to changing customer needs and regulatory requirements without overhauling their entire infrastructure.\u003c/p\u003e\n\u003ch3 id=\"cloud-native-architecture-embracing-scalability-and-efficiency\"\u003eCloud-Native Architecture: Embracing Scalability and Efficiency\u003c/h3\u003e\n\u003cp\u003eModern banks are increasingly shifting to cloud-native architecture, a move that enhances scalability and cost-efficiency. The cloud allows banks to leverage dynamic computing resources, ensuring that they can accommodate fluctuating workloads while optimizing operational costs. A case study on the benefits of cloud-native architecture for banks would provide further insight into how this technological shift can enhance efficiency and agility.\u003c/p\u003e\n\u003ch2 id=\"enhanced-customer-experience\"\u003eEnhanced Customer Experience\u003c/h2\u003e\n\u003ch3 id=\"understanding-customer-behavior-personalization-at-its-best\"\u003eUnderstanding Customer Behavior: Personalization at Its Best\u003c/h3\u003e\n\u003cp\u003eBanks have learned the value of understanding customer behavior and preferences. This knowledge enables them to offer tailored products and services that meet individual customer needs, fostering hyper-personalization. By analyzing transaction data and customer feedback, banks can offer relevant discounts, personalized financial advice, and custom-tailored solutions.\u003c/p\u003e\n\u003ch3 id=\"ai-and-machine-learning-chatbots-recommendations-and-support\"\u003eAI and Machine Learning: Chatbots, Recommendations, and Support\u003c/h3\u003e\n\u003cp\u003eArtificial Intelligence (AI) and Machine Learning (ML) have transformed the way banks interact with their customers. Chatbots and virtual assistants provide 24/7 support, helping customers with routine queries and tasks. Moreover, AI and ML algorithms can analyze customer data to offer personalized banking recommendations, making financial decisions more accessible and informed.\u003c/p\u003e\n\u003ch3 id=\"biometric-authentication-elevating-security\"\u003eBiometric Authentication: Elevating Security\u003c/h3\u003e\n\u003cp\u003eTo enhance security, modern banks have embraced biometric authentication methods, including fingerprint, facial, and voice recognition. These technologies provide customers with an extra layer of protection and convenience, as they can access their accounts securely using their unique biometric data. The ongoing innovations in biometric authentication ensure that customer data remains safe from unauthorized access.\u003c/p\u003e\n\u003ch2 id=\"big-data-and-analytics\"\u003eBig Data and Analytics\u003c/h2\u003e\n\u003ch3 id=\"harnessing-customer-insights-the-power-of-data\"\u003eHarnessing Customer Insights: The Power of Data\u003c/h3\u003e\n\u003cp\u003eBanks have recognized the value of big data in decision-making. They collect and analyze customer data to gain insights into behavior, preferences, and trends. Predictive analytics, powered by big data, assists banks in developing new products and services, as well as optimizing existing ones. A case study illustrating how banks leverage big data would demonstrate the practical benefits of these insights.\u003c/p\u003e\n\u003ch3 id=\"risk-management-detecting-and-preventing-fraud\"\u003eRisk Management: Detecting and Preventing Fraud\u003c/h3\u003e\n\u003cp\u003eBanks are increasingly turning to data analytics to detect and mitigate fraud risks. Real-time fraud detection systems employ sophisticated algorithms to identify suspicious transactions and prevent unauthorized access to customer accounts. Data analytics also play a pivotal role in credit scoring, helping banks make informed lending decisions.\u003c/p\u003e\n\u003ch2 id=\"regulatory-technology-regtech\"\u003eRegulatory Technology (RegTech)\u003c/h2\u003e\n\u003ch3 id=\"compliance-and-reporting-navigating-a-complex-regulatory-landscape\"\u003eCompliance and Reporting: Navigating a Complex Regulatory Landscape\u003c/h3\u003e\n\u003cp\u003eAs regulations become more complex, banks are turning to Regulatory Technology (RegTech) solutions. Automated compliance checks help banks stay in line with regulatory requirements, and real-time reporting and audit trails ensure transparency and accountability. RegTech solutions streamline the process of adhering to stringent financial regulations.\u003c/p\u003e\n\u003ch3 id=\"cybersecurity-safeguarding-sensitive-data\"\u003eCybersecurity: Safeguarding Sensitive Data\u003c/h3\u003e\n\u003cp\u003eThe protection of sensitive customer data is paramount for modern banks. Advanced cybersecurity measures, including threat detection and prevention, ensure that customer information remains confidential and secure. Innovations in cybersecurity technology are continuously evolving to counter emerging threats and vulnerabilities.\u003c/p\u003e\n\u003ch2 id=\"open-banking-and-apis\"\u003eOpen Banking and APIs\u003c/h2\u003e\n\u003ch3 id=\"expanding-ecosystems-the-open-banking-revolution\"\u003eExpanding Ecosystems: The Open Banking Revolution\u003c/h3\u003e\n\u003cp\u003eOpen banking is reshaping the financial ecosystem, opening the doors to collaboration and innovation. API marketplaces and partnerships enable banks to connect with third-party developers and create a vibrant financial services ecosystem. Empowering third-party developers fosters the creation of innovative financial products and services, benefitting both banks and customers.\u003c/p\u003e\n\u003ch2 id=\"blockchain-and-cryptocurrencies\"\u003eBlockchain and Cryptocurrencies\u003c/h2\u003e\n\u003ch3 id=\"the-promise-of-blockchain-transparency-and-security\"\u003eThe Promise of Blockchain: Transparency and Security\u003c/h3\u003e\n\u003cp\u003eBlockchain technology has gained prominence in modern banking due to its promise of transparency and security. Smart contracts automate processes and transactions, reducing the need for intermediaries. Real-world applications of blockchain in banking range from cross-border payments to supply chain finance, showcasing the potential to transform various aspects of the industry.\u003c/p\u003e\n\u003ch3 id=\"cryptocurrencies-digital-assets-on-the-rise\"\u003eCryptocurrencies: Digital Assets on the Rise\u003c/h3\u003e\n\u003cp\u003eCryptocurrencies have emerged as digital assets with the potential to reshape the financial landscape. Bitcoin, Ethereum, and other cryptocurrencies are gaining acceptance within the banking sector. The adoption of cryptocurrencies by modern banks demonstrates their readiness to embrace change and leverage the advantages offered by digital currencies.\u003c/p\u003e\n\u003ch3 id=\"central-bank-digital-currencies-cbdcs-governments-in-the-crypto-game\"\u003eCentral Bank Digital Currencies (CBDCs): Governments in the Crypto Game\u003c/h3\u003e\n\u003cp\u003eGovernments worldwide are showing interest in Central Bank Digital Currencies (CBDCs). Several countries have already started adapting to CBDCs, offering new possibilities for international payments and cross-border transactions. The evolution of CBDCs presents significant implications for modern banking.\u003c/p\u003e\n\u003ch2 id=\"conclusion\"\u003eConclusion\u003c/h2\u003e\n\u003cp\u003eThe technology of modern banks is a testament to the rapid evolution of the financial industry. As traditional banks adapt to the digital age, they embrace online banking, mobile payments, and cloud-native architecture to provide customers with convenience, security, and flexibility. Behind the scenes, core banking systems, AI-driven customer experiences, big data analytics, and RegTech solutions ensure smooth operations and regulatory compliance.\u003c/p\u003e\n\u003cp\u003eOpen banking and blockchain technology are reshaping the financial ecosystem, fostering innovation and collaboration. The adoption of cryptocurrencies and the rise of CBDCs demonstrate the industry\u0026rsquo;s readiness to embrace change.\u003c/p\u003e\n\u003cp\u003eIn this era of constant innovation, modern banks must stay ahead of the technological curve, continually improving the services they offer to remain competitive and meet the ever-evolving needs of their customers. The future holds endless possibilities as the banking industry continues to harness technology to redefine the financial experience for all.\u003c/p\u003e\n","description":"In the digital age, modern banks have become more than just places to store money; they are dynamic hubs of financial innovation. In this article, we delve deep into the technologies that are reshaping the modern banking landscape.","image":"/images/blogs/the-technology-of-modern-bank/the-technology-of-modern-bank.png","permalink":"http://localhost:1313/blogs/the-technology-of-modern-banks/","title":"The technology of modern banks"},{"content":"\u003ch1 id=\"unlocking-the-power-of-large-language-models-in-the-world-of-it-embracing-chatgpt\"\u003eUnlocking the Power of Large Language Models in the World of IT: Embracing ChatGPT\u003c/h1\u003e\n\u003cp\u003eAs technology continues to evolve, the integration of artificial intelligence has become a game-changer in both the software and banking industries. One remarkable development in this AI landscape is the advent of Large Language Models (LLMs), which are transforming the way we interact with computers and data.\u003c/p\u003e\n\u003ch2 id=\"introduction-to-large-language-models\"\u003eIntroduction to Large Language Models\u003c/h2\u003e\n\u003cp\u003eA Large Language Model, or LLM, is more than just a fancy acronym. It represents a type of artificial intelligence algorithm, often referred to as a \u0026ldquo;model,\u0026rdquo; that undergoes extensive training on an expansive corpus of textual data. This training equips LLMs with a profound understanding of language patterns and structures, enabling them to perform a wide array of tasks, including:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eGenerating text: From poems and stories to complex code snippets, LLMs can produce content that\u0026rsquo;s remarkably human-like.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLanguage translation: They excel at bridging linguistic gaps by translating text from one language to another.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eComprehensive question-answering: LLMs provide detailed and informative responses to queries.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eText summarization: They condense lengthy documents into concise summaries, enhancing content curation and information retrieval.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eCreative content creation: LLMs have a knack for producing imaginative pieces of writing.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eIn essence, LLMs have reshaped how we interact with technology. They\u0026rsquo;ve breathed life into automated chatbots, enabling more engaging and natural conversations with users. Moreover, they\u0026rsquo;ve empowered content generation and text summarization.\u003c/p\u003e\n\u003cp\u003eToday, several notable LLMs are leading the charge in AI innovation:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eChatGPT\u003c/strong\u003e: A versatile conversational partner.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eBard\u003c/strong\u003e: An artist in the realm of creative content.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eGoogle Translate\u003c/strong\u003e: Bridging language barriers with precision.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eGrammarly\u003c/strong\u003e: Enhancing writing with grammar and style checks.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eBing\u003c/strong\u003e: Leveraging LLMs for various language-related tasks.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"generative-pre-trained-transformer-gpt\"\u003eGenerative Pre-trained Transformer (GPT)\u003c/h2\u003e\n\u003cp\u003eAmong these LLMs, one family stands out: Generative Pre-trained Transformers (GPT). The \u0026ldquo;GPT\u0026rdquo; in its name signifies \u0026ldquo;Generative Pre-trained Transformer,\u0026rdquo; and it encapsulates the essence of these models.\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eGenerative\u003c/strong\u003e: GPT models have a remarkable ability to generate human-like text. They can take a prompt or an incomplete sentence and produce contextually relevant text to complete it.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003ePre-trained\u003c/strong\u003e: Before they\u0026rsquo;re ready for action, GPT models undergo extensive pre-training on massive amounts of textual data. During this phase, they learn the intricate patterns and structures of language.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eTransformer\u003c/strong\u003e: GPT models are built upon the Transformer architecture, a powerful neural network design known for handling sequential data with exceptional proficiency. This architecture has been a pivotal advancement in deep learning and has paved the way for potent language models.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"key-features-of-gpt-models\"\u003eKey Features of GPT Models\u003c/h2\u003e\n\u003cp\u003eGPT models are not one-size-fits-all; they come in various sizes, from GPT-1 to GPT-3 and beyond. The size correlates with performance, with larger models delivering superior results but necessitating more computational resources.\u003c/p\u003e\n\u003cp\u003eThese models are versatile and adaptable, capable of being fine-tuned for specific language tasks. Here are the key features that make GPT models stand out:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eHuman-Like Text Generation\u003c/strong\u003e: GPT models have the uncanny ability to produce text that\u0026rsquo;s virtually indistinguishable from human-authored content. This quality makes them invaluable for content generation, chatbots, and more.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eLanguage Understanding\u003c/strong\u003e: GPT models comprehend language intricacies. They can answer questions, complete sentences, and provide contextually relevant responses in conversations.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eLanguage Translation\u003c/strong\u003e: These models excel at language translation tasks, ensuring high accuracy when converting text from one language to another.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003cstrong\u003eText Summarization\u003c/strong\u003e: GPT models are adept at summarizing lengthy documents into concise and coherent summaries. This capability proves invaluable for content curation and efficient information retrieval.\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"the-architecture-in-action\"\u003eThe Architecture in Action\u003c/h2\u003e\n\u003cimg src=\"/images/blogs/large-language-models/large-language-models.png\" alt=\"Tech Mindmap\" class=\"responsive-image\"\u003e\n\u003cp\u003eThe system architecture harnesses the power of a Large Language Model (LLM) meticulously trained on extensive internet and literary text. This LLM takes the lead in natural language understanding and generation.\u003c/p\u003e\n\u003cp\u003eUsers interact with the system through a user-friendly interface, reminiscent of an online chat. This interface serves as a portal for inquiries and information retrieval.\u003c/p\u003e\n\u003cp\u003eUnder the hood, the LLM communicates with a range of APIs, serving as intermediaries for comprehension and data retrieval. These APIs ensure seamless communication between the LLM and the external systems.\u003c/p\u003e\n\u003cp\u003eData storage plays a pivotal role, functioning as a digital repository for essential information. This repository enhances the LLM\u0026rsquo;s capabilities by providing historical context.\u003c/p\u003e\n\u003cp\u003eWhat\u0026rsquo;s truly fascinating is the system\u0026rsquo;s extensibility. By integrating plugins, the LLM\u0026rsquo;s functionality can be expanded. For example, a translation plugin can be incorporated to enable multilingual capabilities, while a creative writing plugin can equip the LLM to craft compelling narratives. These plugins act as specialized tools, amplifying the LLM\u0026rsquo;s skill set for specific tasks.\u003c/p\u003e\n\u003cp\u003eIn summation, the system draws its strength from a highly proficient LLM, trained on an extensive corpus of text data. It elevates human-computer interaction to a more natural level, offering the potential for enhanced versatility through task-specific plugins.\u003c/p\u003e\n\u003cp\u003eAs we navigate the ever-evolving landscape of AI and technology, Large Language Models like GPT continue to reshape the way we work and engage with data. These models empower innovation in both the software and banking industries, opening doors to new possibilities and more intuitive human-computer interactions. Embracing the potential of LLMs is not just an option; it\u0026rsquo;s a strategic advantage in the IT world.\u003c/p\u003e\n","description":"As technology continues to evolve, the integration of artificial intelligence has become a game-changer in both the software and banking industries. One remarkable development in this AI landscape is the advent of Large Language Models (LLMs), which are transforming the way we interact with computers and data.","image":"/images/blogs/large-language-models/large-language-models.png","permalink":"http://localhost:1313/blogs/large-language-models/","title":"Unlocking the Power of Large Language Models in the World of IT"},{"content":"\u003cp\u003eAs a technology enthusiast, I\u0026rsquo;ve had the honor of witnessing the ever-evolving landscape of software development. In today\u0026rsquo;s world, software is the beating heart of virtually every industry. It\u0026rsquo;s what empowers businesses to connect with their audience, streamline operations, and explore new horizons. In this article, we\u0026rsquo;re going to dive into the core pillars of our technology stack, giving special attention to the web, mobile, services, and DevOps domains. Let\u0026rsquo;s journey through these technologies and explore how they\u0026rsquo;re shaping the present and future of software development.\u003c/p\u003e\n\u003ch2 id=\"web-development-angular-and-react\"\u003eWeb Development: Angular and React\u003c/h2\u003e\n\u003cp\u003eIn the realm of web development, we find ourselves at a fascinating intersection of innovation and user experience. We often turn to two powerful JavaScript frameworks: Angular and React. Angular stands out for its rich feature set, offering a comprehensive platform for building complex web applications. What\u0026rsquo;s particularly interesting is its use of TypeScript, which brings strong typing into the mix, elevating code quality and maintainability. On the flip side, we have React, celebrated for its component-based architecture, ideal for crafting dynamic and interactive user interfaces. It has gained immense popularity due to its adaptability and optimizations for performance.\u003c/p\u003e\n\u003ch2 id=\"mobile-app-development-kotlin-and-swift\"\u003eMobile App Development: Kotlin and Swift\u003c/h2\u003e\n\u003cp\u003eThe world of mobile app development has undergone a remarkable transformation over the years. For Android app development, we\u0026rsquo;ve embraced Kotlin, a modern, expressive language that enhances developer productivity while ensuring code safety. Its smooth interoperability with Java makes it a versatile choice. On the iOS front, we turn to Swift, Apple\u0026rsquo;s language of choice. Swift boasts a concise syntax and performance optimizations, making the development process smoother and resulting in more reliable and efficient iOS apps.\u003c/p\u003e\n\u003ch2 id=\"services-the-power-trio-of-java-nodejs-and-go\"\u003eServices: The Power Trio of Java, Node.js, and Go\u003c/h2\u003e\n\u003cp\u003eWhen it comes to server-side technologies and services, our toolkit boasts a dynamic trio: Java, Node.js, and GoLang (Go). Java\u0026rsquo;s adaptability makes it a reliable choice for a plethora of applications, from web services to enterprise software. Its extensive ecosystem, including frameworks like Spring, provides a solid foundation for building scalable, high-performance systems. Node.js, a popular JavaScript runtime, thrives with its efficient event-driven, non-blocking I/O model, making it a perfect fit for real-time applications and microservices. Then there\u0026rsquo;s GoLang, a statically typed language known for its simplicity, speed, and efficiency. It\u0026rsquo;s an ideal choice for building scalable and performant services, especially in the era of cloud-native computing.\u003c/p\u003e\n\u003ch2 id=\"devops-kubernetes-and-docker\"\u003eDevOps: Kubernetes and Docker\u003c/h2\u003e\n\u003cp\u003eDevOps practices have revolutionized the way we approach software development and deployment. At Xebia IT Architects, we turn to Kubernetes to orchestrate and manage containerized applications at scale. Its capabilities for automation, scalability, and resilience have made it an essential part of our tech stack. Docker, the containerization technology, simplifies the packaging and deployment of applications across diverse environments. It streamlines the development process, allowing teams to focus on building, testing, and deploying software without the headache of compatibility issues.\u003c/p\u003e\n\u003cp\u003eIn conclusion, our approach to software development is a testament to our commitment to excellence and innovation. The technologies we embrace, including Angular, React, Kotlin, Swift, Java, Node.js, GoLang, Kubernetes, and Docker, reflect our dedication to providing robust, scalable, and efficient solutions for our clients. In the ever-evolving world of technology, staying at the forefront of these advancements is not just a goal but a necessity. As a tech enthusiast with Indian roots at Xebia IT Architects, I\u0026rsquo;m thrilled to lead our team into a future where software remains the driving force behind industries\u0026rsquo; success and transformation. Together, we\u0026rsquo;ll continue shaping the technology landscape of tomorrow.\u003c/p\u003e\n","description":"In today's world, software is the beating heart of virtually every industry. It's what empowers businesses to connect with their audience, streamline operations, and explore new horizons. In this article, we're going to dive into the core pillars of our technology stack, giving special attention to the web, mobile, services, and DevOps domains. Let's journey through these technologies and explore how they're shaping the present and future of software development.","image":"/images/blogs/technologies/home.png","permalink":"http://localhost:1313/blogs/technologies/","title":"Unveiling the Tech Ecosystem - A Techie's Take on Software Development"},{"content":"","description":"My gallery :earth_asia:","image":null,"permalink":"http://localhost:1313/gallery/","title":"Image Gallery"}]