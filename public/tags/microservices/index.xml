<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Microservices on Mohit Kanwar&#39;s App : My Cents</title>
    <link>http://localhost:1313/tags/microservices/</link>
    <description>Recent content in Microservices on Mohit Kanwar&#39;s App : My Cents</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Jul 2024 14:31:54 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/microservices/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Authenticating Services in a Microservices Environment</title>
      <link>http://localhost:1313/blogs/2024/jul/authenticating-services-in-a-microservices-environment/</link>
      <pubDate>Wed, 17 Jul 2024 14:31:54 +0530</pubDate>
      <guid>http://localhost:1313/blogs/2024/jul/authenticating-services-in-a-microservices-environment/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;It is easier to edit a draft than to create a new. I   understand that this blog is not upto the mark that I want it to be, however, I am still publishing it, so that I can keep on improving it.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;The code for this blog is checked-in at &lt;a href=&#34;https://github.com/mohitkanwar/spring-microservices-framework&#34;&gt;https://github.com/mohitkanwar/spring-microservices-framework&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;While developing a microservices setup, one of the prime aspect is taking care of the security of the APIs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Approaches to Software Architecture</title>
      <link>http://localhost:1313/blogs/2024/mar/architectural-patterns/</link>
      <pubDate>Fri, 15 Mar 2024 23:54:53 +0530</pubDate>
      <guid>http://localhost:1313/blogs/2024/mar/architectural-patterns/</guid>
      <description>&lt;p&gt;The architecture of a building plays a critical role in its usability and longevity. Similarly, the architecture of a software application is vital for ensuring scalability, maintainability, and overall system success.&#xA;In this blog, we will delve into different architectural approaches that can be employed to achieve these goals:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Layering&lt;/li&gt;&#xA;&lt;li&gt;Microservices&lt;/li&gt;&#xA;&lt;li&gt;Event driven architecture&lt;/li&gt;&#xA;&lt;li&gt;Domain driven design&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;layering-defining-clear-responsibilities&#34;&gt;Layering: Defining Clear Responsibilities&lt;/h2&gt;&#xA;&lt;p&gt;Layering is a fundamental architectural concept that involves segregating responsibilities into different layers. By creating distinct layers, we can clearly define the responsibilities of each layer, improving security and protecting downstream layers from potential attacks.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
