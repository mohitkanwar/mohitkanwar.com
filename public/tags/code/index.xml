<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code on Mohit Kanwar&#39;s App : My Cents</title>
    <link>http://localhost:1313/tags/code/</link>
    <description>Recent content in Code on Mohit Kanwar&#39;s App : My Cents</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Jul 2024 14:31:54 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Authenticating Services in a Microservices Environment</title>
      <link>http://localhost:1313/blogs/2024/jul/authenticating-services-in-a-microservices-environment/</link>
      <pubDate>Wed, 17 Jul 2024 14:31:54 +0530</pubDate>
      <guid>http://localhost:1313/blogs/2024/jul/authenticating-services-in-a-microservices-environment/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;It is easier to edit a draft than to create a new. I   understand that this blog is not upto the mark that I want it to be, however, I am still publishing it, so that I can keep on improving it.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;The code for this blog is checked-in at &lt;a href=&#34;https://github.com/mohitkanwar/spring-microservices-framework&#34;&gt;https://github.com/mohitkanwar/spring-microservices-framework&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;While developing a microservices setup, one of the prime aspect is taking care of the security of the APIs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Configuration Management Microservice</title>
      <link>http://localhost:1313/blogs/2024/mar/configuration-management-microservices/</link>
      <pubDate>Mon, 11 Mar 2024 09:34:39 +0530</pubDate>
      <guid>http://localhost:1313/blogs/2024/mar/configuration-management-microservices/</guid>
      <description>&lt;p&gt;Configuration management is a crucial yet often overlooked aspect of working with microservices. In a microservices environment, managing various configurations, including those related to client applications, business processes, and technical settings, can become complex. This complexity is further amplified when dealing with multiple environments such as development, QA, and production, each requiring different configurations.&lt;/p&gt;&#xA;&lt;p&gt;While organizations typically maintain version control for their codebase, the versioning of configurations is sometimes neglected. In this article, we will explore how we can create a configuration management microservice using Spring Cloud Config, a powerful solution provided by the Spring framework. We will specifically focus on its applicability in the FinTech industry.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
